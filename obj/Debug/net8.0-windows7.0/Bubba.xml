<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bubba</name>
    </assembly>
    <members>
        <member name="T:Bubba.App">
            <inheritdoc />
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="F:Bubba.App._windowPlace">
            <summary>
            The window place
            </summary>
        </member>
        <member name="F:Bubba.App._instructions">
            <summary>
            The instructions
            </summary>
        </member>
        <member name="P:Bubba.App.ActiveWindows">
            <summary>
            The active windows
            </summary>
        </member>
        <member name="F:Bubba.App.Controls">
            <summary>
            The controls
            </summary>
        </member>
        <member name="M:Bubba.App.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.App" /> class.
            </summary>
        </member>
        <member name="P:Bubba.App.Instructions">
            <summary>
            The system instructions
            </summary>
        </member>
        <member name="F:Bubba.App.OpenAiKey">
            <summary>
            The open ai API key
            </summary>
        </member>
        <member name="F:Bubba.App.GoogleKey">
            <summary>
            The google API key
            </summary>
        </member>
        <member name="M:Bubba.App.RegisterTheme">
            <summary>
            Registers the _theme.
            </summary>
        </member>
        <member name="M:Bubba.App.GetApplicationDirectory(System.String)">
            <summary>
            Gets the application directory.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.App.SetupRestoreWindowPlace(Bubba.ChatWindow)">
            <summary>
            Setups the restore window place.
            </summary>
            <param name="mainWindow">
            The main window.
            </param>
        </member>
        <member name="M:Bubba.App.HandleException(System.Exception)">
            <summary>
            Handles the exception.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.App.OnStartup(System.Object,System.Windows.StartupEventArgs)">
            <inheritdoc />
            <summary>
            Raises the
            <see cref="E:System.Windows.Application.Startup" /> event.
            </summary>
            <param name = "sender" > </param>
            <param name="e">
            that contains the event data.
            </param>
        </member>
        <member name="M:Bubba.App.OnExit(System.Object,System.Windows.ExitEventArgs)">
            <inheritdoc />
            <summary>
            Raises the <see cref="E:System.Windows.Application.Exit" /> event.
            </summary>
            <param name = "sender" > </param>
            <param name="e">An <see cref="T:System.Windows.ExitEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Bubba.App.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:Bubba.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:Bubba.Serialize">
            <summary>
            
            </summary>
            <param name="data">The data.</param>
            <returns/>
        </member>
        <member name="T:Bubba.SetterCallback">
            <summary>
            
            </summary>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.DictionaryConverter">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.DictionaryConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
            <summary>
            Reads and converts the JSON to a Dictionary(string, object).
            </summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>
            The converted value.
            </returns>
            <exception cref="T:Newtonsoft.Json.JsonException">
            Expected StartObject token
            or
            Expected PropertyName token
            or
            Unexpected token {reader.TokenType}
            or
            Expected EndObject token
            </exception>
        </member>
        <member name="M:Bubba.DictionaryConverter.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
            <summary>
            Writes a specified value as JSON.
            </summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="T:Bubba.EnvironmentConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="M:Bubba.EnvironmentConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="M:Bubba.EnvironmentConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />, the valid null value is used.
            </returns>
        </member>
        <member name="T:Bubba.TitleConverter">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Data.IValueConverter" />
        </member>
        <member name="F:Bubba.TitleConverter._build">
            <summary>
            The build
            </summary>
        </member>
        <member name="M:Bubba.TitleConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />,
            the valid null value is used.
            </returns>
        </member>
        <member name="M:Bubba.TitleConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns <see langword="null" />,
            the valid null value is used.
            </returns>
        </member>
        <member name="T:Bubba.AdapterBase">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:System.Data.Common.DbDataAdapter"/>
            <seealso cref="T:Bubba.ISource"/>
            <seealso cref="T:Bubba.IProvider"/>                                                  
        </member>
        <member name="F:Bubba.AdapterBase._budgetCommand">
            <summary>
            The command factory
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._commands">
            <summary>
            The commands
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._commandText">
            <summary>
            The command text
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._commandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._criteria">
            <summary>
            The criteria
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._dataConnection">
            <summary>
            The data connection
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.AdapterBase._sqlStatement">
            <summary>
            The SQL statement
            </summary>
        </member>
        <member name="M:Bubba.AdapterBase.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AdapterBase" /> class.
            </summary>
        </member>
        <member name="M:Bubba.AdapterBase.CreateSQLiteAdapter">
            <summary>
            Gets the sql lite adapter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AdapterBase.CreateSqlDataAdapter">
            <summary>
            Gets the SQL adapter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AdapterBase.CreateOleDbAdapter">
            <summary>
            Gets the OLE database adapter.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AdapterBase.CreateSqlCompactAdapter">
            <summary>
            Gets the SQL ce adapter.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.AdapterBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="T:Bubba.BudgetUnit">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.DataUnit" />
            <seealso cref="T:Badger.IBudgetUnit" />
        </member>
        <member name="F:Bubba.BudgetUnit._fiscalYear">
            <summary>
            The fiscal year
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._bfy">
            <summary>
            The bfy
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._efy">
            <summary>
            The efy
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._fundCode">
            <summary>
            The fund code
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._fundName">
            <summary>
            The fund name
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._mainAccount">
            <summary>
            The main account
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._treasuryAccountCode">
            <summary>
            The treasury account code
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._treasuryAccountName">
            <summary>
            The treasury account name
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._budgetAccountCode">
            <summary>
            The budget account code
            </summary>
        </member>
        <member name="F:Bubba.BudgetUnit._budgetAccountName">
            <summary>
            The budget account name
            </summary>
        </member>
        <member name="P:Bubba.BudgetUnit.FiscalYear">
            <summary>
            Gets the fiscal year.
            </summary>
            <value>
            The fiscal year.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.BFY">
            <inheritdoc />
            <summary>
            Gets or sets the bfy.
            </summary>
            <value>
            The bfy.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.EFY">
            <inheritdoc />
            <summary>
            Gets or sets the efy.
            </summary>
            <value>
            The efy.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.FundCode">
            <inheritdoc />
            <summary>
            Gets or sets the fund code.
            </summary>
            <value>
            The fund code.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.FundName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the fund.
            </summary>
            <value>
            The name of the fund.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.MainAccount">
            <summary>
            Gets the main account.
            </summary>
            <value>
            The main account.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.TreasuryAccountCode">
            <inheritdoc />
            <summary>
            Gets or sets the treasury account code.
            </summary>
            <value>
            The treasury account code.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.TreasuryAccountName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the treasury account.
            </summary>
            <value>
            The name of the treasury account.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.BudgetAccountCode">
            <inheritdoc />
            <summary>
            Gets or sets the budget account code.
            </summary>
            <value>
            The budget account code.
            </value>
        </member>
        <member name="P:Bubba.BudgetUnit.BudgetAccountName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the budget account.
            </summary>
            <value>
            The name of the budget account.
            </value>
        </member>
        <member name="E:Bubba.BudgetUnit.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.BudgetUnit.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetUnit" /> class.
            </summary>
        </member>
        <member name="M:Bubba.BudgetUnit.#ctor(Bubba.IQuery)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetUnit" /> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Bubba.BudgetUnit.#ctor(Bubba.IDataService)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetUnit" /> class.
            </summary>
            <param name="dataBuilder">The query.</param>
        </member>
        <member name="M:Bubba.BudgetUnit.#ctor(System.Data.DataRow)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetUnit" /> class.
            </summary>
            <param name="dataRow">The data row.</param>
        </member>
        <member name="M:Bubba.BudgetUnit.OnPropertyChanged(System.String)">
            <inheritdoc />
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Bubba.CommandBase">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Bubba.ISource"/>
            <seealso cref="T:Bubba.IProvider"/>
        </member>
        <member name="F:Bubba.CommandBase._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.CommandBase._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.CommandBase._commandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Bubba.CommandBase._command">
            <summary>
             
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.CommandBase._connection">
            <summary>
             
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.CommandBase._sqlStatement">
            <summary>
             
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:Bubba.CommandBase.Source">
            <inheritdoc />
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.CommandBase.Provider">
            <inheritdoc />
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.CommandBase.CommandType">
            <inheritdoc />
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.CommandBase.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            command.
            </value>
        </member>
        <member name="P:Bubba.CommandBase.Connection">
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.CommandBase.SqlStatement">
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="M:Bubba.CommandBase.GetSQLiteCommand">
            <summary>
            Gets the sqlite command.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.CommandBase.GetSqlCeCommand">
            <summary>
            Gets the SQL ce command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.CommandBase.GetSqlCommand">
            <summary>
            Gets the SQL command.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.CommandBase.GetOleDbCommand">
            <summary> Gets the OLE database command. </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.CommandBase.Fail(System.Exception)">
            <summary> Fails the specified ex. </summary>
            <param name="ex"> The ex. </param>
        </member>
        <member name="T:Bubba.ConnectionBase">
            <summary> </summary>
        </member>
        <member name="F:Bubba.ConnectionBase._source">
            <summary>
            The source
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._provider">
            <summary>
            The provider
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._connection">
            <summary>
             
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._dataPath">
            <summary>
             
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._extension">
            <summary>
            
            </summary>
            <value>
             
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._sqlStatement">
            <summary>
             
            </summary>
            <value>
            
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._pathExtension">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._filePath">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._fileName">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._tableName">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="F:Bubba.ConnectionBase._connectionString">
            <summary>
            
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.DataPath">
            <summary>
            Gets or sets the client path.
            </summary>
            <value>
            The client path.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.PathExtension">
            <summary>
            Gets or sets the path extension.
            </summary>
            <value>
            The path extension.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Bubba.ConnectionBase.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>
            The connection string.
            </value>
        </member>
        <member name="M:Bubba.ConnectionBase.GetClientPath(Bubba.Provider)">
            <summary>
            Gets the database client path.
            </summary>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ConnectionBase.GetClientPath(System.String)">
            <summary>
            Gets the database client path.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ConnectionBase.CreateConnectionString(Bubba.Provider)">
            <summary>
            Creates the connection string.
            </summary>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ConnectionBase.CreateConnectionString(System.String)">
            <summary>
            Creates the connection string.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ConnectionBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.DataUnit">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.IDataUnit" />
            <seealso cref="T:Bubba.ISource" />
            <seealso cref="T:Bubba.IProvider" />
        </member>
        <member name="F:Bubba.DataUnit._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._record">
            <summary>
            The record
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._map">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.DataUnit._value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.ID">
            <summary>
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.DataUnit.Code">
            <inheritdoc />
            <summary>
            Gets the field.
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.Name">
            <inheritdoc />
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.Value">
            <inheritdoc />
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Bubba.DataUnit.Record">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.Provider">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.Source">
            <inheritdoc />
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:Bubba.DataUnit.Map">
            <inheritdoc />
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="E:Bubba.DataUnit.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.DataUnit.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataUnit"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DataUnit.#ctor(Bubba.IDataService)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataUnit"/> class.
            </summary>
            <param name="builder">The query.</param>
        </member>
        <member name="M:Bubba.DataUnit.#ctor(Bubba.IQuery)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataUnit"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Bubba.DataUnit.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataUnit"/> class.
            </summary>
            <param name="dataRow">The data row.</param>
        </member>
        <member name="M:Bubba.DataUnit.IsMatch(Bubba.IDataUnit)">
            <inheritdoc />
            <summary>
            Determines whether the specified element is match.
            </summary>
            <param name="unit">The element.</param>
            <returns>
            <c> true </c>
            if the specified element is match; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.DataUnit.IsMatch(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Determines whether the specified dictionary is match.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns>
            <c> true </c>
            if the specified dictionary is match; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.DataUnit.IsMatch(Bubba.IDataUnit,Bubba.IDataUnit)">
            <inheritdoc />
            <summary>
            Determines whether the specified primary is match.
            </summary>
            <param name="primary">The primary.</param>
            <param name="secondary">The secondary.</param>
            <returns>
              <c>true</c> if the specified primary is match;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DataUnit.GetId">
            <inheritdoc />
            <summary>
            Gets the identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataUnit.GetId(System.Data.DataRow)">
            <inheritdoc />
            <summary>
            Gets the identifier.
            </summary>
            <param name="dataRow">The data row.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataUnit.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.DataUnit.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.Dimension">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Dimension._columns">
            <summary>
            The columns
            </summary>
        </member>
        <member name="F:Bubba.Dimension._dataTable">
            <summary>
            Gets or sets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="F:Bubba.Dimension._dates">
            <summary>
            The dates
            </summary>
        </member>
        <member name="F:Bubba.Dimension._fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="F:Bubba.Dimension._numerics">
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="F:Bubba.Dimension._records">
            <summary>
            The records
            </summary>
        </member>
        <member name="F:Bubba.Dimension._values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="M:Bubba.Dimension.ThrowIfNotNumeric(System.String)">
            <summary>
            Throws if null numeric.
            </summary>
            <param name="numeric">The numeric.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Bubba.Dimension.ThrowIfNotField(System.String)">
            <summary>
            Throws if null field.
            </summary>
            <param name="field">The field.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Bubba.Dimension.ThrowIfNotDate(System.String)">
            <summary>
            Throws if null date.
            </summary>
            <param name="date">The date.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Bubba.Dimension.ThrowIfNotCriteria(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Throws if null criteria.
            </summary>
            <param name="where">The where.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:Bubba.Dimension.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.IAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IAmount.Value">
            <summary>
            Gets the funding.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Bubba.IAmount.Numeric">
            <summary>
            Gets the numeric column.
            </summary>
            <value>
            The numeric.
            </value>
        </member>
        <member name="M:Bubba.IAmount.GetAmount">
            <summary>
            Gets the IAmount
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.IAsyncService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IAsyncService.Criteria">
            <inheritdoc />
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.SqlStatement">
            <inheritdoc />
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Connection">
            <inheritdoc />
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.DataAdapter">
            <inheritdoc />
            <summary>
            Gets or sets the data adapter.
            </summary>
            <value>
            The data adapter.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.DataSet">
            <inheritdoc />
            <summary>
            Gets or sets the data private protected set.
            </summary>
            <value>
            The data private protected set.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.DataTable">
            <summary>
            Gets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.DataColumns">
            <summary>
            Gets or sets the data columns.
            </summary>
            <value>
            The data columns.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.ColumnNames">
            <summary>
            Gets or sets the column names.
            </summary>
            <value>
            The column names.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Dates">
            <summary>
            Gets or sets the dates.
            </summary>
            <value>
            The dates.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Numerics">
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Query">
            <inheritdoc />
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Record">
            <inheritdoc />
            <summary>
            Gets or sets the record.
            </summary>
            <value>
            The record.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Keys">
            <inheritdoc />
            <summary>
            Gets or sets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.Map">
            <inheritdoc />
            <summary>
            Gets or sets the map.
            </summary>
            <value>
            The map.
            </value>
        </member>
        <member name="P:Bubba.IAsyncService.DataElements">
            <inheritdoc/>
            <summary>
            Gets the data elements.
            </summary>
            <value>
            The data elements.
            </value>
        </member>
        <member name="M:Bubba.IAsyncService.GetDataTable">
            <inheritdoc />
            <summary>
            Gets the data table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetDataTableAsync">
            <inheritdoc />
            <summary>
            Gets the data table asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetRecord">
            <inheritdoc />
            <summary>
            Gets the record asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetRecordAsync">
            <inheritdoc />
            <summary>
            Gets the record asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetDataSetAsync">
            <inheritdoc />
            <summary>
            Gets the data private protected set asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.SetColumnCaptions(System.Data.DataTable)">
            <inheritdoc />
            <summary>
            Sets the column captions.
            </summary>
            <param name="dataTable"> The data table.
            </param>
        </member>
        <member name="M:Bubba.IAsyncService.GetFieldsAsync">
            <inheritdoc />
            <summary>
            Gets the fields asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetNumericsAsync">
            <inheritdoc />
            <summary>
            Gets the numerics asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetDatesAsync">
            <inheritdoc />
            <summary>
            Gets the dates asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetKeysAsnyc">
            <inheritdoc />
            <summary>
            Gets the primary keys asynchronous.
            </summary>
            <returns>
            Task of IList of int
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetOrdinalsAsync">
            <inheritdoc />
            <summary>
            Gets the ordinals asynchronous.
            </summary>
            <returns>
            Task(List)
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetMapAsync">
            <inheritdoc />
            <summary>
            Gets the map asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetSchemaAsync">
            <inheritdoc />
            <summary>
            Gets the schema asynchronous.
            </summary>
            <returns>
            Task(IDictionary(string, Type))
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetColumnsAsync">
            <inheritdoc />
            <summary>
            Gets the columns asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetNamesAsync">
            <inheritdoc />
            <summary>
            Gets the names asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetValuesAsync(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.String)">
            <summary> Gets the values asynchronous. </summary>
            <param name="dataRows"> The data rows. </param>
            <param name="name"> The name. </param>
            <param name="value"> The value. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetValuesAsync(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String)">
            <summary> Gets the values. </summary>
            <param name="dataRows"> The data rows. </param>
            <param name="name"> The column. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.IAsyncService.GetSeriesAsync">
            <summary>
            Creates the series asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.IBudgetAdapter">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ISource" />
            <seealso cref="T:Bubba.IProvider" />
        </member>
        <member name="P:Bubba.IBudgetAdapter.CommandType">
            <inheritdoc />
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.IBudgetAdapter.DataConnection">
            <summary>
            Gets or sets the data connection.
            </summary>
            <value>
            The data connection.
            </value>
        </member>
        <member name="P:Bubba.IBudgetAdapter.SqlStatement">
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.IBudgetAdapter.Commands">
            <summary>
            Gets or sets the commands.
            </summary>
            <value>
            The commands.
            </value>
        </member>
        <member name="P:Bubba.IBudgetAdapter.BudgetCommand">
            <summary>
            Gets or sets the command factory.
            </summary>
            <value> The command factory.
            </value>
        </member>
        <member name="P:Bubba.IBudgetAdapter.CommandText">
            <inheritdoc />
            <summary>
            Gets or sets the command text.
            </summary>
            <value>
            The command text.
            </value>
        </member>
        <member name="M:Bubba.IBudgetAdapter.Create">
            <summary>
            Gets the adapter.
            </summary>
            <returns> DbDataAdapter </returns>
        </member>
        <member name="M:Bubba.IBudgetAdapter.CreateAsync">
            <summary>
            Creates the asynchronous.
            </summary>
            <returns>
            Task(DbDataAdapter)
            </returns>
        </member>
        <member name="T:Bubba.IBudgetCommand">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.IBudgetCommand.Create">
            <inheritdoc/>
            <summary>
            Sets the command.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.IBudgetCommand.CreateAsync">
            <inheritdoc />
            <summary>
            Creates the command asynchronously.
            </summary>
            <returns>
            Task( DbCommand )
            </returns>
        </member>
        <member name="P:Bubba.IBudgetCommand.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            command.
            </value>
        </member>
        <member name="P:Bubba.IBudgetCommand.Connection">
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.IBudgetCommand.CommandType">
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.IBudgetCommand.SqlStatement">
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="T:Bubba.IBudgetConnection">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.IBudgetConnection.Create">
            <inheritdoc />
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IBudgetConnection.CreateAsync">
            <inheritdoc />
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bubba.IBudgetConnection.Connection">
            <summary>
            Gets or sets the connection.
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.DataPath">
            <summary>
            Gets or sets the client path.
            </summary>
            <value>
            The client path.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.PathExtension">
            <summary>
            Gets or sets the path extension.
            </summary>
            <value>
            The path extension.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Bubba.IBudgetConnection.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>
            The connection string.
            </value>
        </member>
        <member name="T:Bubba.IDataMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateMaximum(System.String)">
            <summary>
            Calculates the maximum.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateMinimum(System.String)">
            <summary>
            Calculates the minimum.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CountValues(System.String)">
            <summary>
            Counts the values.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns>
            An int
            </returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CountValues(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Counts the values.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns>
            An int
            </returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateTotal(System.String)">
            <summary>
            Calculates the total.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateTotal(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the total.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateAverage(System.String)">
            <summary>
            Calculates the average.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateAverage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the average.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculatePercentage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the percentage.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateDeviation(System.String)">
            <summary>
            Calculates the deviation.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateDeviation(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the deviation.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateVariance(System.String)">
            <summary>
            Calculates the variance.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.IDataMeasure.CalculateVariance(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Calculates the variance.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <param name="where">
            The where.
            </param>
            <returns>
            A double
            </returns>
        </member>
        <member name="T:Bubba.IDataService">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ISource" />
            <seealso cref="T:Bubba.IProvider" />
        </member>
        <member name="P:Bubba.IDataService.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.IDataService.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Record">
            <inheritdoc />
            <summary>
            Gets the record.
            </summary>
            <value>
            The record.
            </value>
        </member>
        <member name="P:Bubba.IDataService.DataSet">
            <summary>
            Gets the data private protected set.
            </summary>
            <value>
            The data private protected set.
            </value>
        </member>
        <member name="P:Bubba.IDataService.DataElements">
            <summary>
            Gets the data elements.
            </summary>
            <value>
            The data elements.
            </value>
        </member>
        <member name="P:Bubba.IDataService.DataTable">
            <summary>
            Gets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="P:Bubba.IDataService.DataColumns">
            <summary>
            Gets or sets the data columns.
            </summary>
            <value>
            The data columns.
            </value>
        </member>
        <member name="P:Bubba.IDataService.ColumnNames">
            <summary>
            Gets or sets the column names.
            </summary>
            <value>
            The column names.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Dates">
            <summary>
            Gets or sets the dates.
            </summary>
            <value>
            The dates.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Numerics">
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Map">
            <summary>
            Gets or sets the map.
            </summary>
            <value>
            The map.
            </value>
        </member>
        <member name="P:Bubba.IDataService.SqlStatement">
            <summary>
            Gets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Connection">
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.IDataService.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="M:Bubba.IDataService.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns>
            IEnumerable{DataRow}
            </returns>
        </member>
        <member name="T:Bubba.IDataUnit">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ISource" />
            <seealso cref="T:Bubba.IProvider" />
        </member>
        <member name="P:Bubba.IDataUnit.ID">
            <summary>
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.IDataUnit.Code">
            <inheritdoc />
            <summary>
            Gets the field.
            </summary>
        </member>
        <member name="P:Bubba.IDataUnit.Name">
            <inheritdoc />
            <summary>
            The name
            </summary>
        </member>
        <member name="P:Bubba.IDataUnit.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Bubba.IDataUnit.Record">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.IDataUnit.Map">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Bubba.IDataUnit.IsMatch(Bubba.IDataUnit)">
            <inheritdoc />
            <summary>
            Determines whether the specified element is match.
            </summary>
            <param name="unit">The element.</param>
            <returns>
            <c> true </c>
            if the specified element is match; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.IDataUnit.IsMatch(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Determines whether the specified dictionary is match.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns>
            <c> true </c>
            if the specified dictionary is match; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.IDataUnit.IsMatch(Bubba.IDataUnit,Bubba.IDataUnit)">
            <summary>
            Determines whether the specified primary is match.
            </summary>
            <param name="primary">The primary.</param>
            <param name="secondary">The secondary.</param>
            <returns>
              <c>true</c> if the specified primary is match;
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.IDataUnit.GetId">
            <summary>
            Gets the identifier.
            </summary>
            <returns>
            Integer
            </returns>
        </member>
        <member name="M:Bubba.IDataUnit.GetId(System.Data.DataRow)">
            <summary>
            Gets the identifier.
            </summary>
            <param name="dataRow">The data row.</param>
            <returns>
            Integer
            </returns>
        </member>
        <member name="T:Bubba.IProvider">
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.IProvider.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="T:Bubba.IQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IQuery.Source">
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.IQuery.Provider">
            <summary>
            Gets the Provider
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.IQuery.CommandType">
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.IQuery.Criteria">
            <summary>
            Gets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Bubba.IQuery.SqlStatement">
            <summary>
            Gets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.IQuery.DataConnection">
            <summary>
            Gets or sets the connection.
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="P:Bubba.IQuery.DataAdapter">
            <summary>
            Gets the adapter.
            </summary>
            <value>
            The adapter.
            </value>
        </member>
        <member name="P:Bubba.IQuery.DataReader">
            <summary>
            Gets the data reader.
            </summary>
            <value>
            The data reader.
            </value>
        </member>
        <member name="T:Bubba.ISource">
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.ISource.Source">
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="T:Bubba.ISqlStatement">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.ISqlStatement.Extension">
            <summary>
            Gets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.CommandType">
            <summary>
            Gets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.CommandText">
            <summary>
            Gets the command text.
            </summary>
            <value>
            The command text.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.Criteria">
            <summary>
            Gets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.Updates">
            <summary>
            Gets the updates.
            </summary>
            <value>
            The updates.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.Numerics">
            <summary>
            Gets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.TableName">
            <summary>
            Gets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.DbPath">
            <summary>
            Gets the database path.
            </summary>
            <value>
            The database path.
            </value>
        </member>
        <member name="P:Bubba.ISqlStatement.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="T:Bubba.IStateTransfer">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ISource" />
            <seealso cref="T:Bubba.IProvider" />
        </member>
        <member name="P:Bubba.IStateTransfer.SelectedTable">
            <summary>
            Gets the selected table.
            </summary>
            <value>
            The selected table.
            </value>
        </member>
        <member name="P:Bubba.IStateTransfer.SelectedFields">
            <summary>
            Gets the selected fields.
            </summary>
            <value>
            The selected fields.
            </value>
        </member>
        <member name="P:Bubba.IStateTransfer.SelectedNumerics">
            <summary>
            Gets the selected numerics.
            </summary>
            <value>
            The selected numerics.
            </value>
        </member>
        <member name="P:Bubba.IStateTransfer.SelectedDates">
            <summary>
            Gets the selected dates.
            </summary>
            <value>
            The selected dates.
            </value>
        </member>
        <member name="P:Bubba.IStateTransfer.SqlQuery">
            <summary>
            Gets the SQL query.
            </summary>
            <value>
            The SQL query.
            </value>
        </member>
        <member name="P:Bubba.IStateTransfer.Filter">
            <summary>
            Gets the data filter.
            </summary>
            <value>
            The data filter.
            </value>
        </member>
        <member name="T:Bubba.Query">
            <inheritdoc/>
            <summary>
            </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="P:Bubba.Query.Source">
            <inheritdoc />
            <summary>
            Gets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.Query.Provider">
            <inheritdoc />
            <summary>
            Gets the Provider
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.Query.CommandType">
            <inheritdoc />
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.Query.Criteria">
            <inheritdoc />
            <summary>
            Gets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:Bubba.Query.SqlStatement">
            <inheritdoc />
            <summary>
            Gets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.Query.DataConnection">
            <inheritdoc />
            <summary>
            Gets or sets the connection.
            </summary>
            <value>
            The connection.
            </value>
        </member>
        <member name="P:Bubba.Query.DataAdapter">
            <inheritdoc />
            <summary>
            Gets the adapter.
            </summary>
            <value>
            The adapter.
            </value>
        </member>
        <member name="P:Bubba.Query.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
              <c>true</c> if this instance is disposed;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.Query.DataReader">
            <inheritdoc />
            <summary>
            Gets the data reader.
            </summary>
            <value>
            The data reader.
            </value>
        </member>
        <member name="T:Bubba.QueryBase">
            <inheritdoc/>
            <summary> </summary>
        </member>
        <member name="F:Bubba.QueryBase._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._commandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._dataConnection">
            <summary>
            The data connection
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._sqlStatement">
            <summary>
            The SQL statement
            </summary>
        </member>
        <member name="F:Bubba.QueryBase.Connection">
            <summary>
            The connection factory
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._criteria">
            <summary>
            The criteria
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._dataAdapter">
            <summary>
            The data adapter
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._dataReader">
            <summary>
            The data reader
            </summary>
        </member>
        <member name="F:Bubba.QueryBase._isDisposed">
            <summary>
            The is disposed
            </summary>
        </member>
        <member name="M:Bubba.QueryBase.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.QueryBase.Dispose(System.Boolean)">
            <summary> Releases unmanaged and
            - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c> true </c>
            to release both managed and unmanaged resources;
            <c> false </c>
            to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.QueryBase.Fail(System.Exception)">
            <summary> Fails the specified ex.
            </summary>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="T:Bubba.SqlBase">
            <summary> </summary>
        </member>
        <member name="F:Bubba.SqlBase._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._commandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._extension">
            <summary>
            The extension
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._criteria">
            <summary>
            The criteria
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._updates">
            <summary>
            The updates
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._fields">
            <summary>
            The fields
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._numerics">
            <summary>
            The numerics
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._groups">
            <summary>
            The groups
            </summary>
        </member>
        <member name="F:Bubba.SqlBase.TableName">
            <summary>
            The table name
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._dbPath">
            <summary>
            The database path
            </summary>
        </member>
        <member name="F:Bubba.SqlBase._commandText">
            <summary>
            The command text
            </summary>
        </member>
        <member name="M:Bubba.SqlBase.GetCommandText">
            <summary>
            Gets the command text.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.SqlBase.CreateSelectStatement">
            <summary>
            Gets the select statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBase.CreateUpdateStatement">
            <summary>
            Gets the update statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBase.CreateInsertStatement">
            <summary>
            Gets the insert statement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBase.GetDeleteStatement">
            <summary> Gets the delete statement. </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.SqlBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex"> The ex. </param>
        </member>
        <member name="T:Bubba.BubbaAdapter">
            <inheritdoc/>
            <summary>
            </summary>
            <seealso cref="T:Badger.AdapterBase"/>
        </member>
        <member name="P:Bubba.BubbaAdapter.Source">
            <inheritdoc />
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.Provider">
            <inheritdoc />
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.CommandType">
            <inheritdoc />
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.DataConnection">
            <inheritdoc />
            <summary>
            Gets or sets the data connection.
            </summary>
            <value>
            The data connection.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.SqlStatement">
            <inheritdoc />
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.Commands">
            <inheritdoc />
            <summary>
            Gets or sets the commands.
            </summary>
            <value>
            The commands.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.BudgetCommand">
            <inheritdoc />
            <summary>
            Gets or sets the command factory.
            </summary>
            <value> The command factory.
            </value>
        </member>
        <member name="P:Bubba.BubbaAdapter.CommandText">
            <inheritdoc />
            <summary>
            Gets or sets the command text.
            </summary>
            <value>
            The command text.
            </value>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,System.String,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="sqlText">The SQL text.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="update">The update.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="columns">The columns.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="fields">The fields.</param>
            <param name="numerics">The numerics.</param>
            <param name="having">The having.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter"/>
            class.
            </summary>
            <param name="sqlStatement"> The SQL statement. </param>
        </member>
        <member name="M:Bubba.BubbaAdapter.#ctor(Bubba.IBudgetCommand)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaAdapter" /> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Bubba.BubbaAdapter.Create">
            <inheritdoc />
            <summary>
            Gets the adapter.
            </summary>
            <returns> DbDataAdapter </returns>
        </member>
        <member name="M:Bubba.BubbaAdapter.CreateAsync">
            <inheritdoc />
            <summary>
            Creates the asynchronous.
            </summary>
            <returns>
            Task(DbDataAdapter)
            </returns>
        </member>
        <member name="T:Bubba.AsyncCore">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._path">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._commandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._connection">
            <summary>
            The data connection
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._sqlStatement">
            <summary>
            The SQL statement
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._criteria">
            <summary>
            The criteria
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dataAdapter">
            <summary>
            The data adapter
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dataReader">
            <summary>
            The data reader
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._disposed">
            <summary>
            The is disposed
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dataColumns">
            <summary>
            The data columns
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._columnNames">
            <summary>
            The column names
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dates">
            <summary>
            The dates
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._fields">
            <summary>
            The fields
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._numerics">
            <summary>
            The numerics
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dataSet">
            <summary>
            The data set
            </summary>
        </member>
        <member name="F:Bubba.AsyncCore._dataTable">
            <summary>
            The data table
            </summary>
        </member>
        <member name="P:Bubba.AsyncCore.Source">
            <inheritdoc />
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:Bubba.AsyncCore.Provider">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.AsyncCore.Criteria">
            <inheritdoc />
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.SqlStatement">
            <inheritdoc />
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.Connection">
            <inheritdoc />
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.DataAdapter">
            <inheritdoc />
            <summary>
            Gets or sets the data adapter.
            </summary>
            <value>
            The data adapter.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.IsDisposed">
            <summary> Gets or sets a value indicating
            whether this instance is disposed. </summary>
            <value>
            <c> true </c>
            if this instance is disposed; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.DataReader">
            <summary>
            Gets or sets the data reader.
            </summary>
            <value>
            The data reader.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.DataSet">
            <inheritdoc />
            <summary>
            Gets or sets the data set.
            </summary>
            <value>
            The data set.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.DataTable">
            <summary>
            Gets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.DataColumns">
            <summary>
            Gets or sets the data columns.
            </summary>
            <value>
            The data columns.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.ColumnNames">
            <summary>
            Gets or sets the column names.
            </summary>
            <value>
            The column names.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.Dates">
            <summary>
            Gets or sets the dates.
            </summary>
            <value>
            The dates.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.Numerics">
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.AsyncCore.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="M:Bubba.AsyncCore.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.AsyncCore.Dispose(System.Boolean)">
            <summary> Releases unmanaged and -
            optionally - managed resources. </summary>
            <param name="disposing">
            <c> true </c>
            to release both managed and unmanaged resources;
            <c> false </c>
            to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.AsyncCore.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.AsyncData">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.AsyncState" />
        </member>
        <member name="M:Bubba.AsyncData.GetQueryAsync(Bubba.SqlStatement)">
            <inheritdoc />
            <summary>
            Gets the query asynchronous.
            </summary>
            <param name="sqlStatement">The SQL statement.</param>
            <returns>
            Task(Query)
            </returns>
        </member>
        <member name="M:Bubba.AsyncData.GetOrdinalsAsync">
            <inheritdoc />
            <summary>
            Gets the ordinals asynchronous.
            </summary>
            <returns>
            Task(List)
            </returns>
        </member>
        <member name="M:Bubba.AsyncData.GetMapAsync">
            <inheritdoc />
            <summary>
            Gets the map asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncData.GetSchemaAsync">
            <inheritdoc />
            <summary>
            Gets the schema asynchronous.
            </summary>
            <returns>
            Task(IDictionary(string, Type))
            </returns>
        </member>
        <member name="M:Bubba.AsyncData.GetColumnsAsync">
            <inheritdoc />
            <summary>
            Gets the columns asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncData.GetNamesAsync">
            <inheritdoc />
            <summary>
            Gets the names asynchronous.
            </summary>
            <returns>
            Task( List( string ) )
            </returns>
        </member>
        <member name="T:Bubba.AsyncGenerator">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.AsyncModel" />
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="where"> The where. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="fields"> The fields. </param>
            <param name="numerics"> The numerics. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(Bubba.IQuery)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="query"> The query. </param>
        </member>
        <member name="M:Bubba.AsyncGenerator.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncGenerator"/>
            class.
            </summary>
            <param name="fullPath"> The full path. </param>
            <param name="sqlText"> The SQL text. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="T:Bubba.AsyncQuery">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source Data. </param>
            <param name="provider"> The provider used. </param>
            <param name="where"> The dictionary of parameters. </param>
            <param name="commandType"> The type of sql command. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="where"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="numerics"> The numeric field. </param>
            <param name="having"> The having. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="where"> The dictionary. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="where"> The dictionary. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncQuery"/>
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.AsyncQuery.GetAdapterAsync">
            <summary>
            Gets the adapter.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.AsyncSchema">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.ISource" />
            <seealso cref="T:Badger.IProvider" />
        </member>
        <member name="F:Bubba.AsyncSchema._query">
            <summary>
            The query
            </summary>
        </member>
        <member name="F:Bubba.AsyncSchema._record">
            <summary>
            The record
            </summary>
        </member>
        <member name="F:Bubba.AsyncSchema._keys">
            <summary>
            The keys
            </summary>
        </member>
        <member name="F:Bubba.AsyncSchema._map">
            <summary>
            The map
            </summary>
        </member>
        <member name="P:Bubba.AsyncSchema.Query">
            <inheritdoc />
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Bubba.AsyncSchema.Record">
            <inheritdoc />
            <summary>
            Gets or sets the record.
            </summary>
            <value>
            The record.
            </value>
        </member>
        <member name="P:Bubba.AsyncSchema.Keys">
            <inheritdoc />
            <summary>
            Gets or sets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Bubba.AsyncSchema.Map">
            <inheritdoc />
            <summary>
            Gets or sets the map.
            </summary>
            <value>
            The map.
            </value>
        </member>
        <member name="M:Bubba.AsyncSchema.GetDataTable">
            <inheritdoc />
            <summary>
            Gets the data table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetDataTableAsync">
            <inheritdoc />
            <summary>
            Gets the data table asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetRecord">
            <inheritdoc />
            <summary>
            Gets the record asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetRecordAsync">
            <inheritdoc />
            <summary>
            Gets the record asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetDataSetAsync">
            <inheritdoc />
            <summary>
            Gets the data set asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncSchema.SetColumnCaptions(System.Data.DataTable)">
            <inheritdoc />
            <summary>
            Sets the column captions.
            </summary>
            <param name="dataTable"> The data table.
            </param>
        </member>
        <member name="M:Bubba.AsyncSchema.GetFieldsAsync">
            <inheritdoc />
            <summary>
            Gets the fields asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetNumericsAsync">
            <inheritdoc />
            <summary>
            Gets the numerics asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetDatesAsync">
            <inheritdoc />
            <summary>
            Gets the dates asynchronous.
            </summary>
            <returns>
            Task of IList of string
            </returns>
        </member>
        <member name="M:Bubba.AsyncSchema.GetKeysAsnyc">
            <inheritdoc />
            <summary>
            Gets the primary keys asynchronous.
            </summary>
            <returns>
            Task of IList of int
            </returns>
        </member>
        <member name="T:Bubba.AsyncService">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.AsyncData" />
        </member>
        <member name="F:Bubba.AsyncService.KEY">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.AsyncService._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.AsyncService._dataElements">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.AsyncService.DataElements">
            <inheritdoc/>
            <summary>
            Gets the data elements.
            </summary>
            <value>
            The data elements.
            </value>
        </member>
        <member name="M:Bubba.AsyncService.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="where"> The where. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="fields"> The fields. </param>
            <param name="numerics"> The numerics. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="where"> The where. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(System.String,System.String,Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="fullPath"> The full path. </param>
            <param name="sqlText"> The SQL text. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AsyncService.#ctor(Bubba.IQuery)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncService"/>
            class.
            </summary>
            <param name="query"> The query. </param>
        </member>
        <member name="M:Bubba.AsyncService.BeginInit">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.AsyncService.EndInit">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.AsyncService.GetValuesAsync(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.String)">
            <summary> Gets the values asynchronous. </summary>
            <param name="dataRows"> The data rows. </param>
            <param name="name"> The name. </param>
            <param name="value"> The value. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.AsyncService.GetValuesAsync(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String)">
            <summary> Gets the values. </summary>
            <param name="dataRows"> The data rows. </param>
            <param name="name"> The column. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.AsyncService.GetSeriesAsync">
            <summary>
            Creates the series asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.BubbaCommand">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.ICommand"/>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="where"> The dictionary. </param>
            <param name="commandType"> </param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="update"> The updates. </param>
            <param name="where"> The criteria. </param>
            <param name="commandType"> </param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary> </summary>
            <param name="source"> </param>
            <param name="provider"> </param>
            <param name="columns"> </param>
            <param name="where"> </param>
            <param name="commandType"> </param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="fields"> The fields. </param>
            <param name="numerics"> The numerics. </param>
            <param name="having"> The having. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.BubbaCommand.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaCommand"/>
            class.
            </summary>
            <param name="sqlStatement"> The SQL statement. </param>
        </member>
        <member name="M:Bubba.BubbaCommand.Create">
            <inheritdoc/>
            <summary> Sets the command. </summary>
            <returns> </returns>
        </member>
        <member name="M:Bubba.BubbaCommand.CreateAsync">
            <inheritdoc />
            <summary>
            Creates the command asynchronously.
            </summary>
            <returns>
            Task( DbCommand )
            </returns>
        </member>
        <member name="T:Bubba.BubbaConnection">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.ConnectionBase"/>
            <seealso cref="T:Badger.ISource"/>
            <seealso cref="T:Badger.IProvider"/>
        </member>
        <member name="M:Bubba.BubbaConnection.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaConnection"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.BubbaConnection.#ctor(System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaConnection"/>
            class.
            </summary>
            <param name="fullPath"> The fullPath. </param>
        </member>
        <member name="M:Bubba.BubbaConnection.#ctor(System.String,Bubba.Provider)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaConnection"/>
            class.
            </summary>
            <param name="fullPath"> The fullPath. </param>
            <param name="provider"> The provider. </param>
        </member>
        <member name="M:Bubba.BubbaConnection.#ctor(Bubba.Source,Bubba.Provider)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BubbaConnection"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
        </member>
        <member name="M:Bubba.BubbaConnection.Create">
            <inheritdoc />
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.BubbaConnection.CreateAsync">
            <inheritdoc />
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.DataCore">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.DataCore._source">
            <summary>
            The source
            </summary>
        </member>
        <member name="F:Bubba.DataCore._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.DataCore._dataSet">
            <summary>
            The data set
            </summary>
        </member>
        <member name="F:Bubba.DataCore._dataTable">
            <summary>
            The data table
            </summary>
        </member>
        <member name="F:Bubba.DataCore._dataColumns">
            <summary>
            The data columns
            </summary>
        </member>
        <member name="F:Bubba.DataCore._columnNames">
            <summary>
            The column names
            </summary>
        </member>
        <member name="F:Bubba.DataCore._dates">
            <summary>
            The dates
            </summary>
        </member>
        <member name="F:Bubba.DataCore._fields">
            <summary>
            The fields
            </summary>
        </member>
        <member name="F:Bubba.DataCore._numerics">
            <summary>
            The numerics
            </summary>
        </member>
        <member name="P:Bubba.DataCore.Source">
            <inheritdoc />
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:Bubba.DataCore.Provider">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.DataCore.DataTable">
            <summary>
            Gets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="P:Bubba.DataCore.DataColumns">
            <summary>
            Gets or sets the data columns.
            </summary>
            <value>
            The data columns.
            </value>
        </member>
        <member name="P:Bubba.DataCore.ColumnNames">
            <summary>
            Gets or sets the column names.
            </summary>
            <value>
            The column names.
            </value>
        </member>
        <member name="P:Bubba.DataCore.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.DataCore.Dates">
            <summary>
            Gets or sets the dates.
            </summary>
            <value>
            The dates.
            </value>
        </member>
        <member name="P:Bubba.DataCore.Numerics">
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="M:Bubba.DataCore.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.DataGenerator">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.DataModel" />
            <seealso cref="T:Badger.IDataService" />
        </member>
        <member name="P:Bubba.DataGenerator.IsBusy">
            <inheritdoc />
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.DataGenerator.Duration">
            <inheritdoc />
            <summary>
            Gets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:Bubba.DataGenerator.Record">
            <inheritdoc />
            <summary>
            Gets the record.
            </summary>
            <value>
            The record.
            </value>
        </member>
        <member name="P:Bubba.DataGenerator.DataSet">
            <summary>
            Gets the data set.
            </summary>
            <value>
            The data set.
            </value>
        </member>
        <member name="P:Bubba.DataGenerator.DataElements">
            <inheritdoc />
            <summary>
            Gets the data elements.
            </summary>
            <value>
            The data elements.
            </value>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="where">The where.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="dict">The dictionary.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="updates">The updates.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="columns">The columns.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="fields">The fields.</param>
            <param name="numerics">The numerics.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="sqlText">The SQL text.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(Bubba.IQuery)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Bubba.DataGenerator.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataGenerator" /> class.
            </summary>
            <param name="fullPath">The full path.</param>
            <param name="sqlText">The SQL text.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataGenerator.GetProvider(System.String)">
            <summary>
            Gets the provider.
            </summary>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataGenerator.GetProvider(Bubba.EXT)">
            <summary>
            Gets the provider.
            </summary>
            <param name="ext">The provider</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataGenerator.GetSource(System.String)">
            <summary>
            Gets the source.
            </summary>
            <param name="tableName">
            Name of the table.
            </param>
            <returns>
            Source
            </returns>
        </member>
        <member name="T:Bubba.DataScaffold">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.DataAccess"/>
        </member>
        <member name="F:Bubba.DataScaffold._record">
            <summary>
            The record
            </summary>
        </member>
        <member name="F:Bubba.DataScaffold._connection">
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="M:Bubba.DataScaffold.GetOrdinals">
            <summary>
            Gets the ordinals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataScaffold.GetColumnSchema">
            <summary>
            Gets the column schema.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataScaffold.GetDataColumns">
            <summary>
            Gets the data columns.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataScaffold.GetColumnNames">
            <summary>
            Gets the column names.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.DataSchema">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.ISource" />
            <seealso cref="T:Badger.IProvider" />
        </member>
        <member name="F:Bubba.DataSchema._path">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.DataSchema._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.DataSchema._map">
            <summary>
            The map
            </summary>
        </member>
        <member name="F:Bubba.DataSchema._duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="F:Bubba.DataSchema._elements">
            <summary>
            The elements
            </summary>
        </member>
        <member name="F:Bubba.DataSchema._sqlStatement">
            <summary>
            Gets or sets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="F:Bubba.DataSchema._keys">
            <summary>
            The keys
            </summary>
        </member>
        <member name="P:Bubba.DataSchema.Map">
            <summary>
            Gets or sets the map.
            </summary>
            <value>
            The map.
            </value>
        </member>
        <member name="M:Bubba.DataSchema.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns>
            IEnumerable{DataRow}
            </returns>
        </member>
        <member name="M:Bubba.DataSchema.GetDataTable">
            <summary>
            Gets the data table.
            </summary>
            <returns>
            DataTable
            </returns>
        </member>
        <member name="M:Bubba.DataSchema.GetTableAsync">
            <summary>
            Gets the table asynchronous.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataSchema.SetColumnCaptions(System.Data.DataTable)">
            <summary>
            Sets the column captions.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
        </member>
        <member name="M:Bubba.DataSchema.GetFields">
            <summary>
            Gets the fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataSchema.GetNumerics">
            <summary>
            Gets the numerics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataSchema.GetDates">
            <summary>
            Gets the dates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataSchema.GetPrimaryKeys">
            <summary>
            Gets the primary keys.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataSchema.BeginInit">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.DataSchema.EndInit">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="T:Bubba.DataService">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.ModelBase" />
        </member>
        <member name="P:Bubba.DataService.SqlStatement">
            <summary>
            Gets the SQL statement.
            </summary>
            <value>
            The SQL statement.
            </value>
        </member>
        <member name="P:Bubba.DataService.Connection">
            <summary>
            Gets or sets the connection factory.
            </summary>
            <value>
            The connection factory.
            </value>
        </member>
        <member name="P:Bubba.DataService.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="M:Bubba.DataService.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="where">The where.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="updates">The updates.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="columns">The columns.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="fields">The fields.</param>
            <param name="numerics">The numerics.</param>
            <param name="where">The where.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="where">The where.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
            <param name="sqlText">The SQL text.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(System.String,System.String,Bubba.Command)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="fullPath">The full path.</param>
            <param name="sqlText">The SQL text.</param>
            <param name="commandType">Type of the command.</param>
        </member>
        <member name="M:Bubba.DataService.#ctor(Bubba.IQuery)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataService"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Bubba.DataService.GetValues(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String)">
            <summary>
            Gets the values.
            </summary>
            <param name="dataRows">The data rows.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataService.GetValues(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.String)">
            <summary>
            Gets the values.
            </summary>
            <param name="dataRows">The data rows.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataService.CreateTableFromWorksheet(System.String,System.Boolean)">
            <summary>
            Creates the table from worksheet.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="header">if set to
            <c>true</c> [header].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataService.CreateSeries(System.Data.DataTable)">
            <summary>
            Creates the series.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
            <returns>
            Dictionary
            </returns>
        </member>
        <member name="T:Bubba.Calculation">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.Calculation.CountValues(System.String)">
            <summary>
            Counts the values.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns>
            An int
            </returns>
        </member>
        <member name="M:Bubba.Calculation.CountValues(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Counts the values.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns>
            An int
            </returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateTotal(System.String)">
            <summary>
            Calculates the total.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateTotal(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the total.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateAverage(System.String)">
            <summary>
            Calculates the average.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateAverage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the average.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Calculation.CalculatePercentage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the percentage.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateDeviation(System.String)">
            <summary>
            Calculates the deviation.
            </summary>
            <param name="numeric">The numeric.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateDeviation(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Calculates the deviation.
            </summary>
            <param name="numeric">The numeric.</param>
            <param name="where">The where.</param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateVariance(System.String)">
            <summary>
            Calculates the variance.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.Calculation.CalculateVariance(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Calculates the variance.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <param name="where">
            The where.
            </param>
            <returns>
            A double
            </returns>
        </member>
        <member name="M:Bubba.Calculation.GetNumericColumnNames">
            <summary>
            Gets the numerics.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="M:Bubba.Calculation.GetDateColumns">
            <summary>
            Gets the dates.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="T:Bubba.DataMeasure">
            <inheritdoc />
            <summary> </summary>
        </member>
        <member name="M:Bubba.DataMeasure.GetTextColumnNames">
            <summary>
            Gets the fields.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="M:Bubba.DataMeasure.GetDateColumnNames">
            <summary>
            Gets the date column names.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="M:Bubba.DataMeasure.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataMeasure"/> class.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
        </member>
        <member name="P:Bubba.DataMeasure.Dates">
            <inheritdoc />
            <summary>
            Gets the dates.
            </summary>
            <value>
            The dates.
            </value>
        </member>
        <member name="P:Bubba.DataMeasure.DataTable">
            <inheritdoc />
            <summary>
            Gets or sets the data table.
            </summary>
            <value>
            The data table.
            </value>
        </member>
        <member name="P:Bubba.DataMeasure.Numerics">
            <inheritdoc />
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.DataMeasure.Fields">
            <inheritdoc />
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.DataMeasure.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="M:Bubba.DataMeasure.CalculateMaximum(System.String)">
            <inheritdoc />
            <summary>
            Calculates the maximum.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataMeasure.CalculateMinimum(System.String)">
            <inheritdoc />
            <summary>
            Calculates the minimum.
            </summary>
            <param name="numeric">
            The numeric.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.IOption`1">
            <summary> </summary>
            <typeparam name="_"> </typeparam>
        </member>
        <member name="M:Bubba.IOption`1.Map``1(System.Func{`0,``0})">
            <summary> Maps the specified function. </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="func"> The function. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.IOption`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <summary> Matches the specified some function. </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="someFunc"> Some function. </param>
            <param name="noneFunc"> The none function. </param>
            <returns> </returns>
        </member>
        <member name="P:Bubba.IOption`1.Value">
            <summary> Gets the value. </summary>
            <value> The value. </value>
        </member>
        <member name="P:Bubba.IOption`1.IsSome">
            <summary> Gets a value indicating whether this instance is some. </summary>
            <value>
            <c> true </c>
            if this instance is some; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="P:Bubba.IOption`1.IsNone">
            <summary> Gets a value indicating whether this instance is none. </summary>
            <value>
            <c> true </c>
            if this instance is none; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="T:Bubba.None`1">
            <inheritdoc/>
            <summary> </summary>
            <typeparam name="_"> </typeparam>
            <seealso cref="T:Bubba.IOption`1"/>
            <seealso cref="T:Bubba.IOption`1"/>
        </member>
        <member name="M:Bubba.None`1.Map``1(System.Func{`0,``0})">
            <inheritdoc/>
            <summary>
            Maps the specified function.
            </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="func"> The function. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.None`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <inheritdoc/>
            <summary> Matches the specified some function. </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="someFunc"> Some function. </param>
            <param name="noneFunc"> The none function. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.None`1.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.None`1"/>
            class.
            </summary>
        </member>
        <member name="P:Bubba.None`1.Value">
            <inheritdoc/>
            <summary>
            Gets the value.
            </summary>
            <value> The value. </value>
        </member>
        <member name="P:Bubba.None`1.Default">
            <summary> Gets the default. </summary>
            <value> The default. </value>
        </member>
        <member name="P:Bubba.None`1.IsSome">
            <inheritdoc/>
            <summary>
            Gets a value indicating whether this instance is some.
            </summary>
            <value>
            <c> true </c>
            if this instance is some; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="P:Bubba.None`1.IsNone">
            <inheritdoc/>
            <summary>
            Gets a value indicating whether this instance is none.
            </summary>
            <value>
            <c> true </c>
            if this instance is none; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="T:Bubba.Option`1">
            <inheritdoc/>
            <summary> </summary>
            <typeparam name="_"> </typeparam>
            <seealso cref="T:Bubba.IOption`1"/>
        </member>
        <member name="M:Bubba.Option`1.Fail(System.Exception)">
            <summary> Fails the specified ex. </summary>
            <param name="ex"> The ex. </param>
        </member>
        <member name="P:Bubba.Option`1.Value">
            <inheritdoc/>
            <summary> Gets the value. </summary>
            <value> The value. </value>
        </member>
        <member name="P:Bubba.Option`1.IsSome">
            <inheritdoc/>
            <summary> Gets a value indicating whether this instance is some. </summary>
            <value>
            <c> true </c>
            if this instance is some; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="P:Bubba.Option`1.IsNone">
            <inheritdoc/>
            <summary> Gets a value indicating whether this instance is none. </summary>
            <value>
            <c> true </c>
            if this instance is none; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="M:Bubba.Option`1.Map``1(System.Func{`0,``0})">
            <inheritdoc/>
            <summary> Maps the specified function. </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="func"> The function. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.Option`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <inheritdoc/>
            <summary> Matches the specified some function. </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="someFunc"> Some function. </param>
            <param name="noneFunc"> The none function. </param>
            <returns> </returns>
        </member>
        <member name="T:Bubba.Some`1">
            <inheritdoc/>
            <summary> </summary>
            <typeparam name="_"> </typeparam>
            <seealso cref="T:Bubba.IOption`1"/>
        </member>
        <member name="F:Bubba.Some`1._value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Bubba.Some`1.Map``1(System.Func{`0,``0})">
            <inheritdoc/>
            <summary>
            Maps the specified function.
            </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="func"> The function. </param>
            <returns>
            Option{TResult}
            </returns>
        </member>
        <member name="M:Bubba.Some`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <inheritdoc/>
            <summary>
            Matches the specified some function.
            </summary>
            <typeparam name="_result"> The type of the result. </typeparam>
            <param name="someFunc"> Some function. </param>
            <param name="noneFunc"> The none function. </param>
            <returns>
            TResult
            </returns>
        </member>
        <member name="M:Bubba.Some`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Some`1" />
            class.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">
            value - Some value was null, use Empty instead
            </exception>
        </member>
        <member name="P:Bubba.Some`1.Value">
            <inheritdoc/>
            <summary>
            Gets the value.
            </summary>
            <value> The value. </value>
        </member>
        <member name="P:Bubba.Some`1.IsSome">
            <inheritdoc/>
            <summary>
            Gets a value indicating whether this instance is some.
            </summary>
            <value>
            <c> true </c>
            if this instance is some; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="P:Bubba.Some`1.IsNone">
            <inheritdoc/>
            <summary>
            Gets a value indicating whether this instance is none.
            </summary>
            <value>
            <c> true </c>
            if this instance is none; otherwise,
            <c> false </c>
            .
            </value>
        </member>
        <member name="T:Bubba.AccessQuery">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.Query" />
        </member>
        <member name="M:Bubba.AccessQuery.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(Bubba.Source,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.AccessQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AccessQuery" />
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.AccessQuery.CreateTableFromExcelFile(System.String,System.String@)">
            <summary>
            Creates the table from excel file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="sheetName">Name of the sheet.</param>
            <returns>
            DataTable
            </returns>
        </member>
        <member name="M:Bubba.AccessQuery.GetExcelFilePath">
            <summary>
            Gets the excel file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AccessQuery.CheckIfSheetNameExists(System.String,System.Data.DataTable)">
            <summary>
            Checks if sheet name exists.
            </summary>
            <param name="sheetName"> Name of the sheet. </param>
            <param name="schemaTable"> The schema table. </param>
            <returns>
            boolean
            </returns>
        </member>
        <member name="T:Bubba.BudgetQuery">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:System.IDisposable"/>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.Query"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source Data. </param>
            <param name="provider"> The provider used. </param>
            <param name="where"> The dictionary of parameters. </param>
            <param name="commandType"> The type of sql command. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="where"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="numerics"> The numeric field. </param>
            <param name="having"> The having. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.BudgetQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BudgetQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="where"> The dictionary. </param>
        </member>
        <member name="T:Bubba.CsvQuery">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.Query"/>
        </member>
        <member name="P:Bubba.CsvQuery.Provider">
            <inheritdoc/>
            <summary>
            Gets the Provider
            </summary>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source Data. </param>
            <param name="provider"> The provider used. </param>
            <param name="dict"> </param>
            <param name="commandType"> The type of sql command. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,Bubba.Provider,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.CsvQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CsvQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.CsvQuery.CsvImport(System.String@)">
            <summary>
            CSVs the import.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.CsvQuery.CsvImport(System.String,System.String@)">
            <summary> CSVs the import. </summary>
            <param name="filePath"> Name of the file. </param>
            <param name="sheetName"> Name of the sheet. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.CsvQuery.CsvExport(System.Data.DataTable,System.String)">
            <summary> CSVs the export. </summary>
            <param name="dataTable"> The table. </param>
            <param name="filePath"> The file path. </param>
        </member>
        <member name="M:Bubba.CsvQuery.CreateCsvFile(System.String)">
            <summary>
            Creates the CSV file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.CsvQuery.GetCsvFilePath">
            <summary>
            Gets the CSV file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.CsvQuery.SheetExists(System.String,System.Data.DataTable)">
            <summary>
            Sheets the exists.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.ExcelQuery">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.Query"/>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="fields"> The fields. </param>
            <param name="numerics"> The numerics. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(Bubba.Source,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.ExcelQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.ExcelQuery.SaveFile(OfficeOpenXml.ExcelPackage)">
            <summary>
            Saves the file.
            </summary>
            <param name="workBook">The work book.</param>
        </member>
        <member name="M:Bubba.ExcelQuery.WriteExcelFile(System.Data.DataTable,System.String)">
            <summary>
            Writes the excel file.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Bubba.ExcelQuery.GetFilePath">
            <summary>
            Gets the excel file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelQuery.ImportData(System.String@)">
            <summary>
            Imports the data.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelQuery.CsvImport(System.String,System.String@)">
            <summary>
            CSVs the import.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="sheetName">Name of the sheet.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelQuery.Release(OfficeOpenXml.ExcelRange,OfficeOpenXml.ExcelWorksheet,OfficeOpenXml.ExcelPackage)">
            <summary>
            Releases the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="workSheet">The work sheet.</param>
            <param name="excel">The excel.</param>
        </member>
        <member name="M:Bubba.ExcelQuery.ReadExcelFile(System.String)">
            <summary>
            Reads the excel file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelQuery.SheetExists(System.String,System.Data.DataTable)">
            <summary>
            Sheets the exists.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.SqlCeQuery">
            <inheritdoc />
            <summary> </summary>
            <seealso cref="T:Badger.Query" />
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(Bubba.Source,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlCeQuery" />
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.SqlCeQuery.CreateTableFromExcelFile(System.String,System.String@)">
            <summary>
            Creates the table from excel file.
            </summary>
            <param name="filePath"> Name of the file. </param>
            <param name="sheetName"> Name of the sheet. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.SqlCeQuery.CreateTableFromCsvFile(System.String,System.String@)">
            <summary>
            Creates the table from CSV file.
            </summary>
            <param name="filePath"> The file path. </param>
            <param name="sheetName"> Name of the sheet. </param>
            <returns>
            DataTable 
            </returns>
        </member>
        <member name="M:Bubba.SqlCeQuery.GetExcelFilePath">
            <summary>
            Gets the excel file path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlCeQuery.CheckIfSheetNameExists(System.String,System.Data.DataTable)">
            <summary>
            Checks if sheet name exists.
            </summary>
            <param name="sheetName"> Name of the sheet. </param>
            <param name="schemaTable"> The schema table. </param>
            <returns>
            boolean
            </returns>
        </member>
        <member name="T:Bubba.SQLiteQuery">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.Query"/>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> The updates. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> The updates. </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the see cref="SQLiteQuery"/> class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(Bubba.Source,System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SQLiteQuery"/>
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> </param>
        </member>
        <member name="M:Bubba.SQLiteQuery.GetDataAdapter(System.Data.SQLite.SQLiteCommand)">
            <summary> Gets the data adapter. </summary>
            <param name="command"> The command. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.CreateTableFromExcelFile(System.String,System.String@)">
            <summary> Creates the table from excel file. </summary>
            <param name="filePath"> The file path. </param>
            <param name="sheetName"> Name of the sheet. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.CreateTableFromCsvFile(System.String,System.String@)">
            <summary>
            Creates the table from CSV file.
            </summary>
            <param name="fileName"> Name of the file. </param>
            <param name="sheetName"> Name of the sheet. </param>
            <returns>
            DataTable
            </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.GetParameters(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Gets the parameters.
            </summary>
            <param name="dict"> The dictionary. </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.GetCommandBuilder(System.Data.SQLite.SQLiteDataAdapter)">
            <summary>
            Gets the command builder.
            </summary>
            <param name="adapter"> The adapter. </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.GetExcelFilePath">
            <summary>
            Gets the excel file path.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.CheckIfSheetNameExists(System.String,System.Data.DataTable)">
            <summary>
            Checks if sheet name exists.
            </summary>
            <param name="sheetName"> Name of the sheet. </param>
            <param name="dataSchema"> The data schema. </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.SQLiteQuery.CreateDatabase">
            <summary>
            Creates the database.
            </summary>
        </member>
        <member name="T:Bubba.SqlServerQuery">
            <inheritdoc />
            <summary> </summary>
            <seealso cref="T:Badger.Query" />
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source Data. </param>
            <param name="dict"> The dictionary of parameters. </param>
            <param name="commandType"> The type of sql command. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="updates"> </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="columns"> The columns. </param>
            <param name="criteria"> The criteria. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.ISqlStatement)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="sqlStatement"> The sqlStatement. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(Bubba.Source,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="sqlText"> The SQL text. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(System.String,System.String,Bubba.Command)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="fullPath"> The fullpath. </param>
            <param name="sqlText"> </param>
            <param name="commandType"> The commandType. </param>
        </member>
        <member name="M:Bubba.SqlServerQuery.#ctor(System.String,Bubba.Command,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlServerQuery" />
            class.
            </summary>
            <param name="fullPath"> The full path. </param>
            <param name="commandType"> The commandType. </param>
            <param name="dict"> The dictionary. </param>
        </member>
        <member name="T:Bubba.DataSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DataSerializer.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataSerializer"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DataSerializer.Serialize(System.Data.DataTable)">
            <summary>
            Serializes the specified data table.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataSerializer.Deserialize(System.String)">
            <summary>
            Deserializes the specified serialized data table.
            </summary>
            <param name="serializedDataTable">The serialized data table.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataSerializer.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SqlBuilder">
            <summary> </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._extension">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._commandType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._files">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._fileName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._directoryPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlBuilder._commands">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SqlBuilder.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.CommandType">
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.Files">
            <summary>
            Gets or sets the files.
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.DirectoryPath">
            <summary>
            Gets or sets the directory path.
            </summary>
            <value>
            The directory path.
            </value>
        </member>
        <member name="P:Bubba.SqlBuilder.Commands">
            <summary>
            Gets or sets the commands.
            </summary>
            <value>
            The commands.
            </value>
        </member>
        <member name="M:Bubba.SqlBuilder.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlBuilder"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.SqlBuilder.#ctor(Bubba.Source,Bubba.Command,Bubba.EXT)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlBuilder"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="commandType"> Type of the command. </param>
            <param name="ext"> The ext. </param>
        </member>
        <member name="M:Bubba.SqlBuilder.GetCommandText(System.String)">
            <summary>
            Gets the command text.
            </summary>
            <param name="commandName">
            Name of the command.
            </param>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBuilder.GetCommandText(Bubba.Command)">
            <summary>
            Gets the command text.
            </summary>
            <param name="sqlCommand">
            The SQL command.
            </param>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBuilder.CreateRepositoryPath">
            <summary>
            Gets the SQL directory path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBuilder.GetCommands">
            <summary>
            Gets the commands.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SqlBuilder.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SqlStatement">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Badger.SqlBase"/>
            <seealso cref="T:Badger.ISqlStatement"/>
        </member>
        <member name="P:Bubba.SqlStatement.Source">
            <inheritdoc />
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Provider">
            <inheritdoc />
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.CommandType">
            <inheritdoc />
            <summary>
            Gets or sets the type of the command.
            </summary>
            <value>
            The type of the command.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Extension">
            <inheritdoc />
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Criteria">
            <inheritdoc />
            <summary>
            Gets or sets the criteria.
            </summary>
            <value>
            The criteria.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Updates">
            <inheritdoc />
            <summary>
            Gets or sets the updates.
            </summary>
            <value>
            The updates.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Fields">
            <inheritdoc />
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Numerics">
            <inheritdoc />
            <summary>
            Gets or sets the numerics.
            </summary>
            <value>
            The numerics.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.Groups">
            <summary>
            Gets or sets the groups.
            </summary>
            <value>
            The groups.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.TableName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.DbPath">
            <inheritdoc />
            <summary>
            Gets or sets the database path.
            </summary>
            <value>
            The database path.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.FileName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.SqlStatement.CommandText">
            <inheritdoc />
            <summary>
            Gets or sets the command text.
            </summary>
            <value>
            The command text.
            </value>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,System.String,Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="sqlText"> The SQL text. </param>
            <param name = "commandType" > </param>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="updates"> </param>
            <param name="where"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="commandType"> Type of the command. </param>
            <param name="where"> The arguments. </param>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="columns"> The columns. </param>
            <param name="where"> The dictionary. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlStatement.#ctor(Bubba.Source,Bubba.Provider,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Command)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlStatement"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
            <param name="fields"> The columns. </param>
            <param name="numerics"> The aggregates. </param>
            <param name="having"> The where. </param>
            <param name="commandType"> Type of the command. </param>
        </member>
        <member name="M:Bubba.SqlStatement.ToString">
            <summary> Converts to string. </summary>
            <returns>
            A
            <see cref="T:System.String"/>
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.DataConfig">
            <inheritdoc/>
            <summary> </summary>
        </member>
        <member name="F:Bubba.DataConfig._source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.DataConfig._provider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.DataConfig.Provider">
            <inheritdoc/>
            <summary>
            Gets or sets the provider.
            </summary>
            <value> The provider. </value>
        </member>
        <member name="P:Bubba.DataConfig.Source">
            <inheritdoc/>
            <summary>
            Gets or sets the source.
            </summary>
            <value> The source.
            </value>
        </member>
        <member name="M:Bubba.DataConfig.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataConfig"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.DataConfig.#ctor(Bubba.Source,Bubba.Provider)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataConfig"/>
            class.
            </summary>
            <param name="source"> The source. </param>
            <param name="provider"> The provider. </param>
        </member>
        <member name="M:Bubba.DataConfig.#ctor(Bubba.DataConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataConfig"/> class.
            </summary>
            <param name="_dataConfig"> The data arguments.</param>
        </member>
        <member name="M:Bubba.DataConfig.Deconstruct(Bubba.Source@,Bubba.Provider@)">
            <summary>
            Deconstructs the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Bubba.DataConfig.ToString">
            <summary> Converts to string. </summary>
            <returns>
            A
            <see cref="T:System.String"/>
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.DataConfig.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SqlConfig">
            <summary> </summary>
        </member>
        <member name="F:Bubba.SqlConfig._commandType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlConfig._extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SqlConfig.CommandType">
            <summary> Gets or sets the type of the command. </summary>
            <value> The type of the command. </value>
        </member>
        <member name="P:Bubba.SqlConfig.Extension">
            <summary> Gets or sets the extension. </summary>
            <value> The extension. </value>
        </member>
        <member name="M:Bubba.SqlConfig.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlConfig"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.SqlConfig.#ctor(Bubba.Command,Bubba.EXT)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlConfig"/>
            class.
            </summary>
            <param name="command"> The command. </param>
            <param name="extension"> The extension. </param>
        </member>
        <member name="M:Bubba.SqlConfig.#ctor(Bubba.SqlConfig)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SqlConfig"/> class.
            </summary>
            <param name="sqlConfig">
            The SQL configuration.
            </param>
        </member>
        <member name="M:Bubba.SqlConfig.Deconstruct(Bubba.Command@,Bubba.EXT@)">
            <summary>
            Deconstructs the specified command type.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="extension">The extension.</param>
        </member>
        <member name="M:Bubba.SqlConfig.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A
            <see cref="T:System.String"/>
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.SqlConfig.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.API">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.API.ChatCompletion">
            <summary>
            The chat completion
            </summary>
        </member>
        <member name="F:Bubba.API.Agents">
            <summary>
            The agents
            </summary>
        </member>
        <member name="F:Bubba.API.TextGeneration">
            <summary>
            The text generation
            </summary>
        </member>
        <member name="F:Bubba.API.ImageGeneration">
            <summary>
            The image generation
            </summary>
        </member>
        <member name="F:Bubba.API.SpeechGeneration">
            <summary>
            The speech generation
            </summary>
        </member>
        <member name="F:Bubba.API.Translations">
            <summary>
            The speech translation
            </summary>
        </member>
        <member name="F:Bubba.API.TextToSpeech">
            <summary>
            The text to speech
            </summary>
        </member>
        <member name="F:Bubba.API.Transcriptions">
            <summary>
            The sound transcribing
            </summary>
        </member>
        <member name="F:Bubba.API.ImageEditing">
            <summary>
            The image editing
            </summary>
        </member>
        <member name="F:Bubba.API.Assistants">
            <summary>
            The assistants
            </summary>
        </member>
        <member name="F:Bubba.API.Responses">
            <summary>
            The responses
            </summary>
        </member>
        <member name="F:Bubba.API.Files">
            <summary>
            The files
            </summary>
        </member>
        <member name="F:Bubba.API.Uploads">
            <summary>
            The uploads
            </summary>
        </member>
        <member name="F:Bubba.API.FineTuning">
            <summary>
            The fine tuning
            </summary>
        </member>
        <member name="F:Bubba.API.Embeddings">
            <summary>
            The vector embeddings
            </summary>
        </member>
        <member name="F:Bubba.API.VectorStores">
            <summary>
            The vector stores
            </summary>
        </member>
        <member name="F:Bubba.API.Projects">
            <summary>
            The projects
            </summary>
        </member>
        <member name="T:Bubba.ChangeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.ChangeType.Added">
            <summary>
            The added
            </summary>
        </member>
        <member name="F:Bubba.ChangeType.Removed">
            <summary>
            The removed
            </summary>
        </member>
        <member name="F:Bubba.ChangeType.Changed">
            <summary>
            The changed
            </summary>
        </member>
        <member name="F:Bubba.ChangeType.SelectionChanged">
            <summary>
            The selection changed
            </summary>
        </member>
        <member name="T:Bubba.Command">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Command.SELECT">
            <summary>
            The select
            </summary>
        </member>
        <member name="F:Bubba.Command.SELECTALL">
            <summary>
            The selectall
            </summary>
        </member>
        <member name="F:Bubba.Command.INSERT">
            <summary>
            The insert
            </summary>
        </member>
        <member name="F:Bubba.Command.UPDATE">
            <summary>
            The update
            </summary>
        </member>
        <member name="F:Bubba.Command.DELETE">
            <summary>
            The delete
            </summary>
        </member>
        <member name="F:Bubba.Command.CREATEDATABASE">
            <summary>
            The createdatabase
            </summary>
        </member>
        <member name="F:Bubba.Command.CREATETABLE">
            <summary>
            The createtable
            </summary>
        </member>
        <member name="F:Bubba.Command.CREATEVIEW">
            <summary>
            The createview
            </summary>
        </member>
        <member name="F:Bubba.Command.DROP">
            <summary>
            The drop
            </summary>
        </member>
        <member name="F:Bubba.Command.ALTERTABLE">
            <summary>
            The altertable
            </summary>
        </member>
        <member name="T:Bubba.Day">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Day.Sunday">
            <summary>
            The sunday
            </summary>
        </member>
        <member name="F:Bubba.Day.Monday">
            <summary>
            The monday
            </summary>
        </member>
        <member name="F:Bubba.Day.Tuesday">
            <summary>
            The tuesday
            </summary>
        </member>
        <member name="F:Bubba.Day.Wednesday">
            <summary>
            The wednesday
            </summary>
        </member>
        <member name="F:Bubba.Day.Thursday">
            <summary>
            The thursday
            </summary>
        </member>
        <member name="F:Bubba.Day.Friday">
            <summary>
            The friday
            </summary>
        </member>
        <member name="F:Bubba.Day.Saturday">
            <summary>
            The saturday
            </summary>
        </member>
        <member name="T:Bubba.EXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.EXT.DB">
            <summary>
            The database
            </summary>
        </member>
        <member name="F:Bubba.EXT.ACCDB">
            <summary>
            The accdb
            </summary>
        </member>
        <member name="F:Bubba.EXT.MDB">
            <summary>
            The MDB
            </summary>
        </member>
        <member name="F:Bubba.EXT.SDF">
            <summary>
            The SDF
            </summary>
        </member>
        <member name="F:Bubba.EXT.MDF">
            <summary>
            The MDF
            </summary>
        </member>
        <member name="F:Bubba.EXT.XLS">
            <summary>
            The XLS
            </summary>
        </member>
        <member name="F:Bubba.EXT.XLSX">
            <summary>
            The XLSX
            </summary>
        </member>
        <member name="F:Bubba.EXT.CSV">
            <summary>
            The CSV
            </summary>
        </member>
        <member name="F:Bubba.EXT.TXT">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.EXT.PDF">
            <summary>
            The PDF
            </summary>
        </member>
        <member name="F:Bubba.EXT.DOCX">
            <summary>
            The docx
            </summary>
        </member>
        <member name="F:Bubba.EXT.DOC">
            <summary>
            The document
            </summary>
        </member>
        <member name="F:Bubba.EXT.SQL">
            <summary>
            The SQL
            </summary>
        </member>
        <member name="F:Bubba.EXT.RESX">
            <summary>
            The RESX
            </summary>
        </member>
        <member name="F:Bubba.EXT.DLL">
            <summary>
            The DLL
            </summary>
        </member>
        <member name="F:Bubba.EXT.EXE">
            <summary>
            The executable
            </summary>
        </member>
        <member name="F:Bubba.EXT.ICO">
            <summary>
            The icon
            </summary>
        </member>
        <member name="F:Bubba.EXT.PNG">
            <summary>
            The PNG
            </summary>
        </member>
        <member name="F:Bubba.EXT.GIF">
            <summary>
            The GIF
            </summary>
        </member>
        <member name="F:Bubba.EXT.PPT">
            <summary>
            The Power Point Extension
            </summary>
        </member>
        <member name="F:Bubba.EXT.PPTX">
            <summary>
            The Power Point Extension
            </summary>
        </member>
        <member name="T:Bubba.HitResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HitResult.CloseButton">
            <summary>
            The close button
            </summary>
        </member>
        <member name="F:Bubba.HitResult.TabItem">
            <summary>
            The tab item
            </summary>
        </member>
        <member name="F:Bubba.HitResult.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:Bubba.HyperParameter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.Number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.TopPercent">
            <summary>
            The top percent
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.Store">
            <summary>
            The store
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.MaxCompletionTokens">
            <summary>
            The maximum tokens
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.Temperature">
            <summary>
            The temperature
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.FrequencyPenalty">
            <summary>
            The frequency
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.PresencePenalty">
            <summary>
            The presence
            </summary>
        </member>
        <member name="F:Bubba.HyperParameter.Stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="T:Bubba.IconSize">
            <summary>
            Two constants extracted from the InfoFlags, the only that are
            meaningful for the user of this class.
            </summary>
        </member>
        <member name="F:Bubba.IconSize.Large">
            <summary>
            The large
            </summary>
        </member>
        <member name="F:Bubba.IconSize.Small">
            <summary>
            The small
            </summary>
        </member>
        <member name="T:Bubba.Languages">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Languages.TXT">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.Languages.SQL">
            <summary>
            The SQL
            </summary>
        </member>
        <member name="F:Bubba.Languages.CS">
            <summary>
            The c sharp
            </summary>
        </member>
        <member name="F:Bubba.Languages.PY">
            <summary>
            The python
            </summary>
        </member>
        <member name="F:Bubba.Languages.JS">
            <summary>
            The java script
            </summary>
        </member>
        <member name="F:Bubba.Languages.VBA">
            <summary>
            The vba
            </summary>
        </member>
        <member name="F:Bubba.Languages.C">
            <summary>
            The c
            </summary>
        </member>
        <member name="F:Bubba.Languages.CPP">
            <summary>
            The CPP
            </summary>
        </member>
        <member name="T:Bubba.MenuItem">
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Close">
            <summary>
            The close
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Other">
            <summary>
            The other tabs
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Refresh">
            <summary>
            The refresh
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.SaveAs">
            <summary>
            The search
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Print">
            <summary>
            The browse
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Developer">
            <summary>
            The developer tools
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Source">
            <summary>
            The view source
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Chrome">
            <summary>
            The chrome
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Edge">
            <summary>
            The edge
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Firefox">
            <summary>
            The firefox
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Calculator">
            <summary>
            The calculator
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.TaskManager">
            <summary>
            The task manager
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.ControlPanel">
            <summary>
            The control panel
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.OneDrive">
            <summary>
            The one drive
            </summary>
        </member>
        <member name="F:Bubba.MenuItem.Exit">
            <summary>
            The exit
            </summary>
        </member>
        <member name="T:Bubba.MenuOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.File">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Folder">
            <summary>
            The folder
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Calculator">
            <summary>
            The calculator
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Calendar">
            <summary>
            The calendar
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.ControlPanel">
            <summary>
            The control panel
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.TaskManager">
            <summary>
            The task manager
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Maps">
            <summary>
            The windows maps
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.MediaPlayer">
            <summary>
            The windows media player
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Storage">
            <summary>
            The one drive
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Clock">
            <summary>
            The windows clock
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Documentation">
            <summary>
            The guidance
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Firefox">
            <summary>
            The fire fox
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Chrome">
            <summary>
            The chrome
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Edge">
            <summary>
            The edge
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Save">
            <summary>
            The save
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Refresh">
            <summary>
            The refresh
            </summary>
        </member>
        <member name="F:Bubba.MenuOption.Exit">
            <summary>
            The exit
            </summary>
        </member>
        <member name="T:Bubba.Provider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Provider.SQLite">
            <summary>
            The SQLite data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.Excel">
            <summary>
            The excel
            </summary>
        </member>
        <member name="F:Bubba.Provider.SqlServer">
            <summary>
            The SQL server data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.SqlCe">
            <summary>
            The SQL Compact data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.Access">
            <summary>
            The MS Access data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.OleDb">
            <summary>
            The OLE DB data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.CSV">
            <summary>
            The CSV data provider
            </summary>
        </member>
        <member name="F:Bubba.Provider.Text">
            <summary>
            The TXT data provider
            </summary>
        </member>
        <member name="T:Bubba.Roles">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Roles.System">
            <summary>
            The system
            </summary>
        </member>
        <member name="F:Bubba.Roles.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="F:Bubba.Roles.Assistant">
            <summary>
            The assistant
            </summary>
        </member>
        <member name="F:Bubba.Roles.Developer">
            <summary>
            The developer
            </summary>
        </member>
        <member name="F:Bubba.Roles.Tool">
            <summary>
            The tool
            </summary>
        </member>
        <member name="T:Bubba.Source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.Source.AdjustedTrialBalance">
            <summary>
            The ATB
            </summary>
        </member>
        <member name="F:Bubba.Source.AccountingEvents">
            <summary>
            The accounting events
            </summary>
        </member>
        <member name="F:Bubba.Source.Accounts">
            <summary>
            The accounts
            </summary>
        </member>
        <member name="F:Bubba.Source.ActivityCodes">
            <summary>
            The activity codes
            </summary>
        </member>
        <member name="F:Bubba.Source.Actuals">
            <summary>
            The actuals
            </summary>
        </member>
        <member name="F:Bubba.Source.AdministrativeRequests">
            <summary>
            The administrative requests
            </summary>
        </member>
        <member name="F:Bubba.Source.AggregateOutlays">
            <summary>
            The aggregate outlays
            </summary>
        </member>
        <member name="F:Bubba.Source.Allocations">
            <summary>
            The allocations
            </summary>
        </member>
        <member name="F:Bubba.Source.AllowanceHolders">
            <summary>
            The allowance holders
            </summary>
        </member>
        <member name="F:Bubba.Source.AmericanRescuePlanCarryoverEstimates">
            <summary>
            The american rescue plan carryover estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.AnnualCarryoverEstimates">
            <summary>
            The annual carryover estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.AnnualCarryoverSurvey">
            <summary>
            The annual carryover survey
            </summary>
        </member>
        <member name="F:Bubba.Source.AnnualReimbursableEstimates">
            <summary>
            The annual reimbursable estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.AnnualReimbursableSurvey">
            <summary>
            The annual reimbursable survey
            </summary>
        </member>
        <member name="F:Bubba.Source.ApplicationTables">
            <summary>
            The application tables
            </summary>
        </member>
        <member name="F:Bubba.Source.ApportionmentData">
            <summary>
            The apportionment data
            </summary>
        </member>
        <member name="F:Bubba.Source.AppropriationAvailableBalances">
            <summary>
            The appropriation available balances
            </summary>
        </member>
        <member name="F:Bubba.Source.AppropriationDocuments">
            <summary>
            The appropriation documents
            </summary>
        </member>
        <member name="F:Bubba.Source.AppropriationLevelAuthority">
            <summary>
            The appropriation level authority
            </summary>
        </member>
        <member name="F:Bubba.Source.Appropriations">
            <summary>
            The appropriations
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetaryResourceExecution">
            <summary>
            The budgetary resource execution
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetControls">
            <summary>
            The budget controls
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetDocuments">
            <summary>
            The budget documents
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetLines">
            <summary>
            The budget lines
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetObjectClasses">
            <summary>
            The budget object classes
            </summary>
        </member>
        <member name="F:Bubba.Source.Outlays">
            <summary>
            The budget outlays
            </summary>
        </member>
        <member name="F:Bubba.Source.CapitalPlanningInvestmentCodes">
            <summary>
            The capital planning investment codes
            </summary>
        </member>
        <member name="F:Bubba.Source.CarryoverApportionments">
            <summary>
            The carryover apportionments
            </summary>
        </member>
        <member name="F:Bubba.Source.CarryoverRequests">
            <summary>
            The carryover requests
            </summary>
        </member>
        <member name="F:Bubba.Source.Changes">
            <summary>
            The changes
            </summary>
        </member>
        <member name="F:Bubba.Source.ColumnSchema">
            <summary>
            The column schema
            </summary>
        </member>
        <member name="F:Bubba.Source.CompassErrors">
            <summary>
            The compass errors
            </summary>
        </member>
        <member name="F:Bubba.Source.CompassLevels">
            <summary>
            The compass levels
            </summary>
        </member>
        <member name="F:Bubba.Source.CongressionalControls">
            <summary>
            The congressional controls
            </summary>
        </member>
        <member name="F:Bubba.Source.CongressionalProjects">
            <summary>
            The congressional projects table
            </summary>
        </member>
        <member name="F:Bubba.Source.BudgetContacts">
            <summary>
            The contacts
            </summary>
        </member>
        <member name="F:Bubba.Source.CostAreas">
            <summary>
            The cost areas
            </summary>
        </member>
        <member name="F:Bubba.Source.DataRuleDescriptions">
            <summary>
            The data rule descriptions
            </summary>
        </member>
        <member name="F:Bubba.Source.Defactos">
            <summary>
            The defactos
            </summary>
        </member>
        <member name="F:Bubba.Source.Deobligations">
            <summary>
            The deobligations
            </summary>
        </member>
        <member name="F:Bubba.Source.DocumentControlNumbers">
            <summary>
            The document control numbers
            </summary>
        </member>
        <member name="F:Bubba.Source.Documents">
            <summary>
            The documents
            </summary>
        </member>
        <member name="F:Bubba.Source.EarmarkCodes">
            <summary>
            The earmark codes
            </summary>
        </member>
        <member name="F:Bubba.Source.Expenditures">
            <summary>
            The expenditures
            </summary>
        </member>
        <member name="F:Bubba.Source.External">
            <summary>
            The external
            </summary>
        </member>
        <member name="F:Bubba.Source.FederalHolidays">
            <summary>
            The federal holidays
            </summary>
        </member>
        <member name="F:Bubba.Source.FinanceObjectClasses">
            <summary>
            The finance object classes
            </summary>
        </member>
        <member name="F:Bubba.Source.FiscalYears">
            <summary>
            The fiscal years
            </summary>
        </member>
        <member name="F:Bubba.Source.FullTimeEquivalents">
            <summary>
            The full time equivalents
            </summary>
        </member>
        <member name="F:Bubba.Source.FundCategories">
            <summary>
            The fund categories
            </summary>
        </member>
        <member name="F:Bubba.Source.Funds">
            <summary>
            The funds
            </summary>
        </member>
        <member name="F:Bubba.Source.FundSymbols">
            <summary>
            The fund symbols
            </summary>
        </member>
        <member name="F:Bubba.Source.GeneralLedgerAccounts">
            <summary>
            The general ledger accounts
            </summary>
        </member>
        <member name="F:Bubba.Source.Goals">
            <summary>
            The goals
            </summary>
        </member>
        <member name="F:Bubba.Source.GsPayScales">
            <summary>
            The gs pay scales
            </summary>
        </member>
        <member name="F:Bubba.Source.HeadquartersAuthority">
            <summary>
            The headquarters authority
            </summary>
        </member>
        <member name="F:Bubba.Source.HeadquartersOffices">
            <summary>
            The headquarters offices
            </summary>
        </member>
        <member name="F:Bubba.Source.Images">
            <summary>
            The images
            </summary>
        </member>
        <member name="F:Bubba.Source.InflationReductionActCarryoverEstimates">
            <summary>
            The inflation reduction act carryover estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.JobsActCarryoverEstimates">
            <summary>
            The jobs act carryover estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.MainAccounts">
            <summary>
            The OMB Main Accounts
            </summary>
        </member>
        <member name="F:Bubba.Source.Messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.Source.MonthlyActuals">
            <summary>
            The monthly actuals
            </summary>
        </member>
        <member name="F:Bubba.Source.MonthlyLedgerAccountBalances">
            <summary>
            The monthly ledger account balances
            </summary>
        </member>
        <member name="F:Bubba.Source.MonthlyOutlays">
            <summary>
            The monthly outlays
            </summary>
        </member>
        <member name="F:Bubba.Source.NationalPrograms">
            <summary>
            The national programs
            </summary>
        </member>
        <member name="F:Bubba.Source.Objectives">
            <summary>
            The objectives
            </summary>
        </member>
        <member name="F:Bubba.Source.ObligationActivity">
            <summary>
            The obligation activity
            </summary>
        </member>
        <member name="F:Bubba.Source.Obligations">
            <summary>
            The obligations
            </summary>
        </member>
        <member name="F:Bubba.Source.OpenCommitments">
            <summary>
            The open commitments
            </summary>
        </member>
        <member name="F:Bubba.Source.OperatingPlans">
            <summary>
            The operating plans
            </summary>
        </member>
        <member name="F:Bubba.Source.Organizations">
            <summary>
            The organizations
            </summary>
        </member>
        <member name="F:Bubba.Source.Partitions">
            <summary>
            The patitions
            </summary>
        </member>
        <member name="F:Bubba.Source.PayPeriods">
            <summary>
            The pay periods
            </summary>
        </member>
        <member name="F:Bubba.Source.PayrollAuthority">
            <summary>
            The payroll authority
            </summary>
        </member>
        <member name="F:Bubba.Source.PayrollRequests">
            <summary>
            The payroll requests
            </summary>
        </member>
        <member name="F:Bubba.Source.PRC">
            <summary>
            The PRC
            </summary>
        </member>
        <member name="F:Bubba.Source.ProgramAreas">
            <summary>
            The program areas
            </summary>
        </member>
        <member name="F:Bubba.Source.ProgramProjectDescriptions">
            <summary>
            The program project descriptions
            </summary>
        </member>
        <member name="F:Bubba.Source.ProgramProjects">
            <summary>
            The program projects
            </summary>
        </member>
        <member name="F:Bubba.Source.Projects">
            <summary>
            The projects
            </summary>
        </member>
        <member name="F:Bubba.Source.Providers">
            <summary>
            The providers
            </summary>
        </member>
        <member name="F:Bubba.Source.PublicLaws">
            <summary>
            The public laws
            </summary>
        </member>
        <member name="F:Bubba.Source.QueryDefinitions">
            <summary>
            The query definitions
            </summary>
        </member>
        <member name="F:Bubba.Source.ReconciliationLines">
            <summary>
            The reconciliation lines
            </summary>
        </member>
        <member name="F:Bubba.Source.RecoveryAct">
            <summary>
            The recovery act
            </summary>
        </member>
        <member name="F:Bubba.Source.RegionalAuthority">
            <summary>
            The regional authority
            </summary>
        </member>
        <member name="F:Bubba.Source.RegionalOffices">
            <summary>
            The regional offices
            </summary>
        </member>
        <member name="F:Bubba.Source.ReimbursableAgreements">
            <summary>
            The reimbursable agreements
            </summary>
        </member>
        <member name="F:Bubba.Source.ReimbursableFunds">
            <summary>
            The reimbursable funds
            </summary>
        </member>
        <member name="F:Bubba.Source.Reports">
            <summary>
            The reports
            </summary>
        </member>
        <member name="F:Bubba.Source.ResourcePlanningOffices">
            <summary>
            The resource planning offices
            </summary>
        </member>
        <member name="F:Bubba.Source.Resources">
            <summary>
            The resources
            </summary>
        </member>
        <member name="F:Bubba.Source.ResourceLocations">
            <summary>
            The URLs
            </summary>
        </member>
        <member name="F:Bubba.Source.ResponsibilityCenters">
            <summary>
            The responsibility centers
            </summary>
        </member>
        <member name="F:Bubba.Source.SchemaTypes">
            <summary>
            The schema types
            </summary>
        </member>
        <member name="F:Bubba.Source.SpendingDocuments">
            <summary>
            The spending documents
            </summary>
        </member>
        <member name="F:Bubba.Source.SpendingRates">
            <summary>
            The spending rates
            </summary>
        </member>
        <member name="F:Bubba.Source.StateGrantObligations">
            <summary>
            The state grant obligations
            </summary>
        </member>
        <member name="F:Bubba.Source.StateOrganizations">
            <summary>
            The state organizations
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfAmericanRescuePlanFunds">
            <summary>
            The status of american rescue plan funds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfAppropriations">
            <summary>
            The status of appropriations
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfBudgetaryResources">
            <summary>
            The status of budgetary resources
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfBudgetExecution">
            <summary>
            The SF 133
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfEarmarks">
            <summary>
            The status of earmarks
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfFunds">
            <summary>
            The status of funds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfInflationReductionActFunds">
            <summary>
            The status of inflation reduction act funds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfJobsActFunds">
            <summary>
            The status of jobs act funds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfSupplementalFunds">
            <summary>
            The status of supplemental funds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfSpecialAccountFunds">
            <summary>
            The StatusOfSpecialAccountFunds
            </summary>
        </member>
        <member name="F:Bubba.Source.StatusOfSuperfundSites">
            <summary>
            The StatusOfSuperfundSites
            </summary>
        </member>
        <member name="F:Bubba.Source.SubAppropriations">
            <summary>
            The sub appropriations
            </summary>
        </member>
        <member name="F:Bubba.Source.SupplementalCarryoverEstimates">
            <summary>
            The supplemental carryover estimates
            </summary>
        </member>
        <member name="F:Bubba.Source.SupplementalOutlayEstimates">
            <summary>
            SupplementalOutlayEstimates
            </summary>
        </member>
        <member name="F:Bubba.Source.TransferActivity">
            <summary>
            The transfer activity
            </summary>
        </member>
        <member name="F:Bubba.Source.Transfers">
            <summary>
            The transfers
            </summary>
        </member>
        <member name="F:Bubba.Source.TransTypes">
            <summary>
            The trans types
            </summary>
        </member>
        <member name="F:Bubba.Source.TreasurySymbols">
            <summary>
            The treasury symbols
            </summary>
        </member>
        <member name="F:Bubba.Source.UnliquidatedObligations">
            <summary>
            The unliquidated obligations
            </summary>
        </member>
        <member name="F:Bubba.Source.UnobligatedBalances">
            <summary>
            The unobligated balances
            </summary>
        </member>
        <member name="T:Bubba.SqlCeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.SMALLINT">
            <summary>
            The smallint SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.INT">
            <summary>
            The int SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.TINYINT">
            <summary>
            The tinyint SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.BIGINT">
            <summary>
            The bigint SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.REAL">
            <summary>
            The real SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.FLOAT">
            <summary>
            The float SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.MONEY">
            <summary>
            The money SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.NUMERIC">
            <summary>
            The numeric SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.CHAR">
            <summary>
            The character SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.TEXT">
            <summary>
            The text SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.VARCHAR">
            <summary>
            The varchar SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.NCHAR">
            <summary>
            The nchar SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.NTEXT">
            <summary>
            The ntext SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.NVARCHAR">
            <summary>
            The nvarchar SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.DATETIME">
            <summary>
            The datetime SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.BINARY">
            <summary>
            The binary SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.IMAGE">
            <summary>
            The image SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.VARBINARY">
            <summary>
            The varbinary SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.CURSOR">
            <summary>
            The cursor SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.ROWVERSION">
            <summary>
            The row version SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.UNIQUEIDENTIFIER">
            <summary>
            The uniqueidentifier SQL CE data type
            </summary>
        </member>
        <member name="F:Bubba.SqlCeType.TIMESTAMP">
            <summary>
            The timestamp SQL CE data type
            </summary>
        </member>
        <member name="T:Bubba.SQLiteType">
            <summary>
            The SQLite enum provides the data types used in SQLite databases
            </summary>
        </member>
        <member name="F:Bubba.SQLiteType.INTEGER">
            <summary>
            The integer SQLite data type
            </summary>
        </member>
        <member name="F:Bubba.SQLiteType.REAL">
            <summary>
            The float SQLite data type
            </summary>
        </member>
        <member name="F:Bubba.SQLiteType.TEXT">
            <summary>
            The text SQLite data type
            </summary>
        </member>
        <member name="F:Bubba.SQLiteType.BLOB">
            <summary>
            The BLOB SQLite data type
            </summary>
        </member>
        <member name="F:Bubba.SQLiteType.NUMERIC">
            <summary>
            The numeric SQLite data type
            </summary>
        </member>
        <member name="T:Bubba.SqlServerType">
            <summary>
            The SqlServer enum provides the data types used in SQL Server databases
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.TINYINT">
            <summary>
            The tinyint
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.SMALLINT">
            <summary>
            The smallint
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.INT">
            <summary>
            The int
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.BIGINT">
            <summary>
            The bigint
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.NUMERIC">
            <summary>
            The numeric
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.DECIMAL">
            <summary>
            The decimal
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.SMALLMONEY">
            <summary>
            The smallmoney
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.MONEY">
            <summary>
            The money
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.FLOAT">
            <summary>
            The float
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.REAL">
            <summary>
            The real
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.CHAR">
            <summary>
            The character
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.TEXT">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.VARCHAR">
            <summary>
            The varchar
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.NCHAR">
            <summary>
            The nchar
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.NTEXT">
            <summary>
            The ntext
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.NVARCHAR">
            <summary>
            The nvarchar
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.TIME">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.DATE">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.DATETIME">
            <summary>
            The datetime
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.SMALLDATETIME">
            <summary>
            The smalldatetime
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.DATETIME2">
            <summary>
            The datetim e2
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.DATETIMEOFFSET">
            <summary>
            The datetimeoffset
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.BINARY">
            <summary>
            The binary
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.IMAGE">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.VARBINARY">
            <summary>
            The varbinary
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.CURSOR">
            <summary>
            The cursor
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.ROWVERSION">
            <summary>
            The rowversion
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.HIERARCHYID">
            <summary>
            The hierarchyid
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.UNIQUEIDENTIFIER">
            <summary>
            The uniqueidentifier
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.SQL_VARIANT">
            <summary>
            The SQL variant
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.XML">
            <summary>
            The XML
            </summary>
        </member>
        <member name="F:Bubba.SqlServerType.TABLE">
            <summary>
            The table
            </summary>
        </member>
        <member name="T:Bubba.SubDomainType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SubDomainType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Bubba.SubDomainType.Alphabetic">
            <summary>
            The alphabetic
            </summary>
        </member>
        <member name="F:Bubba.SubDomainType.Numeric">
            <summary>
            The numeric
            </summary>
        </member>
        <member name="F:Bubba.SubDomainType.AlphaNumeric">
            <summary>
            The alphanumeric
            </summary>
        </member>
        <member name="T:Bubba.CollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.CollectionExtensions.AddIf``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean},``0)">
            <summary>
            Adds if.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},``0[])">
            <summary>
            Adds the range.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">
            The collection.
            </param>
            <param name="values">
            The values.
            </param>
        </member>
        <member name="M:Bubba.CollectionExtensions.IsEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">The collection.</param>
            <returns>
            <c> true </c>
            if the specified collection is empty; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.CollectionExtensions.RemoveIfContains``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            Removes if contains.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">The collection.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Bubba.CollectionExtensions.RemoveRange``1(System.Collections.Generic.ICollection{``0},``0[])">
            <summary>
            Removes the range.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">The collection.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Bubba.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})">
            <summary>
            Removes the where.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
        </member>
        <member name="M:Bubba.CollectionExtensions.IsEmpty(System.Collections.ICollection)">
            <summary>
            Determines whether this instance is empty.
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            <c> true </c>
            if the specified collection is empty; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.CollectionExtensions.ToBindingList``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Converts to bindinglist.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="collection">The collection.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.CollectionExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.DataRowExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DataRowExtensions.ToSqlDbParameters(System.Data.DataRow,Bubba.Provider)">
            <summary>
            Converts to sql db parameters.
            </summary>
            <param name="dataRow">The data row.</param>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataRowExtensions.ToDictionary(System.Data.DataRow)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="dataRow">The data row.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataRowExtensions.ToSortedList(System.Data.DataRow)">
            <summary>
            Converts to namevaluecollection.
            </summary>
            <param name="dataRow">The data row.</param>
            <returns>
            SortedList(string, object)
            </returns>
        </member>
        <member name="M:Bubba.DataRowExtensions.GetBytes(System.Data.DataRow,System.String)">
            <summary>
            Gets the bytes.
            </summary>
            <param name="dataRow">The data row.</param>
            <param name="columnName">Name of the column.</param>
            <returns>
            IEnumerable
            </returns>
        </member>
        <member name="M:Bubba.DataRowExtensions.IterItems(System.Data.DataRow)">
            <summary>
            Iterates the items.
            </summary>
            <param name="dataRow">The data row.</param>
            <returns>
            IEnumerator(object)
            </returns>
        </member>
        <member name="M:Bubba.DataRowExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.DataTableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DataTableExtensions.ToXml(System.Data.DataTable,System.String)">
            <summary>
            Converts to xml.
            </summary>
            <param name="dataTable">The dataTable.</param>
            <param name="rootName">The rootName.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.WriteToExcel(System.Data.DataTable,System.String)">
            <summary>
            Converts datatable to excel.
            </summary>
            <param name="dataTable">The dataTable.</param>
            <param name="filePath">The filePath.</param>
            <exception cref="T:System.Exception">
            OSExportToExcelFile: Null or empty input datatable!\n
            or OSExportToExcelFile: Excel file could not
            be saved.\n" + ex.Message</exception>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetIndexValues(System.Data.DataTable)">
            <summary>
            Gets the primary key values.
            </summary>
            <param name="dataTable">The dataTable.</param>
            <returns>
            IEnumerable
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetUniqueColumnValues(System.Data.DataTable,System.String)">
            <summary>
            Gets the unique column values.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="columnName">Name of the column.</param>
            <returns>
            string[ ]
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetUniqueColumnValues(System.Data.DataTable,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets the unique column values.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="columnName">Name of the column.</param>
            <param name="where">The where.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.Filter(System.Data.DataTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Filters the specified dictionary.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="dict">The dictionary.</param>
            <returns>
            IEnumerable
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetColumnNames(System.Data.DataTable)">
            <summary>
            Gets the column names.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetNumericColumns(System.Data.DataTable)">
            <summary>
            Gets the numeric columns.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns>
            IList{DataColumn}
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetTextColumns(System.Data.DataTable)">
            <summary>
            Gets the text columns.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.GetDateColumns(System.Data.DataTable)">
            <summary>
            Gets the date columns.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns>
            IList{DataColumn}
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.RemoveColumn(System.Data.DataTable,System.String)">
            <summary>
            Removes the column.
            </summary>
            <param name="dataTable">The data table.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Bubba.DataTableExtensions.ToBindingList(System.Data.DataTable)">
            <summary>
            Converts to bindinglist.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.ToSortedList(System.Data.DataTable)">
            <summary>
            Converts to sortedlist.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns>
            SortedList(int, DataRow)
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.ToObservable(System.Data.DataTable)">
            <summary>
            Converts to observable.
            </summary>
            <param name="dataTable">The data table.</param>
            <returns>
            ObservableCollection( DataRow )
            </returns>
        </member>
        <member name="M:Bubba.DataTableExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.DateTimeExtensions">
            <summary> </summary>
        </member>
        <member name="M:Bubba.DateTimeExtensions.IsDate(System.Object)">
            <summary>
            Determines whether this instance is date.
            </summary>
            <param name="date">The date.</param>
            <returns>
              <c>true</c> if the specified date is date;
              otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.IsWeekDay(System.DateTime)">
            <summary>
            Determines whether [is week day].
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>
              <c>true</c> if [is week day] [the specified date time];
              otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.IsWeekEnd(System.DateTime)">
            <summary>
            Determines whether [is weekend].
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>
              <c>true</c> if [is weekend] [the specified date time];
              otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.GetWeekdays(System.DateTime,System.DateTime)">
            <summary>
            Returns the weekdays between two dates.
            </summary>
            <param name="startDate"> The start time. </param>
            <param name="endDate"> The end time. </param>
            <returns> </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.GetWeekends(System.DateTime,System.DateTime)">
            <summary>
            Gets the weekends.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.GetHolidays(System.DateTime,System.DateTime)">
            <summary>
            Gets the holidays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.GetWorkdays(System.DateTime,System.DateTime)">
            <summary>
            Gets the workdays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.IsBetween(System.DateTime,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Determines whether the specified start date is between.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="compareTime">if set to <c>true</c> [compare time].</param>
            <returns>
              <c>true</c> if the specified start date is between; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.AddWorkdays(System.DateTime,System.Int32)">
            <summary>
            Adds the workdays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="days">The days.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.CountWeekDays(System.DateTime,System.DateTime)">
            <summary>
            Counts the week days.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.CountWeekEnds(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of weekends between two dates.
            </summary>
            <param name="startDate"> The start time. </param>
            <param name="endDate"> The end time. </param>
            <returns>
            int
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.CountWorkdays(System.DateTime,System.DateTime)">
            <summary>
            Counts the workdays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.CountHolidays(System.DateTime,System.DateTime)">
            <summary>
            Counts the holidays.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>
            int
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.IsFederalHoliday(System.DateTime)">
            <summary>
            Determines whether [is federal holiday].
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>
              <c>true</c> if [is federal holiday]
              [the specified date time]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DateTimeExtensions.Fail(System.Exception)">
            <summary>
            Launches the ErrorWindow.
            </summary>
            <param name="ex">
            The exception.
            </param>
        </member>
        <member name="T:Bubba.DictionaryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DictionaryExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Updates a IDictionary( K, V ) with a TKey and TValue or adds it
            </summary>
            <typeparam name="K">The type of the key.</typeparam>
            <typeparam name="V">The type of the value.</typeparam>
            <param name="dict">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToNameValueCollection(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts an IDictionary( K, V ) into a NameValueCollection
            </summary>
            <param name="dict">The dictionary.</param>
            <returns>
            NameValueCollection
            </returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToCriteria(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Predicates the specified logic.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToBindingList(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts an IDictionary( string, object) to a bindinglist.
            </summary>
            <param name="dict">The NVC.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToSortedList(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts an IDcitionary( T, V ) to a SortedList( int, KeyValuePair(string. object)).
            </summary>
            <param name="dict">The dictionary.</param>
            <returns>
            SortedList( T, V )
            </returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToSqlDbParameters(System.Collections.Generic.IDictionary{System.String,System.Object},Bubba.Provider)">
            <summary>
            Converts to sql db parameters.
            </summary>
            <param name="dict">The dictionary.</param>
            <param name="provider">The provider.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToKeyBindingList``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts to Key bindinglist.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToValueBindingList``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts to value bindinglist.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="dict">The dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToJson(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Converts to json.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            dictionary - Dictionary cannot be null</exception>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToJson(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Converts to json.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            dict - Dictionary cannot be null</exception>
        </member>
        <member name="M:Bubba.DictionaryExtensions.ToJson(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts to json.
            </summary>
            <param name="dict">The dictionary.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">dict</exception>
        </member>
        <member name="M:Bubba.DictionaryExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.EnumerableExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.EnumerableExtensions.ToBindingList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts to bindinglist.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.ToObservable(System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            Converts to observable.
            </summary>
            <param name="enumerable">The enumerable.</param>
            <returns>
            ObservableCollection
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.WhereNot``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Filters a sequence of values based on a given predicate
            and returns those values that don't match
            the predicate.
            </summary>
            <typeparam name="T">The type of the elements of
            <paramref name="source" />
            .</typeparam>
            <param name="source">An
            <see cref="T:System.Collections.Generic.IEnumerable`1" />
            to filter.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns>
            Those values that don't match the given predicate.
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.WhereNot``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
            <summary>
            Filters a sequence of values based on a predicate
            and returns those values that don't match the
            given predicate. Each element's index is used in
            the logic of predicate function.
            </summary>
            <typeparam name="_">The type of the elements of
            <paramref name="source" />
            .</typeparam>
            <param name="source">An
            <see cref="T:System.Collections.Generic.IEnumerable`1" />
            to filter.</param>
            <param name="predicate">A function to test each element
            for a condition; the second parameter of the functions represents
            the index of the source element.</param>
            <returns>
            Those values that don't match the given predicate.
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.Filter(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.String)">
            <summary>
            Filters the specified columnName.
            </summary>
            <param name="dataRow">The dataRow.</param>
            <param name="name">The columnName.</param>
            <param name="value">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.Filter(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Filters the specified dictionary.
            </summary>
            <param name="dataRow">The data row.</param>
            <param name="where">The dictionary.</param>
            <returns>
            IEnumerable{DataRow}
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.ToExcel``1(System.Collections.Generic.IEnumerable{``0},System.String,OfficeOpenXml.Table.TableStyles)">
            <summary>
            Converts to excel.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The dataRow.</param>
            <param name="path">The path.</param>
            <param name="style">The style.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Verify Path</exception>
            <exception cref="T:System.Exception">Invalid file path. or Invalid file path. or No dataRow to export.</exception>
        </member>
        <member name="M:Bubba.EnumerableExtensions.Slice``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Extracts a contiguous count of elements from a sequence at a particular zero-based starting index.
            </summary>
            <typeparam name="T">The type of the elements in the source sequence.</typeparam>
            <param name="sequence">The sequence from which to extract elements.</param>
            <param name="startIndex">The zero-based index at which to begin slicing.</param>
            <param name="count">The number of items to slice out of the index.</param>
            <returns>
            A new sequence containing any elements sliced out from the source sequence.
            </returns>
            <remarks>
            <para>
            If the starting position or count specified result in slice extending past the end of the sequence,
            it will return all elements up to that point. There is no guarantee that the resulting sequence
            will contain the number of elements requested - it may have anywhere from 0 to
            <paramref name="count" />
            .
            </para>
            <para>
            This method is implemented in an optimized manner for any sequence implementing
            <see cref="T:System.Collections.Generic.IList`1" />
            .
            </para>
            <para>
            The result of
            <see cref="M:Bubba.EnumerableExtensions.Slice``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)" />
            is identical to:
            <c> sequence.Skip(startIndex).Take(count) </c></para>
            </remarks>
        </member>
        <member name="M:Bubba.EnumerableExtensions.LazySlice``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Slices the specified start.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The dataRow.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.Cycle``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Turns a finite sequence into a circular one,
            or equivalently, repeats the original sequence
            indefinitely.
            </summary>
            <typeparam name="T">The type of the elements of
            <paramref name="source" />
            .</typeparam>
            <param name="source">A
            <see cref="T:System.Collections.Generic.IEnumerable`1" />
            to cycle through.</param>
            <returns>
            An infinite sequence cycling through the given sequence.
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.CycleIterator``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Cycles the iterator.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns>
            IEnumerable{T}
            </returns>
        </member>
        <member name="M:Bubba.EnumerableExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ExcelExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.ExcelExtensions.ToDataSet(OfficeOpenXml.ExcelPackage,System.Boolean)">
            <summary>
            Converts to data set.
            </summary>
            <param name="excelPackage">The excelPackage.</param>
            <param name="header">if set to
            <c> true </c>
            [header].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.ToDataSet(OfficeOpenXml.ExcelPackage,System.Int32)">
            <summary>
            Converts to data set.
            </summary>
            <param name="excelPackage">The excelPackage.</param>
            <param name="header">The header.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">header - Must be 0 or greater.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">header - Must be 0 or greater.</exception>
        </member>
        <member name="M:Bubba.ExcelExtensions.TrimLastEmptyRows(OfficeOpenXml.ExcelWorksheet)">
            <summary>
            Trims the last empty rows.
            </summary>
            <param name="worksheet">The worksheet.</param>
        </member>
        <member name="M:Bubba.ExcelExtensions.IsLastRowEmpty(OfficeOpenXml.ExcelWorksheet)">
            <summary>
            Determines whether [is last row empty].
            </summary>
            <param name="worksheet">The worksheet.</param>
            <returns>
            <c> true </c>
            if [is last row empty] [the specified worksheet]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.SetColumnWidth(OfficeOpenXml.ExcelColumn,System.Double)">
            <summary>
            Sets the width.
            </summary>
            <param name="column">The column.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Bubba.ExcelExtensions.SetRowHeight(OfficeOpenXml.ExcelRow,System.Double)">
            <summary>
            Sets the height.
            </summary>
            <param name="row">The row.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Bubba.ExcelExtensions.ExpandColumn(System.Int32[],System.Int32)">
            <summary>
            Expands the column.
            </summary>
            <param name="index">The index.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.ExpandRow(System.Int32[],System.Int32)">
            <summary>
            Expands the row.
            </summary>
            <param name="index">The index.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.MoveColumn(System.Int32[],System.Int32)">
            <summary>
            Moves the column.
            </summary>
            <param name="index">The index.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.MoveRow(System.Int32[],System.Int32)">
            <summary>
            Moves the row.
            </summary>
            <param name="index">The index.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelExtensions.AllBorder(OfficeOpenXml.ExcelRange,OfficeOpenXml.Style.ExcelBorderStyle)">
            <summary>
            All the borders.
            </summary>
            <param name="range">The range.</param>
            <param name="borderStyle">The border style.</param>
        </member>
        <member name="M:Bubba.ExcelExtensions.BackgroundColor(OfficeOpenXml.ExcelRange,System.Drawing.Color,OfficeOpenXml.Style.ExcelFillStyle)">
            <summary>
            Backgrounds the color.
            </summary>
            <param name="range">The range.</param>
            <param name="color">The color.</param>
            <param name="fillStyle">The fill style.</param>
        </member>
        <member name="M:Bubba.ExcelExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ExcelExtensions.InsertMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.ExcelExtensions.InsertMode.RowBefore">
            <summary>
            The row before
            </summary>
        </member>
        <member name="F:Bubba.ExcelExtensions.InsertMode.RowAfter">
            <summary>
            The row after
            </summary>
        </member>
        <member name="F:Bubba.ExcelExtensions.InsertMode.ColumnRight">
            <summary>
            The column right
            </summary>
        </member>
        <member name="F:Bubba.ExcelExtensions.InsertMode.ColumnLeft">
            <summary>
            The column left
            </summary>
        </member>
        <member name="T:Bubba.FileStreamExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.FileStreamExtensions.IterateLines(System.IO.TextReader)">
            <summary>
            The method provides an iterator through all lines of the str reader.
            </summary>
            <param name="reader">The str reader.</param>
            <returns>
            The iterator
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.IterateLines(System.IO.TextReader,System.Action{System.String})">
            <summary>
            The method executes the passed delegate /lambda expression) for all lines of the str reader.
            </summary>
            <param name="reader">The str reader.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.FileStreamExtensions.GetReader(System.IO.Stream)">
            <summary>
            Opens a StreamReader using the default encoding.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The stream reader
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.GetReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Opens a StreamReader using the specified encoding.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The stream reader
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.GetWriter(System.IO.Stream)">
            <summary>
            Gets the writer.
            </summary>
            <param name="stream">
            The stream.
            </param>
            <returns>
              <br />
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.GetWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Opens a StreamWriter using the specified encoding.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The stream writer
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.ReadToEnd(System.IO.Stream)">
            <summary>
            Reads all str from the stream using the default encoding.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The result str.
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.ReadToEnd(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads all str from the stream using a specified encoding.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The result str.
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.SeekBeginning(System.IO.Stream)">
            <summary>
            Sets the stream cursor to the beginning of the stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The stream
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.SeekEnding(System.IO.Stream)">
            <summary>
            Sets the stream cursor to the end of the stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The stream
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copies one stream into another one.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="target">The target stream.</param>
            <param name="buffer">The buffer size used to read / write.</param>
            <returns>
            The source stream.
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.CopyToMemory(System.IO.Stream)">
            <summary>
            Copies any stream into a local MemoryStream
            </summary>
            <param name="stream">The source stream.</param>
            <returns>
            The copied memory stream.
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.ReadAllBytes(System.IO.Stream)">
            <summary>
            Reads the entire stream and returns an IEnumerable byte.
            </summary>
            <param name="stream">The stream.</param>
            <returns>
            The IEnumerable byte
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.ReadFixedbuffersize(System.IO.Stream,System.Int32)">
            <summary>
            Reads a fixed number of bytes.
            </summary>
            <param name="stream">The stream to read from</param>
            <param name="bufsize">The number of bytes to read.</param>
            <returns>
            the read byte[]
            </returns>
        </member>
        <member name="M:Bubba.FileStreamExtensions.Write(System.IO.Stream,System.Byte[])">
            <summary>
            Writes all passed bytes to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="bytes">The byte array / buffer.</param>
        </member>
        <member name="M:Bubba.FileStreamExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.LinqExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.LinqExtensions.None``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            The specified predicate.
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines whether [has at least] [the specified minimum count].
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="minCount">The minimum count.</param>
            <returns>
            <c> true </c>
            if [has at least] [the specified minimum count]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            Determines whether [has at least] [the specified minimum count].
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="minCount">The minimum count.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            <c> true </c>
            if [has at least] [the specified minimum count]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasExactly``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines whether the specified count has exactly.
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <returns>
            <c> true </c>
            if the specified count has exactly; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasExactly``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            Determines whether the specified count has exactly.
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="count">The count.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            <c> true </c>
            if the specified count has exactly; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines whether [has at most] [the specified limit].
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="limit">The limit.</param>
            <returns>
            <c> true </c>
            if [has at most] [the specified limit]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.HasAtMost``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            Determines whether [has at most] [the specified limit].
            </summary>
            <typeparam name="T">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="limit">The limit.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            <c> true </c>
            if [has at most] [the specified limit]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.LinqExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.OptionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.OptionExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Firsts or none.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.OptionExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            First or none.
            </summary>
            <typeparam name="_"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.OptionExtensions.SelectOptional``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,Bubba.Option{``0}})">
            <summary>
            Selects the optional.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="map">The map.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.OptionExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.QueueExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.QueueExtensions.Add``1(System.Collections.Generic.Queue{``0},``0)">
            <summary>
            Adds the specified item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queue">The queue.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Bubba.StringExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.StringExtensions.SplitPascal(System.String)">
            <summary>
            The SplitPascal
            </summary>
            <param name="text">The text.</param>
            <returns>
            The
            <see cref="T:System.String" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.IfNullThen(System.String,System.String)">
            <summary>
            The IfNullThen
            </summary>
            <param name="text">The text
            <see cref="T:System.String" /></param>
            <param name="alt">The alt
            <see cref="T:System.String" /></param>
            <returns>
            The
            <see cref="T:System.String" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.In(System.String,System.String[])">
            <summary>
            Ins the specified values.
            </summary>
            <param name="text">The text.</param>
            <param name="values">The value list to compare with the object.</param>
            <returns>
            true if the values list contains the object, else false.
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.Last(System.String,System.Int32)">
            <summary>
            The Right
            </summary>
            <param name="text">The text
            <see cref="T:System.String" /></param>
            <param name="length">The length
            <see cref="T:System.Int32" /></param>
            <returns>
            The
            <see cref="T:System.String" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.First(System.String,System.Int32)">
            <summary>
            The Left
            </summary>
            <param name="text">The text
            <see cref="T:System.String" /></param>
            <param name="length">The length
            <see cref="T:System.Int32" /></param>
            <returns>
            The
            <see cref="T:System.String" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.FirstToUpper(System.String)">
            <summary>
            The FirstToUpper
            </summary>
            <param name="text">The theString
            <see cref="T:System.String" /></param>
            <returns>
            The
            <see cref="T:System.String" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.ToDateTime(System.String)">
            <summary>
            The ToDateTime
            </summary>
            <param name="text">The text
            <see cref="T:System.String" /></param>
            <returns>
            The
            <see />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.ToMemoryStream(System.String)">
            <summary>
            The ToStream
            </summary>
            <param name="text">The source
            <see cref="T:System.String" /></param>
            <returns>
            The
            <see cref="T:System.IO.MemoryStream" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.ToXmlDocument(System.String)">
            <summary>
            A string extension method that converts the str to an XmlDocument.
            </summary>
            <param name="xml">The XML.</param>
            <returns>
            str as an XmlDocument.
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.ToByteArray(System.String)">
            <summary>
            A string extension method that converts the str to a byte array.
            </summary>
            <param name="text">The str to act on.</param>
            <returns>
            str as a byte[].
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.WordCount(System.String)">
            <summary>
            The WordCount
            </summary>
            <param name="text">The input
            <see cref="T:System.String" /></param>
            <returns>
            The
            <see cref="T:System.Int32" />
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.WriteToFile(System.String,System.String)">
            <summary>
            Writes out a text to a file.
            </summary>
            <param name="text">The complete file filePath to write to.</param>
            <param name="filePath">A String containing text to be written to the file.</param>
        </member>
        <member name="M:Bubba.StringExtensions.Email(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Send an email using the supplied string.
            </summary>
            <param name="body">String that will be used i the body of the email.</param>
            <param name="subject">Subject of the email.</param>
            <param name="sender">The email address from which the message was sent.</param>
            <param name="recipient">The receiver of the email.</param>
            <param name="server">The server from which the email will be sent.</param>
            <returns>
            A boolean value indicating the success of the email send.
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.RemoveSpaces(System.String)">
            <summary>
            remove space, not line end Useful when parsing user
            input such phone, price int.Print("1 000
            000".RemoveSpaces(),.....
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsValidEmailAddress(System.String)">
            <summary>
            Determines whether [is valid email address].
            </summary>
            <param name="s">The s.</param>
            <returns>
            <c> true </c>
            if [is valid email address] [the specified s]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.RemovePrefix(System.String,System.String,System.Boolean)">
            <summary>
            Removes the prefix.
            </summary>
            <param name="str">The string.</param>
            <param name="prefix">The prefix.</param>
            <param name="caseSensitive">if set to <c>true</c> [case sensitive].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.BeginsWith(System.String,System.String,System.Boolean)">
            <summary>
            Beginses the with.
            </summary>
            <param name="str">The string.</param>
            <param name="beginsWith">The begins with.</param>
            <param name="caseSensitive">
            if set to <c>true</c> [case sensitive].
            </param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsNull(System.String,System.Boolean)">
            <summary>
            Checks if valid.
            </summary>
            <param name="text">The text.</param>
            <param name="trimAndCheck">if set to <c>true</c> [trim and check].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.SupportedInFilePath(System.Char)">
            <summary>
            Supporteds the in file path.
            </summary>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.ChangePathSlash(System.String,System.String)">
            <summary>
            Changes the path slash.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="slash">The slash.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.FileUrlToPath(System.String)">
            <summary>
            Files the URL to path.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsFIle(System.String)">
            <summary>
            Files the not exists.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsFilePath(System.String)">
            <summary>
            Checks if file path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.GetAfter(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the after.
            </summary>
            <param name="text">The text.</param>
            <param name="find">The find.</param>
            <param name="startAt">The start at.</param>
            <param name="returnAll">
            if set to <c>true</c> [return all].
            </param>
            <param name="forward">
            if set to <c>true</c> [forward].
            </param>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.GetAfterLast(System.String,System.String,System.Boolean)">
            <summary>
            Gets the after last.
            </summary>
            <param name="text">The text.</param>
            <param name="find">The find.</param>
            <param name="returnAll">if set to <c>true</c> [return all].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.PathToUrl(System.String,System.String)">
            <summary>
            Paths to URL.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="removeBaseDir">The remove base dir.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsFileOffline(System.String)">
            <summary>
            Determines whether [is file offline].
            </summary>
            <param name="url">The URL.</param>
            <returns>
            <c> true </c>
            if [is file offline] [the specified URL]; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.IsLocalhost(System.String)">
            <summary>
            Determines whether this instance is localhost.
            </summary>
            <param name="url">The URL.</param>
            <returns>
            <c> true </c>
            if the specified URL is localhost; otherwise,
            <c> false </c>
            .
            </returns>
        </member>
        <member name="M:Bubba.StringExtensions.UrlDecode(System.String)">
            <summary>
            URLs the decode.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.HexToInt(System.Char)">
            <summary>
            Hexadecimals to int.
            </summary>
            <param name="hex">The hexadecimal.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.DecodeUrlForFilePath(System.String)">
            <summary>
            Decodes the URL for filepath.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.UrlEncode(System.String)">
            <summary>
            URLs the encode.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.StringExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TimeSpanExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TimeSpanExtensions.AvgDaysInAYear">
            <summary>
            The average days in a year
            </summary>
        </member>
        <member name="F:Bubba.TimeSpanExtensions.AvgDaysInAMonth">
            <summary>
            The average days in a month
            </summary>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetYears(System.TimeSpan)">
            <summary>
            Gets the years.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetTotalYears(System.TimeSpan)">
            <summary>
            Gets the total years.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetMonths(System.TimeSpan)">
            <summary>
            Gets the months.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetTotalMonths(System.TimeSpan)">
            <summary>
            Gets the total months.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetWeeks(System.TimeSpan)">
            <summary>
            Gets the weeks.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetTotalWeeks(System.TimeSpan)">
            <summary>
            Gets the total weeks.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetDays(System.TimeSpan)">
            <summary>
            Gets the days.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetMicroseconds(System.TimeSpan)">
            <summary>
            Gets the microseconds.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.GetNanoseconds(System.TimeSpan)">
            <summary>
            Gets the nanoseconds.
            </summary>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.Round(System.TimeSpan,System.TimeSpan,System.MidpointRounding)">
            <summary>
            Rounds the specified rounding interval.
            </summary>
            <param name="timeSpan">The time span.</param>
            <param name="interval">The rounding interval.</param>
            <param name="rounding">The rounding type.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TimeSpanExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.TypeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.TypeExtensions.SerializeToJavaScript``1(``0)">
            <summary>
            Javas the script serialize.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TypeExtensions.SerializeToXml``1(``0)">
            <summary>
            XMLs serialize.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type">The type.</param>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.TypeExtensions.InvokeIf(System.Windows.Controls.Control,System.Action)">
            <summary>
            Invokes if.
            </summary>
            <param name="control">The control.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.TypeExtensions.InvokeIf(System.Windows.Window,System.Action)">
            <summary>
            Invokes if.
            </summary>
            <param name="window">The window.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.TypeExtensions.InvokeIf(System.Windows.UIElement,System.Action)">
            <summary>
            Invokes if.
            </summary>
            <param name="uiElement">
            The UI element.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="M:Bubba.TypeExtensions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.WindowExtenstions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.WindowExtenstions.CreateNotifier(System.Windows.Window)">
            <summary>
            Creates the notifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.WindowExtenstions.SendNotification(System.Windows.Window,System.String)">
            <summary>
            Sends the notification.
            </summary>
            <param name = "window" > </param>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:Bubba.WindowExtenstions.SendMessage(System.Windows.Window,System.String)">
            <summary>
            Shows the splash message.
            </summary>
        </member>
        <member name="M:Bubba.WindowExtenstions.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="window">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.WindowExtenstions.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="window">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.WindowExtenstions.InvokeIf(System.Windows.Window,System.Action)">
            <summary>
            Invokes if needed.
            </summary>
            <param name = "window" > </param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.WindowExtenstions.InvokeIf(System.Windows.Window,System.Action{System.Object})">
            <summary>
            Invokes if.
            </summary>
            <param name = "window" > </param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.WindowExtenstions.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AudioConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.AudioConverter.ConvertMp3ToWav(System.String,System.String)">
            <summary>
            Converts the MP3 to wav.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="outputFile">The output file.</param>
        </member>
        <member name="M:Bubba.AudioConverter.ConvertWavToMp3(System.String,System.String)">
            <summary>
            Converts the wav to MP3.
            </summary>
            <param name="inputFile">The input file.</param>
            <param name="outputFile">The output file.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Bubba.AudioConverter.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AudioManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.AudioManager.GetDuration(System.String)">
            <summary>
            Gets the duration of the audio.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.AudioManager.IsFileValid(System.String)">
            <summary>
            Determines whether [is audio file valid] [the specified file path].
            </summary>
            <param name="filePath">The file path.</param>
            <returns>
              <c>true</c> if [is audio file valid]
            [the specified file path]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.AudioManager.GetFileSize(System.String)">
            <summary>
            Gets the size of the audio file in bytes.
            </summary>
            <param name="filePath">Path to the audio file.</param>
            <returns>Size of the file in bytes.</returns>
        </member>
        <member name="M:Bubba.AudioManager.Normalize(System.String,System.String)">
            <summary>
            Normalizes the audio file by adjusting its volume.
            </summary>
            <param name="inputFile">Path to the input audio file.</param>
            <param name="outputFile">Path to save the normalized audio file.</param>
        </member>
        <member name="M:Bubba.AudioManager.ExtractSegment(System.String,System.String,System.TimeSpan,System.TimeSpan)">
            <summary>
            Extracts a segment of an audio file and saves it as a new file.
            </summary>
            <param name="inputFile">Path to the input audio file.</param>
            <param name="outputFile">Path to save the extracted segment.</param>
            <param name="start">Start time of the segment.</param>
            <param name="duration">Duration of the segment.</param>
        </member>
        <member name="M:Bubba.AudioManager.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AudioPlayer">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Bubba.AudioPlayer._waveOut">
            <summary>
            The wave out
            </summary>
        </member>
        <member name="F:Bubba.AudioPlayer._audioFile">
            <summary>
            The audio file
            </summary>
        </member>
        <member name="P:Bubba.AudioPlayer.IsPlaying">
            <summary>
            Gets a value indicating whether this instance is playing.
            </summary>
            <value>
              <c>true</c> if this instance is playing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bubba.AudioPlayer.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AudioPlayer"/> class.
            </summary>
        </member>
        <member name="M:Bubba.AudioPlayer.Play(System.String)">
            <summary>
            Plays the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Bubba.AudioPlayer.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Bubba.AudioPlayer.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.AudioPlayer.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AudioRecorder">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Bubba.AudioRecorder._waveIn">
            <summary>
            The wave in
            </summary>
        </member>
        <member name="F:Bubba.AudioRecorder._writer">
            <summary>
            The writer
            </summary>
        </member>
        <member name="F:Bubba.AudioRecorder._isRecording">
            <summary>
            The is recording
            </summary>
        </member>
        <member name="E:Bubba.AudioRecorder.OnVolumeLevelChanged">
            <summary>
            Occurs when [on volume level changed].
            </summary>
        </member>
        <member name="M:Bubba.AudioRecorder.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.AudioRecorder"/> class.
            </summary>
            <param name="sampleRate">The sample rate.</param>
            <param name="channels">The channels.</param>
        </member>
        <member name="P:Bubba.AudioRecorder.IsRecording">
            <summary>
            Gets a value indicating whether this instance is recording.
            </summary>
            <value>
              <c>true</c> if this instance is recording; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bubba.AudioRecorder.StartRecording(System.String)">
            <summary>
            Starts the recording.
            </summary>
            <param name="outputFilePath">The output file path.</param>
            <exception cref="T:System.InvalidOperationException">
            Already recording.
            </exception>
        </member>
        <member name="M:Bubba.AudioRecorder.StopRecording">
            <summary>
            Stops the recording.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Not currently recording.
            </exception>
        </member>
        <member name="M:Bubba.AudioRecorder.OnDataAvailable(System.Object,NAudio.Wave.WaveInEventArgs)">
            <summary>
            Called when [data available].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:NAudio.Wave.WaveInEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.AudioRecorder.OnRecordingStopped(System.Object,NAudio.Wave.StoppedEventArgs)">
            <summary>
            Called when [recording stopped].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:NAudio.Wave.StoppedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.AudioRecorder.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.AudioRecorder.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SpeechConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SpeechConfiguration._synthesizer">
            <summary>
            The synthesizer
            </summary>
        </member>
        <member name="M:Bubba.SpeechConfiguration.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SpeechConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Bubba.SpeechConfiguration.GetAvailableVoices">
            <summary>
            Gets the available voices.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bubba.SpeechConfiguration.DefaultVolume">
            <summary>
            Gets or sets the default volume.
            </summary>
            <value>
            The default volume.
            </value>
        </member>
        <member name="P:Bubba.SpeechConfiguration.DefaultRate">
            <summary>
            Gets or sets the default rate.
            </summary>
            <value>
            The default rate.
            </value>
        </member>
        <member name="M:Bubba.SpeechConfiguration.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SpeechEngine">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.SpeechEngine._synthesizer">
            <summary>
            The synthesizer
            </summary>
        </member>
        <member name="E:Bubba.SpeechEngine.SpeakCompleted">
            <summary>
            Occurs when [speak completed].
            </summary>
        </member>
        <member name="E:Bubba.SpeechEngine.SpeakProgress">
            <summary>
            Occurs when [speak progress].
            </summary>
        </member>
        <member name="M:Bubba.SpeechEngine.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SpeechEngine"/> class.
            </summary>
        </member>
        <member name="M:Bubba.SpeechEngine.Speak(System.String)">
            <summary>
            Speaks the specified text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.SpeakFromFile(System.String)">
            <summary>
            Speaks from file.
            </summary>
            <param name="filePath">The file path.</param>
            <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
        </member>
        <member name="M:Bubba.SpeechEngine.SaveToAudioFile(System.String,System.String)">
            <summary>
            Saves to audio file.
            </summary>
            <param name="text">The text.</param>
            <param name="filePath">The output path.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.SaveFileToAudio(System.String,System.String)">
            <summary>
            Saves the file to audio.
            </summary>
            <param name="inputPath">The input file path.</param>
            <param name="outputPath">The output path.</param>
            <exception cref="T:System.IO.FileNotFoundException">
            The specified input file does not exist.</exception>
        </member>
        <member name="M:Bubba.SpeechEngine.Pause">
            <summary>
            Pauses this instance.
            </summary>
        </member>
        <member name="M:Bubba.SpeechEngine.Resume">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="M:Bubba.SpeechEngine.SetVoice(System.String)">
            <summary>
            Sets the voice.
            </summary>
            <param name="voiceName">Name of the voice.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.SetVolume(System.Int32)">
            <summary>
            Sets the volume.
            </summary>
            <param name="volume">The volume.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.SetRate(System.Int32)">
            <summary>
            Sets the rate.
            </summary>
            <param name="rate">The rate.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.OnSpeakCompleted(System.Object,System.Speech.Synthesis.SpeakCompletedEventArgs)">
            <summary>
            Called when [speak completed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.OnSpeakProgress(System.Object,System.Speech.Synthesis.SpeakProgressEventArgs)">
            <summary>
            Called when [speak progress].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Speech.Synthesis.SpeakProgressEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SpeechEngine.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.SpeechEngine.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.EmailBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._copies">
            <summary>
            The carbon copy
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._displayName">
            <summary>
            The display name
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._hostName">
            <summary>
            The host
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._priority">
            <summary>
            The priority
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._receiver">
            <summary>
            The receiver
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._recipients">
            <summary>
            The recipient
            </summary>
        </member>
        <member name="F:Bubba.EmailBase._sender">
            <summary>
            The sender
            </summary>
        </member>
        <member name="M:Bubba.EmailBase.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.ReportBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._areaChart">
            <summary>
            The area chart
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._barChart">
            <summary>
            The bar chart
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._bottomMargin">
            <summary>
            The bottom margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._chartRange">
            <summary>
            The chart range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._chartWorksheet">
            <summary>
            The chart worksheet
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._columnCount">
            <summary>
            The column count
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._columnWidth">
            <summary>
            The column width
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._commentRange">
            <summary>
            The comment range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._comments">
            <summary>
            The comments
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataAdapter">
            <summary>
            The data adapter
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataCommand">
            <summary>
            The data command
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataConnection">
            <summary>
            The data connection
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataRange">
            <summary>
            The data range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataTable">
            <summary>
            The data table
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._dataWorksheet">
            <summary>
            The data worksheet
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._excelPackage">
            <summary>
            The excel package
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._excelTable">
            <summary>
            The excel table
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._excelWorkbook">
            <summary>
            The excel workbook
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._fileInfo">
            <summary>
            The file information
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._font">
            <summary>
            The font
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._fontColor">
            <summary>
            The font color
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._footerMargin">
            <summary>
            The footer margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._footerRange">
            <summary>
            The footer range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._headerMargin">
            <summary>
            The header margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._headerRange">
            <summary>
            The header range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._internalPath">
            <summary>
            The internal path
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._leftMargin">
            <summary>
            The left margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._pieChart">
            <summary>
            The pie chart
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._pivotRange">
            <summary>
            The pivot range
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._pivotTable">
            <summary>
            The pivot table
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._pivotWorksheet">
            <summary>
            The pivot worksheet
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._primaryBackColor">
            <summary>
            The primary back color
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._rightMargin">
            <summary>
            The right margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._rowCount">
            <summary>
            The row count
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._rowHeight">
            <summary>
            The row height
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._savePath">
            <summary>
            The save path
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._secondaryBackColor">
            <summary>
            The secondary back color
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._startColumn">
            <summary>
            The row index
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._startRow">
            <summary>
            The row index
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._themePath">
            <summary>
            The theme path
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._titleFont">
            <summary>
            The title font
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._topMargin">
            <summary>
            The top margin
            </summary>
        </member>
        <member name="F:Bubba.ReportBase._zoomLevel">
            <summary>
            The zoom level
            </summary>
        </member>
        <member name="F:Bubba.ReportBase.DataMeasure">
            <summary>
            The data metric
            </summary>
        </member>
        <member name="M:Bubba.ReportBase.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:Bubba.ReportBase.StartRow">
            <inheritdoc />
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:Bubba.ReportBase.StartColumn">
            <inheritdoc />
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="M:Bubba.ReportBase.SetRangeBackgroundColor(OfficeOpenXml.ExcelRange,System.Drawing.Color)">
            <summary>
            Sets the color of the range background.
            </summary>
            <param name="excelRange">The excel range.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Bubba.ReportBase.GetExcelColumnName(System.Int32)">
            <summary>
            Gets the name of the excel column.
            </summary>
            <param name="columnIndex">StartRow of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ReportBase.IsNullableType(System.Type)">
            <summary>
            Determines whether [is nullable type] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns>
              <c>true</c> if [is nullable type]
            [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.ReportBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and
            - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both
            managed and unmanaged resources; <c>false</c>
            to release only unmanaged resources.</param>
        </member>
        <member name="M:Bubba.ReportBase.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.ReportBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SheetConfig">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.SheetConfig.CreateConnectionString(System.String,System.String)">
            <inheritdoc />
            <summary>
            Gets the connection string.
            </summary>
            <param name="extension">The extension.</param>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.SheetConfig.FormatHeader(OfficeOpenXml.ExcelRange)">
            <summary>
            
            </summary>
            <param name="excelRange"></param>
        </member>
        <member name="M:Bubba.SheetConfig.SetHeaderValues(OfficeOpenXml.ExcelRange,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the header row format.
            </summary>
            <param name="excelRange">The excel range.</param>
            <param name="names"> </param>
        </member>
        <member name="M:Bubba.SheetConfig.FormatFooter(OfficeOpenXml.ExcelRange)">
            <summary>
            Sets the footer row format.
            </summary>
            <param name="excelRange">The excel range.</param>
        </member>
        <member name="M:Bubba.SheetConfig.#ctor">
            <inheritdoc />
             <summary>
             </summary>
        </member>
        <member name="P:Bubba.SheetConfig.DataConnection">
            <summary>
            Gets or sets the data connection.
            </summary>
            <value>
            The data connection.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.DataCommand">
            <summary>
            Gets or sets the data command.
            </summary>
            <value>
            The data command.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.DataAdapter">
            <summary>
            Gets or sets the data adapter.
            </summary>
            <value>
            The data adapter.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.FileInfo">
            <summary>
            Gets or sets the file information.
            </summary>
            <value>
            The file information.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.Application">
            <summary>
            Gets or sets the application.
            </summary>
            <value>
            The application.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.ExcelWorkbook">
            <summary>
            Gets or sets the workbook.
            </summary>
            <value>
            The workbook.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.PivotRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.ChartRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.DataRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.HeaderRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.CommentRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.DataWorksheet">
            <summary>
            Gets or sets the worksheet.
            </summary>
            <value>
            The worksheet.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.ChartWorksheet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.PivotWorksheet">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SheetConfig.Comments">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Bubba.SheetConfig.DataTable">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:Bubba.ExcelGrid">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:OfficeOpenXml.ExcelCellBase" />
        </member>
        <member name="F:Bubba.ExcelGrid._cells">
            <summary>
            The cells
            </summary>
        </member>
        <member name="F:Bubba.ExcelGrid._excelAddress">
            <summary>
            The excel address
            </summary>
        </member>
        <member name="F:Bubba.ExcelGrid._excelRange">
            <summary>
            The range
            </summary>
        </member>
        <member name="F:Bubba.ExcelGrid._excelWorksheet">
            <summary>
            The worksheet
            </summary>
        </member>
        <member name="F:Bubba.ExcelGrid._from">
            <summary>
            From
            </summary>
        </member>
        <member name="F:Bubba.ExcelGrid._to">
            <summary>
            To
            </summary>
        </member>
        <member name="M:Bubba.ExcelGrid.Deconstruct(System.ValueTuple{System.Int32,System.Int32}@,System.ValueTuple{System.Int32,System.Int32}@,OfficeOpenXml.ExcelWorksheet@,OfficeOpenXml.ExcelRange@,OfficeOpenXml.ExcelAddress@,System.Collections.Generic.IList{OfficeOpenXml.ExcelRangeBase}@)">
            <summary>
            Deconstructs the specified from.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="excelWorksheet">The excel worksheet.</param>
            <param name="excelRange">The excel range.</param>
            <param name="excelAddress">The excel address.</param>
            <param name="cells"> </param>
        </member>
        <member name="M:Bubba.ExcelGrid.GetCells">
            <summary>
            Gets the cells.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ExcelGrid.SetValues(System.Collections.Generic.IList{System.Object})">
            <summary>
            Sets the values.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,OfficeOpenXml.ExcelRange)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="range">The range.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,OfficeOpenXml.ExcelAddress)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="startRow">From row.</param>
            <param name="startColumn">From column.</param>
            <param name="endRow">To row.</param>
            <param name="endColumn">To column.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,System.ValueTuple{System.Int32,System.Int32},System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(OfficeOpenXml.ExcelPackage,System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="from">From.</param>
        </member>
        <member name="M:Bubba.ExcelGrid.#ctor(Bubba.ExcelGrid)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelGrid"/> class.
            </summary>
            <param name="excelGrid">The grid.</param>
        </member>
        <member name="P:Bubba.ExcelGrid.ExcelRange">
            <summary>
            Gets the range.
            </summary>
            <value>
            The range.
            </value>
        </member>
        <member name="P:Bubba.ExcelGrid.ExcelAddress">
            <summary>
            Gets the excel address.
            </summary>
            <value>
            The excel address.
            </value>
        </member>
        <member name="P:Bubba.ExcelGrid.ExcelWorksheet">
            <summary>
            Gets the worksheet.
            </summary>
            <value>
            The worksheet.
            </value>
        </member>
        <member name="P:Bubba.ExcelGrid.From">
            <summary>
            Gets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Bubba.ExcelGrid.To">
            <summary>
            Gets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="P:Bubba.ExcelGrid.Cells">
            <summary>
            Gets the cells.
            </summary>
            <value>
            The cells.
            </value>
        </member>
        <member name="T:Bubba.ExcelReport">
            <inheritdoc/>
            <summary> </summary>
            <seealso cref="T:Bubba.SheetConfig"/>
        </member>
        <member name="M:Bubba.ExcelReport.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ExcelReport" /> class.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.BudgetWorkbook" /> class.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Bubba.ExcelReport.#ctor(System.Data.DataTable)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.BudgetWorkbook"/>
            class.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
        </member>
        <member name="P:Bubba.ExcelReport.RowHeight">
            <summary>
            Gets or sets the height of the row.
            </summary>
            <value>
            The height of the row.
            </value>
        </member>
        <member name="P:Bubba.ExcelReport.ColumnWidth">
            <summary>
            Gets or sets the width of the column.
            </summary>
            <value>
            The width of the column.
            </value>
        </member>
        <member name="P:Bubba.ExcelReport.InternalPath">
            <summary>
            The configuration
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.InitializeSheetView">
            <summary>
            Initializes the worksheets.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.InitializePrinterSettings">
            <summary>
            Initializes the printer settings.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.InitializeHeaderFooter">
            <summary>
            Initializes the header footer.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.InitializeActiveGrid">
            <summary>
            Initializes the range cells.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.InitializeWorkbook">
            <summary>
            Initializes the workbook properties.
            </summary>
        </member>
        <member name="M:Bubba.ExcelReport.SaveDialog">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="T:Bubba.PartFactory">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.PartFactory.CreateExcelTable(System.Data.DataTable)">
            <summary>
            Creates the excel table.
            </summary>
        </member>
        <member name="M:Bubba.PartFactory.CreateDataTable(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the data table.
            </summary>
            <param name="startRow">The start row.</param>
            <param name="startColumn"> </param>
            <param name="endRow">The end row.</param>
            <param name="endColumn"> </param>
            <returns>
            DataTable
            </returns>
        </member>
        <member name="M:Bubba.PartFactory.CreatePivotTable(OfficeOpenXml.ExcelRange,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Creates the pivot table.
            </summary>
            <param name="excelRange">The data range.</param>
            <param name="tableName">Name of the table.</param>
            <param name="rows"> </param>
            <param name="data"> </param>
            <returns>
            ExcelPivotTable
            </returns>
        </member>
        <member name="M:Bubba.PartFactory.CreatePieChart(OfficeOpenXml.ExcelRange,System.String,System.String,System.String)">
            <summary>
            Creates the pie chart.
            </summary>
            <param name="excelRange">The data range.</param>
            <param name="chartName">Name of the table.</param>
            <param name="row"> </param>
            <param name="column"> </param>
            <returns>
            ExcelPieChart
            </returns>
        </member>
        <member name="M:Bubba.PartFactory.CreateBarChart(OfficeOpenXml.ExcelRange,System.String,System.String,System.String)">
            <summary>
            Creates the bar chart.
            </summary>
            <param name="excelRange">The excel range.</param>
            <param name="chartName">Name of the chart.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.PartFactory.CreateAreaChart(OfficeOpenXml.ExcelRange,System.String,System.String,System.String)">
            <summary>
            Creates the area chart.
            </summary>
            <param name="excelRange">The excel range.</param>
            <param name="chartName">Name of the chart.</param>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.PartFactory.CreateComment(OfficeOpenXml.ExcelRange,System.String)">
            <inheritdoc />
            <summary>
            Adds the comment.
            </summary>
            <param name="excelRange"> </param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Bubba.PartFactory.#ctor">
            <inheritdoc />
             <summary>
             </summary>
        </member>
        <member name="P:Bubba.PartFactory.FilePath">
            <inheritdoc />
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.PartFactory.FileName">
            <inheritdoc />
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="T:Bubba.Section">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bocifus.Grid" />
        </member>
        <member name="F:Bubba.Section._anchor">
            <summary>
            The anchor
            </summary>
        </member>
        <member name="F:Bubba.Section._area">
            <summary>
            The area
            </summary>
        </member>
        <member name="F:Bubba.Section._depth">
            <summary>
            The depth
            </summary>
        </member>
        <member name="F:Bubba.Section._span">
            <summary>
            The span
            </summary>
        </member>
        <member name="F:Bubba.Section._values">
            <summary>
            The values
            </summary>
        </member>
        <member name="M:Bubba.Section.Deconstruct(System.ValueTuple{System.Int32,System.Int32}@,System.ValueTuple{System.Int32,System.Int32}@,OfficeOpenXml.ExcelWorksheet@,OfficeOpenXml.ExcelRange@,OfficeOpenXml.ExcelAddress@)">
            <inheritdoc />
            <summary>
            Deconstructs the specified from.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="excelWorksheet">The excel worksheet.</param>
            <param name="excelRange">The excel range.</param>
            <param name="excelAddress">The excel address.</param>
        </member>
        <member name="M:Bubba.Section.SetValues(System.Data.DataRow)">
            <summary>
            Sets the values.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Bubba.Section.SetValues(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Sets the values.
            </summary>
            <param name="dict">The dictionary.</param>
        </member>
        <member name="M:Bubba.Section.SetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the values.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Bubba.Section.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
        </member>
        <member name="M:Bubba.Section.#ctor(OfficeOpenXml.ExcelPackage,OfficeOpenXml.ExcelRange)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="range">The range.</param>
        </member>
        <member name="M:Bubba.Section.#ctor(OfficeOpenXml.ExcelPackage,System.Int32,System.Int32,System.Int32,System.Int32)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="startRow">From row.</param>
            <param name="startColumn">From column.</param>
            <param name="endRow">To row.</param>
            <param name="endColumn">To column.</param>
        </member>
        <member name="M:Bubba.Section.#ctor(OfficeOpenXml.ExcelPackage,System.Collections.Generic.IList{System.Int32})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
            <param name="excel">The worksheet.</param>
            <param name="cell">The cell.</param>
        </member>
        <member name="M:Bubba.Section.#ctor(OfficeOpenXml.ExcelPackage,System.ValueTuple{System.Int32,System.Int32},System.ValueTuple{System.Int32,System.Int32})">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
            <param name="excel">The excel.</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Bubba.Section.#ctor(Bubba.Section)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Section" /> class.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="P:Bubba.Section.Span">
            <summary>
            Gets the span.
            </summary>
            <value>
            The span.
            </value>
        </member>
        <member name="P:Bubba.Section.Depth">
            <summary>
            Gets the depth.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="P:Bubba.Section.Anchor">
            <summary>
            Gets the anchor.
            </summary>
            <value>
            The anchor.
            </value>
        </member>
        <member name="P:Bubba.Section.Area">
            <summary>
            Gets the area.
            </summary>
            <value>
            The area.
            </value>
        </member>
        <member name="P:Bubba.Section.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="T:Bubba.TextSize">
            <summary>
            
            </summary>
            <seealso cref="T:OfficeOpenXml.Interfaces.Drawing.Text.ITextMeasurer" />
        </member>
        <member name="M:Bubba.TextSize.ToSkFontStyle(OfficeOpenXml.Interfaces.Drawing.Text.MeasurementFontStyles)">
            <summary>
            Converts to skfontstyle.
            </summary>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextSize.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.TextSize.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextSize"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextSize.MeasureText(System.String,OfficeOpenXml.Interfaces.Drawing.Text.MeasurementFont)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextSize.ValidForEnvironment">
            <summary>
            Valids for environment.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.Workbook">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.Workbook.#ctor">
            <inheritdoc />
             <summary>
             </summary>
        </member>
        <member name="P:Bubba.Workbook.FontColor">
            <summary>
            Gets or sets the color of the font.
            </summary>
            <value>
            The color of the font.
            </value>
        </member>
        <member name="P:Bubba.Workbook.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>
            The font.
            </value>
        </member>
        <member name="P:Bubba.Workbook.TitleFont">
            <summary>
            Gets or sets the title font.
            </summary>
            <value>
            The title font.
            </value>
        </member>
        <member name="M:Bubba.Workbook.FormatDataWorksheet">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Workbook" /> class.
            </summary>
        </member>
        <member name="M:Bubba.Workbook.SetHeaderRowText(OfficeOpenXml.ExcelRange,System.Collections.Generic.IList{System.String})">
            <summary>
            Sets the header text.
            </summary>
            <param name="excelRange">
            The grid.
            </param>
            <param name="labels">
            </param>
        </member>
        <member name="M:Bubba.Workbook.SetFooterRowText(OfficeOpenXml.ExcelRange,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the footer text.
            </summary>
            <param name="excelRange">The excel range.</param>
            <param name="labels">The labels.</param>
        </member>
        <member name="M:Bubba.Workbook.SetAlternatingRowColor(OfficeOpenXml.ExcelRange)">
            <summary>
            Sets the color of the alternating row.
            </summary>
            <param name="excelRange">The range.</param>
        </member>
        <member name="M:Bubba.Workbook.FormatNumericRow(OfficeOpenXml.ExcelRange)">
            <summary>
            Sets the numeric row format.
            </summary>
            <param name="excelRange">The range.</param>
        </member>
        <member name="M:Bubba.Workbook.FormatTable(OfficeOpenXml.ExcelRange)">
            <summary>
            Sets the total row format.
            </summary>
            <param name="excelRange">The range.</param>
        </member>
        <member name="T:Bubba.AsyncFileBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.AsyncFileBase._fileExists">
            <summary>
            The exists
            </summary>
        </member>
        <member name="M:Bubba.AsyncFileBase.MoveAsync(System.String)">
            <summary>
            Moves the specified file path.
            </summary>
            <param name="filePath">
            The file path.
            </param>
        </member>
        <member name="M:Bubba.AsyncFileBase.CopyToAsnyc(System.String)">
            <summary>
            Copies the specified file path.
            </summary>
            <param name="destination">
            The file path.
            </param>
        </member>
        <member name="M:Bubba.AsyncFileBase.DeleteAsync">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Bubba.AsyncFileBase.GetBaseStreamAsync">
            <summary>
            Gets the base stream aynchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFileBase.ReadLinesAsync">
            <summary>
            Reads the lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFileBase.ReadBytesAsync">
            <summary>
            Reads the bytes.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFileBase.WriteLinesAsync">
            <summary>
            Writes the lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFileBase.#ctor">
            <summary>
            Prevents a default instance of the
            <see cref="T:Bubba.AsyncFileBase"/> class from being created.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.AsyncFileBase.#ctor(System.String)">
            <summary>
            Prevents a default instance of the
            <see cref="T:Bubba.AsyncFileBase"/> class from being created.
            </summary>
            <inheritdoc />
        </member>
        <member name="T:Bubba.FileBase">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.BasicPath" />
        </member>
        <member name="F:Bubba.FileBase._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.FileBase._fileExists">
            <summary>
            The exists
            </summary>
        </member>
        <member name="F:Bubba.FileBase._parentName">
            <summary>
            The parent name
            </summary>
        </member>
        <member name="F:Bubba.FileBase._parentPath">
            <summary>
            The parent path
            </summary>
        </member>
        <member name="F:Bubba.FileBase._path">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.FileBase._size">
            <summary>
            The size
            </summary>
        </member>
        <member name="M:Bubba.FileBase.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.FileBase.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.FileBase.MoveTo(System.String)">
            <summary>
            Moves the specified file path.
            </summary>
            <param name="destination">
            The file path.
            </param>
        </member>
        <member name="M:Bubba.FileBase.CopyTo(System.String)">
            <summary>
            Copies the specified file path.
            </summary>
            <param name="destination">
            The file path.
            </param>
        </member>
        <member name="M:Bubba.FileBase.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Bubba.FileBase.CreateBaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBase.ReadLines">
            <summary>
            Reads the lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBase.ReadBytes">
            <summary>
            Reads the bytes.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.FileBase.WriteLines">
            <summary>
            Writes the lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBase.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileBase"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.FileBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileBase"/> class.
            </summary>
            <param name="input">The input.</param>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FileBase.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="T:Bubba.IFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.IFile.Transfer(System.IO.DirectoryInfo)">
            <summary>
            Transfers the specified folder.
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="M:Bubba.IFile.Contains(System.String)">
            <summary>
            Determines whether this instance contains the object.
            </summary>
            <param name="search">The search.</param>
            <returns>
              <c>true</c> if [contains] [the specified search];
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.IFile.Search(System.String)">
            <summary>
            Searches the specified pattern.
            </summary>
            <param name="pattern">The pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IFile.GetParentDirectory">
            <summary>
            Gets the parent directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IFile.Move(System.String)">
            <summary>
            Moves the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Bubba.IFile.Copy(System.String)">
            <summary>
            Copies the specified file path.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Bubba.IFile.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Bubba.IFile.GetFileSecurity">
            <summary>
            Gets the file security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IFile.GetBaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.IFile.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.AsyncFile">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.AsyncFile.ContainsAsync(System.String)">
            <inheritdoc />
            <summary>
            Determines whether this instance contains the object.
            </summary>
            <param name="search">
            The search.
            </param>
            <returns>
            <c>true</c>
            if [contains] [the specified search];
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.SearchFileAsync(System.String)">
            <inheritdoc />
            <summary>
            Searches the specified pattern.
            </summary>
            <param name="pattern">
            The pattern.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.GetParentAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFile.GetFileAsync(System.String)">
            <summary>
            Creates the specified file path.
            </summary>
            <param name="filePath">
            The file path.
            </param>
            <returns>
            FileInfo
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.ShowFileDialogAsnyc">
            <summary>
            Opens the dialog.
            </summary>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.OpenSaveDialogAsync">
            <summary>
            Saves this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.AsyncFile.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncFile.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Bubba.AsyncFile.#ctor(Bubba.DataFile)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:Bubba.AsyncFile.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="T:Bubba.DataFile">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.FileBase" />
            <seealso cref="T:Bubba.IFile" />
        </member>
        <member name="M:Bubba.DataFile.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
        </member>
        <member name="M:Bubba.DataFile.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Bubba.DataFile.#ctor(Bubba.DataFile)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataFile" /> class.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="P:Bubba.DataFile.Size">
            <summary>
            Gets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Bubba.DataFile.ParentName">
            <summary>
            Gets the name of the parent.
            </summary>
            <value>
            The name of the parent.
            </value>
        </member>
        <member name="P:Bubba.DataFile.ParentPath">
            <summary>
            Gets the parent path.
            </summary>
            <value>
            The parent path.
            </value>
        </member>
        <member name="M:Bubba.DataFile.Contains(System.String)">
            <inheritdoc />
            <summary>
            Determines whether this instance contains the object.
            </summary>
            <param name="search">The search.</param>
            <returns>
            <c>true</c> if [contains] [the specified search];
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.DataFile.Search(System.String)">
            <inheritdoc />
            <summary>
            Searches the specified pattern.
            </summary>
            <param name="pattern">
            The pattern.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataFile.Create(System.String)">
            <summary>
            Creates the specified file path.
            </summary>
            <param name="filePath">
            The file path.
            </param>
            <returns>
            FileInfo
            </returns>
        </member>
        <member name="M:Bubba.DataFile.ShowOpenFileDialog">
            <summary>
            Opens the dialog.
            </summary>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.DataFile.OpenSaveFileDialog">
            <summary>
            Saves this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DataFile.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.AsyncFolderBase">
            <inheritdoc />
        </member>
        <member name="F:Bubba.AsyncFolderBase._fileCount">
            <summary>
            The sub files
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._folderCount">
            <summary>
            The sub folders
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._folderExists">
            <summary>
            The folder exists
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._folderName">
            <summary>
            The folder name
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._folderSecurity">
            <summary>
            The security
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._hasSubFiles">
            <summary>
            The sub files
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._hasSubFolders">
            <summary>
            The sub folders
            </summary>
        </member>
        <member name="F:Bubba.AsyncFolderBase._parentFolder">
            <summary>
            The parent folder
            </summary>
        </member>
        <member name="M:Bubba.AsyncFolderBase.GetSpecialNamesAsync">
            <summary>
            Gets the special folders.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolderBase.GetParentAsync">
            <summary>
            Gets the parent asynchronous.
            </summary>
            <returns>
            Task(DirectoryInfo)
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolderBase.GetSubFilesAsync">
            <summary>
            Gets the sub file data.
            </summary>
            <returns>
            Dictionary
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolderBase.GetSubFoldersAsync">
            <summary>
            Gets the subdirectory data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolderBase.WalkDownAsync">
            <summary>
            Walks the paths.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolderBase.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncFolderBase"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.AsyncFolderBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncFolderBase"/> class.
            </summary>
            <param name="input">The input.</param>
            <inheritdoc />
        </member>
        <member name="M:Bubba.AsyncFolderBase.#ctor(Bubba.Folder)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsyncFolderBase" /> class.
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="T:Bubba.FolderBase">
            <inheritdoc/>
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._fileCount">
            <summary>
            The sub files
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._folderCount">
            <summary>
            The sub folders
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._folderExists">
            <summary>
            The folder exists
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._folderName">
            <summary>
            The folder name
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._folderSecurity">
            <summary>
            The security
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._hasSubFiles">
            <summary>
            The sub files
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._hasSubFolders">
            <summary>
            The sub folders
            </summary>
        </member>
        <member name="F:Bubba.FolderBase._parentFolder">
            <summary>
            The parent folder
            </summary>
        </member>
        <member name="M:Bubba.FolderBase.GetSpecialFolderNames">
            <summary>
            Gets the special folders.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.FolderBase.GetSubFiles">
            <summary>
            Gets the sub file data.
            </summary>
            <returns>
            Dictionary
            </returns>
        </member>
        <member name="M:Bubba.FolderBase.GetSubFolders">
            <summary>
            Gets the subdirectory data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FolderBase.WalkDown">
            <summary>
            Walks the paths.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.FolderBase.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FolderBase"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.FolderBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FolderBase"/> class.
            </summary>
            <param name="input">The input.</param>
            <inheritdoc />
        </member>
        <member name="T:Bubba.IFolder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.IFolder.CreateSubDirectory(System.String)">
            <summary>
            Creates the subdirectory.
            </summary>
            <param name="dirName">Name of the dir.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.IFolder.GetSubFileData">
            <summary>
            Gets the sub file data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.IFolder.Move(System.String)">
            <summary>
            Moves the specified destination.
            </summary>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Bubba.IFolder.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
            <summary>
            Sets the access control.
            </summary>
            <param name="security">The security.</param>
        </member>
        <member name="M:Bubba.IFolder.Zip(System.String)">
            <summary>
            Zips the specified destination.
            </summary>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Bubba.IFolder.UnZip(System.String)">
            <summary>
            Uns the zip.
            </summary>
            <param name="zipPath">The zip path.</param>
        </member>
        <member name="M:Bubba.IFolder.GetSpecialFolders">
            <summary>
            Gets the special folders.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.IFolder.GetSubDirectoryData">
            <summary>
            Gets the subdirectory data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.AsyncFolder">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.AsyncFolder.Deconstruct(System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,System.DateTime@,System.DateTime@)">
            <summary>
            Deconstructs the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="fullPath">The full path.</param>
            <param name="folderName">Name of the file.</param>
            <param name="hasSubFiles"> </param>
            <param name="hasSubFolders"> </param>
            <param name="created">The created.</param>
            <param name="modified">The modified.</param>
        </member>
        <member name="M:Bubba.AsyncFolder.GetNameAsync">
            <summary>
            
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolder.CopyContentsAsync(System.String)">
            <inheritdoc />
            <summary>
            Transfers the specified folder.
            </summary>
            <param name="destination">
            The folder.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.GetCurrentDirectoryAsync">
            <summary>
            Gets the current directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFolder.CreateFolderAsync(System.String)">
            <inheritdoc />
            <summary>
            Creates the specified full path.
            </summary>
            <param name="filePath">
            The full path.
            </param>
            <returns>
            DirectoryInfo
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolder.DeleteFolderAsync(System.String)">
            <summary>
            Deletes the specified folder name.
            </summary>
            <param name="folderName">
            Name of the folder.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.GetZipFileAsync(System.String,System.String)">
            <summary>
            Creates the zip file.
            </summary>
            <param name="source">
            The source.
            </param>
            <param name="destination">
            The destination.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.CreateSubFolderAsync(System.String)">
            <inheritdoc />
            <summary>
            Creates the subdirectory.
            </summary>
            <param name="dirPath">The folderName.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsyncFolder.MoveToAsync(System.String)">
            <inheritdoc />
            <summary>
            Moves the specified fullName.
            </summary>
            <param name="destination">
            The fullName.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.ZipAsync(System.String)">
            <inheritdoc />
            <summary>
            Zips the specified destination.
            </summary>
            <param name="destination">
            The destination.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.UnZipAsync(System.String)">
            <inheritdoc />
            <summary>
            Uns the zip.
            </summary>
            <param name="zipPath">
            The zipPath.
            </param>
        </member>
        <member name="M:Bubba.AsyncFolder.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.AsyncFolder.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncFolder.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Bubba.AsyncFolder.#ctor(Bubba.Folder)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="P:Bubba.AsyncFolder.FileCount">
            <summary>
            Gets the file count.
            </summary>
            <value>
            The file count.
            </value>
        </member>
        <member name="P:Bubba.AsyncFolder.FolderCount">
            <summary>
            Gets the folder count.
            </summary>
            <value>
            The folder count.
            </value>
        </member>
        <member name="T:Bubba.Folder">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.FolderBase" />
            <seealso cref="T:Bubba.IFolder" />
        </member>
        <member name="M:Bubba.Folder.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
        </member>
        <member name="M:Bubba.Folder.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Bubba.Folder.#ctor(Bubba.Folder)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Folder" /> class.
            </summary>
            <param name="folder">The folder.</param>
        </member>
        <member name="P:Bubba.Folder.FolderName">
            <summary>
            Gets the name of the folder.
            </summary>
            <value>
            The name of the folder.
            </value>
        </member>
        <member name="P:Bubba.Folder.ParentFolder">
            <summary>
            Gets or sets the parent folder.
            </summary>
            <value>
            The parent folder.
            </value>
        </member>
        <member name="P:Bubba.Folder.FileCount">
            <summary>
            Gets the file count.
            </summary>
            <value>
            The file count.
            </value>
        </member>
        <member name="P:Bubba.Folder.FolderCount">
            <summary>
            Gets the folder count.
            </summary>
            <value>
            The folder count.
            </value>
        </member>
        <member name="M:Bubba.Folder.GetCurrentDirectory">
            <summary>
            Gets the current directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.Folder.Create(System.String)">
            <inheritdoc />
            <summary>
            Creates the specified full path.
            </summary>
            <param name="filePath">
            The full path.
            </param>
            <returns>
            DirectoryInfo
            </returns>
        </member>
        <member name="M:Bubba.Folder.Delete(System.String)">
            <summary>
            Deletes the specified folder name.
            </summary>
            <param name="folderName">
            Name of the folder.
            </param>
        </member>
        <member name="M:Bubba.Folder.ZipFiles(System.String,System.String)">
            <summary>
            Creates the zip file.
            </summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Bubba.Folder.CreateSubDirectory(System.String)">
            <inheritdoc />
            <summary>
            Creates the subdirectory.
            </summary>
            <param name="dirPath">The folderName.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.Folder.MoveTo(System.String)">
            <inheritdoc />
            <summary>
            Moves the specified fullName.
            </summary>
            <param name="destination">
            The fullName.
            </param>
        </member>
        <member name="M:Bubba.Folder.ZipFrom(System.String)">
            <inheritdoc />
            <summary>
            Zips the specified destination.
            </summary>
            <param name="destination">
            The destination.
            </param>
        </member>
        <member name="M:Bubba.Folder.UnZipTo(System.String)">
            <inheritdoc />
            <summary>
            Uns the zip.
            </summary>
            <param name="destination">
            The zipPath.
            </param>
        </member>
        <member name="M:Bubba.Folder.Deconstruct(System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,System.DateTime@,System.DateTime@)">
            <summary>
            Deconstructs the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="fullPath">The full path.</param>
            <param name="folderName">Name of the file.</param>
            <param name="hasSubFiles"> </param>
            <param name="hasSubFolders"> </param>
            <param name="created">The created.</param>
            <param name="modified">The modified.</param>
        </member>
        <member name="M:Bubba.Folder.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.GptBase">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Bubba.GptBase._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.GptBase._entry">
            <summary>
            The path
            </summary>
        </member>
        <member name="F:Bubba.GptBase._user">
            <summary>
            A unique identifier representing your end-user
            </summary>
        </member>
        <member name="F:Bubba.GptBase._number">
            <summary>
            The user identifier
            </summary>
        </member>
        <member name="F:Bubba.GptBase._store">
            <summary>
            Whether or not to store the responses
            </summary>
        </member>
        <member name="F:Bubba.GptBase._stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="F:Bubba.GptBase._presencePenalty">
            <summary>
            A number between -2.0 and 2.0.
            Positive values penalize new tokens
            based on whether they appear in the text so far,
            increasing the model's likelihood to talk about new topics.
            </summary>
        </member>
        <member name="F:Bubba.GptBase._frequencyPenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
        </member>
        <member name="F:Bubba.GptBase._apiKey">
            <summary>
            The API key
            </summary>
        </member>
        <member name="F:Bubba.GptBase._endPoint">
            <summary>
            The base URL
            </summary>
        </member>
        <member name="F:Bubba.GptBase._model">
            <summary>
            The chat model
            </summary>
        </member>
        <member name="F:Bubba.GptBase._endPoints">
            <summary>
            The urls
            </summary>
        </member>
        <member name="F:Bubba.GptBase._models">
            <summary>
            The models
            </summary>
        </member>
        <member name="F:Bubba.GptBase._temperature">
            <summary>
            A number between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="F:Bubba.GptBase._topPercent">
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
        </member>
        <member name="F:Bubba.GptBase._maxCompletionTokens">
            <summary>
            The maximum tokens
            </summary>
        </member>
        <member name="F:Bubba.GptBase._maxOutputTokens">
            <summary>
            The maximum output tokens
            </summary>
        </member>
        <member name="F:Bubba.GptBase._role">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:Bubba.GptBase._prompt">
            <summary>
            The prompt
            </summary>
        </member>
        <member name="F:Bubba.GptBase._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.GptBase.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptBase"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptBase.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>
            The API key.
            </value>
        </member>
        <member name="P:Bubba.GptBase.Prompt">
            <summary>
            Gets or sets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.GptBase.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.GptBase.Store">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig"/> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptBase.Stream">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig"/> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptBase.Temperature">
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.GptBase.Data">
            <inheritdoc />
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Bubba.GptBase.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.GptBase.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.GptBase.ProcessQuotes(System.String)">
            <summary>
            Pads the quotes.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptBase.GetModels">
            <summary>
            Gets the available models.
            </summary>
            <returns>
            A list of strings representing OpenAI models
            </returns>
        </member>
        <member name="M:Bubba.GptBase.GetEndPoints">
            <summary>
            Gets the end points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptBase.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptConfig">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptConfig._number">
            <summary>
            The number responses to generate
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._model">
            <summary>
            The chat model used
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._endPoint">
            <summary>
            The end point
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._store">
            <summary>
            Whether or not to store the responses
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._topPercent">
            <summary>
            A number between 1 and 0. An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._temperature">
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._frequencyPenalty">
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._presencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._maxCompletionTokens">
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._instructions">
            <summary>
            The instructions
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._stop">
            <summary>
            The stop
            </summary>
        </member>
        <member name="F:Bubba.GptConfig._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="P:Bubba.GptConfig.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Model">
            <inheritdoc />
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.MaxCompletionTokens">
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Number">
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Stop">
            <summary>
            Gets or sets the stop.
            </summary>
            <value>
            The stop.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Store">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig"/> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Stream">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig"/> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Temperature">
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.Instructions">
            <summary>
            The instructions parameter gives the model high-level instructions on
            how it should behave while generating a response, including tone, goals,
            and examples of correct responses. Any instructions provided this way
            will take priority over a prompt in the input parameter.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.FrequencyPenalty">
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.PresencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.GptConfig.TopPercent">
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="M:Bubba.GptConfig.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptMessage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptMessage._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.GptMessage._role">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:Bubba.GptMessage._content">
            <summary>
            The content
            </summary>
        </member>
        <member name="F:Bubba.GptMessage._type">
            <summary>
            The type
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Bubba.GptMessage._data" -->
        <member name="P:Bubba.GptMessage.Name">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.GptMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.GptMessage.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Bubba.GptMessage.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Bubba.GptMessage.PadQuotes(System.String)">
            <summary>
            Pads the quotes.
            </summary>
            <param name="input">The input.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptMessage.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptMessage.GetRoles">
            <summary>
            Gets the roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptMessage.GetTypes">
            <summary>
            Gets the types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptMessage.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptRequestBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._httpClient">
            <summary>
            The HTTP client
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._instructions">
            <summary>
            The system prompt
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._inputText">
            <summary>
            The user prompt
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._header">
            <summary>
            The header
            </summary>
        </member>
        <member name="F:Bubba.GptRequestBase._seed">
            <summary>
            The seed
            </summary>
        </member>
        <member name="P:Bubba.GptRequestBase.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>
            The header.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.GptRequestBase.Number">
            <summary>
            How many chat completion choices to generate for each input message.
            Note that you will be charged based on the number of generated tokens across
            all of the choices. Keep n as 1 to minimize costs.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.MaxCompletionTokens">
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Seed">
            <summary>
            The system will make a best effort to sample deterministically,
            such that repeated requests with the same seed and parameters
            should return the same result. Determinism is not guaranteed,
            and you should refer to the system_fingerprint response
            parameter to monitor changes in the backend.
            </summary>
            <value>
            The seed.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Store">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptRequest"/> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Stream">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequestBase.Stream"/> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Temperature">
            <summary>
            A number between -2.0 and 2.0 Positive value decrease the
            model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.TopPercent">
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.FrequencyPenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.PresencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.Messages">
            <summary>
            Gets or sets the system message.
            </summary>
            <value>
            The system message.
            </value>
        </member>
        <member name="P:Bubba.GptRequestBase.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bubba.GptResponseBase">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptBase" />
        </member>
        <member name="F:Bubba.GptResponseBase._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptResponseBase._previousId">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptResponseBase._outputText">
            <summary>
            The input text
            </summary>
        </member>
        <member name="F:Bubba.GptResponseBase._object">
            <summary>
            The object
            </summary>
        </member>
        <member name="F:Bubba.GptResponseBase._created">
            <summary>
            The created
            </summary>
        </member>
        <member name="F:Bubba.GptResponseBase._background">
            <summary>
            The background
            </summary>
        </member>
        <member name="M:Bubba.GptResponseBase.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptResponseBase" /> class.
            </summary>
        </member>
        <member name="P:Bubba.GptResponseBase.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptResponseBase.OutputText">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptResponseBase.PreviousId">
            <summary>
            Gets or sets the previous identifier.
            </summary>
            <value>
            The previous identifier.
            </value>
        </member>
        <member name="P:Bubba.GptResponseBase.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.GptResponseBase.Background">
            <summary>
            Gets or sets whether to run the model response
            <see cref="T:Bubba.GptResponseBase"/> in the background.
            </summary>
            <value>
              <c>true</c> if background; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptResponseBase.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.IGptBody.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.IGptBody.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.IGptBody.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Bubba.IGptBody.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Bubba.IGptClient">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptClient.Prompt">
            <summary>
            Gets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.IGptClient.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="M:Bubba.IGptClient.GetResponseAsync(System.String)">
            <summary>
            Sends a request to the Chat (Assistant) API.
            </summary>
        </member>
        <member name="M:Bubba.IGptClient.SendRequest(System.String)">
            <summary>
            Sends the HTTP message.
            </summary>
            <param name="prompt">The question.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.IGptClient.SendHttpMessageAsync(System.String)">
            <summary>
            Sends the HTTP message asynchronous.
            </summary>
            <param name="userPrompt">The prompt.</param>
            <returns></returns>
        </member>
        <member name="E:Bubba.IGptClient.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.IGptClient.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Bubba.IGptContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptContent.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Bubba.IGptContent.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="M:Bubba.IGptContent.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Bubba.IGptInput.Object">
            <summary>
            Gets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="T:Bubba.IGptMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptMessage.Role">
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.IGptMessage.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.IGptMessage.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="P:Bubba.IGptOutput.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.IGptOutput.Object">
            <summary>
            Gets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="T:Bubba.IGptParameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptParameter.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.Model">
            <inheritdoc />
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.MaxCompletionTokens">
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.IGptParameter.Number">
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="T:Bubba.IGptPayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptPayload.MaximumTokens">
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Temperature">
            <summary>
            Gets or sets the temperature.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.FrequencyPenalty">
            <summary>
            Gets the frequency.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.TopPercent">
            <summary>
            Gets or sets the top percent.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Number">
            <summary>
            Gets or sets the number.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.PresencePenalty">
            <summary>
            Gets the presence.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.InputText">
            <summary>
            Gets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Stop">
            <summary>
            Gets or sets the stop.
            </summary>
            <value>
            The stop.
            </value>
        </member>
        <member name="P:Bubba.IGptPayload.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="T:Bubba.PayloadBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._id">
            <summary>
            The user identifier
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._header">
            <summary>
            The API key
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._number">
            <summary>
            The number of images
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._model">
            <summary>
            ID of the model to use.
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._temperature">
            <summary>
            A number between -2.0 and 2.0  Positive value decrease the
            model's likelihood to repeat the same line verbatim.
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._maximumTokens">
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._endPoint">
            <summary>
            The end point
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._frequencyPenalty">
            <summary>
            TNumber between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._topPercent">
            <summary>
            The top percent
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._stop">
            <summary>
            The stop sequences
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._presencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._store">
            <summary>
            Whether or not to store the responses in the Chat Log
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._stream">
            <summary>
            Stream the response in chuncks.
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._systemPrompt">
            <summary>
            The string provided to GPT
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._inputText">
            <summary>
            The user prompt
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._responseFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.PayloadBase._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="E:Bubba.PayloadBase.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.PayloadBase.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Bubba.PayloadBase.Id">
            <summary>
            Gets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.MaximumTokens">
            <inheritdoc />
            <summary>
            An upper bound for the number of tokens that can be generated
            for a completion, including visible output tokens and reasoning tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Temperature">
            <inheritdoc />
            <summary>
            A number between 0 and 2. Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            Recommend altering this or top_p but not both.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.FrequencyPenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens based
            on their existing frequency in the text so far, decreasing the model's
            likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Number">
            <inheritdoc />
            <summary>
            How many chat completion choices to generate for each input message.
            Note that you will be charged based on the number of generated tokens across
            all of the choices. Keep n as 1 to minimize costs.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0.
            Positive values penalize new tokens based on whether they appear
            in the text so far, increasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature, called nucleus sampling,
            where the model considers the results of 
            the tokens with top_p probability mass. So 0.1 means only
            the tokens comprising the top 10% probability mass are considered.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Model">
            <inheritdoc />
            <summary>
            Gets or sets the Large Language Model.
            </summary>
            <value>
            The chat model.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Size">
            <inheritdoc />
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.InputText">
            <inheritdoc />
            <summary>
            Gets the user prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Messages">
            <inheritdoc />
            <summary>
            A list of messages comprising the conversation so far.
            Depending on the model you use, different message types
            (modalities) are supported, like text, images, and audio.
            </summary>
            <value>
            The system prompt.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.Stop">
            <inheritdoc />
            <summary>
            Up to 4 sequences where the API will stop generating further tokens.
            </summary>
            <value>
            The stop sequences.
            </value>
        </member>
        <member name="P:Bubba.PayloadBase.ResponseFormat">
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="T:Bubba.ChatLog">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._userPrompts">
            <summary>
            The user prompts
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._systemPrompts">
            <summary>
            The system prompts
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._assistantPrompts">
            <summary>
            The assistant prompts
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._userMessages">
            <summary>
            The user messages
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._systemMessages">
            <summary>
            The system messages
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._assistantMessages">
            <summary>
            The assistant messages
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.ChatLog._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.ChatLog.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:System.Object" /> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ChatLog"/> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
        </member>
        <member name="M:Bubba.ChatLog.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ChatLog"/> class.
            </summary>
            <param name="systemPrompt">The system prompt.</param>
            <param name="userPrompt">The user prompt.</param>
        </member>
        <member name="P:Bubba.ChatLog.UserPrompts">
            <summary>
            Gets or sets the user prompts.
            </summary>
            <value>
            The user prompts.
            </value>
        </member>
        <member name="P:Bubba.ChatLog.UserMessages">
            <summary>
            Gets or sets the user messages.
            </summary>
            <value>
            The user messages.
            </value>
        </member>
        <member name="P:Bubba.ChatLog.SystemMessages">
            <summary>
            Gets or sets the system messages.
            </summary>
            <value>
            The system messages.
            </value>
        </member>
        <member name="P:Bubba.ChatLog.AssistantMessages">
            <summary>
            Gets or sets the assistant messages.
            </summary>
            <value>
            The assistant messages.
            </value>
        </member>
        <member name="P:Bubba.ChatLog.SystemPrompts">
            <summary>
            Gets or sets the system prompts.
            </summary>
            <value>
            The system prompts.
            </value>
        </member>
        <member name="P:Bubba.ChatLog.AssistantPrompts">
            <summary>
            Gets or sets the assistant prompts.
            </summary>
            <value>
            The assistant prompts.
            </value>
        </member>
        <member name="M:Bubba.ChatLog.AddUserMessage(System.String)">
            <summary>
            Adds the user message.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.ChatLog.AddSystemMessage(System.String)">
            <summary>
            Adds the user message.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.ChatLog.AddAssistantMessage(System.String)">
            <summary>
            Adds the user message.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.ChatLog.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.ChatLog.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatLog.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptClient">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptBase" />
            <seealso cref="T:Bubba.IGptClient" />
        </member>
        <member name="F:Bubba.GptClient._messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.GptClient._options">
            <summary>
            The options
            </summary>
        </member>
        <member name="F:Bubba.GptClient._request">
            <summary>
            The request
            </summary>
        </member>
        <member name="M:Bubba.GptClient.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptClient" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GptClient.#ctor(Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptClient" /> class.
            </summary>
        </member>
        <member name="P:Bubba.GptClient.Messages">
            <summary>
            Gets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.GptClient.Prompt">
            <inheritdoc />
            <summary>
            Gets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="T:Bubba.GptContainer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptContainer._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptContainer._status">
            <summary>
            The status
            </summary>
        </member>
        <member name="F:Bubba.GptContainer._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.GptContainer._expiresAfter">
            <summary>
            The expires after
            </summary>
        </member>
        <member name="F:Bubba.GptContainer._fileIds">
            <summary>
            The file ids
            </summary>
        </member>
        <member name="M:Bubba.GptContainer.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptContainer"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptContainer.#ctor(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptContainer"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="status">The status.</param>
            <param name="name">The name.</param>
            <param name="expires">The expires.</param>
        </member>
        <member name="P:Bubba.GptContainer.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptContainer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.GptContainer.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Bubba.GptContainer.FileIds">
            <summary>
            Gets or sets the file ids.
            </summary>
            <value>
            The file ids.
            </value>
        </member>
        <member name="M:Bubba.GptContainer.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptContainerFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptContainerFile._containerId">
            <summary>
            The container identifier
            </summary>
        </member>
        <member name="F:Bubba.GptContainerFile._file">
            <summary>
            The file
            </summary>
        </member>
        <member name="M:Bubba.GptContainerFile.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptContainerFile"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptContainerFile.#ctor(System.String,Bubba.GptFile)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptContainerFile"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="file">The file.</param>
        </member>
        <member name="P:Bubba.GptContainerFile.ContainerId">
            <summary>
            Gets or sets the container identifier.
            </summary>
            <value>
            The container identifier.
            </value>
        </member>
        <member name="P:Bubba.GptContainerFile.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="M:Bubba.GptContainerFile.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptAudio">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptAudio._format">
            <summary>
            The format
            </summary>
        </member>
        <member name="F:Bubba.GptAudio._voice">
            <summary>
            The voice
            </summary>
        </member>
        <member name="M:Bubba.GptAudio.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptAudio"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptAudio.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptAudio"/> class.
            </summary>
            <param name="format">The format.</param>
            <param name="voice">The voice.</param>
        </member>
        <member name="P:Bubba.GptAudio.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="P:Bubba.GptAudio.Voice">
            <summary>
            Gets or sets the voice.
            </summary>
            <value>
            The voice.
            </value>
        </member>
        <member name="M:Bubba.GptAudio.GetFormatOptions">
            <summary>
            Gets the voice options.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptAudio.GetVoiceOptions">
            <summary>
            Gets the voice options.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptAudio.GetSpeedOptions">
            <summary>
            Gets the speed options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptAudio.GetModelOptions">
            <summary>
            Gets the model options.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptAudio.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptChoice">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GptChoice._index">
            <summary>
            The index
            </summary>
        </member>
        <member name="F:Bubba.GptChoice._logprobs">
            <summary>
            The logprobs
            </summary>
        </member>
        <member name="F:Bubba.GptChoice._finishReason">
            <summary>
            The finish reason
            </summary>
        </member>
        <member name="F:Bubba.GptChoice._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.GptChoice._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.GptChoice.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptChoice"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptChoice.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptChoice"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="index">The index.</param>
            <param name="logprobs">The logprobs.</param>
            <param name="finishReason">The finish reason.</param>
        </member>
        <member name="M:Bubba.GptChoice.#ctor(Bubba.GptChoice)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptChoice"/> class.
            </summary>
            <param name="choice">The choice.</param>
        </member>
        <member name="M:Bubba.GptChoice.Deconstruct(System.Int32@,System.String@,System.String@,System.String@)">
            <summary>
            Deconstructs the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="text">The text.</param>
            <param name="logprobs">The logprobs.</param>
            <param name="finishReason">The finish reason.</param>
        </member>
        <member name="P:Bubba.GptChoice.Message">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Bubba.GptChoice.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:Bubba.GptChoice.Logprobs">
            <summary>
            Log probability information for the choice.
            </summary>
            <value>
            The logprobs.
            </value>
        </member>
        <member name="P:Bubba.GptChoice.FinishReason">
            <summary>
            The reason the model stopped generating tokens.
            This will be stop if the model hit a natural stop point or a
            provided stop sequence, length if the maximum number of tokens
            specified in the request was reached, content_filter if
            content was omitted due to a flag from our content filters,
            tool_calls if the model called a tool, or function_call
            (deprecated) if the model called a function.
            </summary>
            <value>
            The finish reason.
            </value>
        </member>
        <member name="M:Bubba.GptChoice.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptChoice.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.GptChoice.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptError">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptError._code">
            <summary>
            The code
            </summary>
        </member>
        <member name="F:Bubba.GptError._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:Bubba.GptError.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptError"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptError.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Bubba.GptError.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:Bubba.GptError.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptFile._bytes">
            <summary>
            The bytes
            </summary>
        </member>
        <member name="F:Bubba.GptFile._createdAt">
            <summary>
            The created at
            </summary>
        </member>
        <member name="F:Bubba.GptFile._expiresAt">
            <summary>
            The expires at
            </summary>
        </member>
        <member name="F:Bubba.GptFile._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.GptFile._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.GptFile._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptFile._purpose">
            <summary>
            The purpose
            </summary>
        </member>
        <member name="F:Bubba.GptFile._mimeType">
            <summary>
            The MIME type
            </summary>
        </member>
        <member name="F:Bubba.GptFile._object">
            <summary>
            The object
            </summary>
        </member>
        <member name="F:Bubba.GptFile._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.GptFile.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptFile"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptFile.Bytes">
            <summary>
            Gets or sets the bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.GptFile.CreatedAt">
            <summary>
            Gets or sets the created at.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:Bubba.GptFile.ExpiredAt">
            <summary>
            Gets or sets the expired at.
            </summary>
            <value>
            The expired at.
            </value>
        </member>
        <member name="P:Bubba.GptFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.GptFile.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.GptFile.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Bubba.GptFile.MimeType">
            <summary>
            Gets or sets the type of the MIME.
            </summary>
            <value>
            The type of the MIME.
            </value>
        </member>
        <member name="P:Bubba.GptFile.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:Bubba.GptFile.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptFile.GetFilePurposes">
            <summary>
            Gets the purposes.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptFile.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.GptFile.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptFormat._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:Bubba.GptFormat.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptFormat"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptFormat.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Bubba.GptFormat.GetTypeOptions">
            <summary>
            Gets the type options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptFormat.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptFunction">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptFunction._toolChoice">
            <summary>
            The tool choice
            </summary>
        </member>
        <member name="F:Bubba.GptFunction._strict">
            <summary>
            The strict
            </summary>
        </member>
        <member name="F:Bubba.GptFunction._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="F:Bubba.GptFunction._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.GptFunction._description">
            <summary>
            The description
            </summary>
        </member>
        <member name="F:Bubba.GptFunction._parameters">
            <summary>
            The parameters
            </summary>
        </member>
        <member name="M:Bubba.GptFunction.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptFunction"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptFunction.ToolChoice">
            <summary>
            Gets or sets the tool choice.
            </summary>
            <value>
            The tool choice.
            </value>
        </member>
        <member name="P:Bubba.GptFunction.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Bubba.GptFunction.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.GptFunction.Strict">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptFunction"/> is strict.
            </summary>
            <value>
              <c>true</c> if strict; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptFunction.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Bubba.GptFunction.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:Bubba.GptFunction.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptHeader">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptHeader._contentType">
            <summary>
            The content type
            </summary>
        </member>
        <member name="F:Bubba.GptHeader._authorization">
            <summary>
            The authorization
            </summary>
        </member>
        <member name="F:Bubba.GptHeader._apiKey">
            <summary>
            The API key
            </summary>
        </member>
        <member name="F:Bubba.GptHeader._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.GptHeader.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptHeader" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GptHeader.#ctor(Bubba.GptHeader)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptHeader"/> class.
            </summary>
            <param name="header">The header.</param>
        </member>
        <member name="P:Bubba.GptHeader.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>
            The API key.
            </value>
        </member>
        <member name="P:Bubba.GptHeader.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>
            The type of the content.
            </value>
        </member>
        <member name="P:Bubba.GptHeader.Authorization">
            <summary>
            Gets or sets the authorization.
            </summary>
            <value>
            The authorization.
            </value>
        </member>
        <member name="P:Bubba.GptHeader.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="M:Bubba.GptHeader.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptHeader.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Bubba.GptHeader.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptImage">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptImage._model">
            <summary>
            The model
            </summary>
        </member>
        <member name="F:Bubba.GptImage._background">
            <summary>
            The background
            </summary>
        </member>
        <member name="F:Bubba.GptImage._number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Bubba.GptImage._url">
            <summary>
            The URL
            </summary>
        </member>
        <member name="F:Bubba.GptImage._prompt">
            <summary>
            The prompt
            </summary>
        </member>
        <member name="F:Bubba.GptImage._quality">
            <summary>
            The quality
            </summary>
        </member>
        <member name="F:Bubba.GptImage._responseFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="F:Bubba.GptImage._outputFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="F:Bubba.GptImage._user">
            <summary>
            The user
            </summary>
        </member>
        <member name="F:Bubba.GptImage._size">
            <summary>
            The size
            </summary>
        </member>
        <member name="F:Bubba.GptImage._style">
            <summary>
            The style
            </summary>
        </member>
        <member name="M:Bubba.GptImage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptImage"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptImage.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.GptImage.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.GptImage.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>
            The quality.
            </value>
        </member>
        <member name="P:Bubba.GptImage.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:Bubba.GptImage.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:Bubba.GptImage.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
            <value>
            The output format.
            </value>
        </member>
        <member name="P:Bubba.GptImage.ResponseFormat">
            <summary>
            Gets or sets the output format.
            </summary>
            <value>
            The output format.
            </value>
        </member>
        <member name="M:Bubba.GptImage.GetModelOptions">
            <summary>
            Gets the model options.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptImage.GetQualiyOptions">
            <summary>
            Gets the qualiy options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.GetOutputFormatOptions">
            <summary>
            Gets the output format options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.GetResponseFormatOptions">
            <summary>
            Gets the format options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.GetStyleOptions">
            <summary>
            Gets the format options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.GetBackgroundOptions">
            <summary>
            Gets the background options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.GetSizeOptions">
            <summary>
            Gets the size options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptImage.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptInput._firstId">
            <summary>
            The first identifier
            </summary>
        </member>
        <member name="F:Bubba.GptInput._lastId">
            <summary>
            The last identifier
            </summary>
        </member>
        <member name="F:Bubba.GptInput._hasMore">
            <summary>
            The has more
            </summary>
        </member>
        <member name="F:Bubba.GptInput._object">
            <summary>
            The object
            </summary>
        </member>
        <member name="M:Bubba.GptInput.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptInput"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptInput.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptInput"/> class.
            </summary>
            <param name="firstId">The first identifier.</param>
            <param name="lastId">The last identifier.</param>
            <param name="hasMore">if set to <c>true</c> [has more].</param>
        </member>
        <member name="P:Bubba.GptInput.FirstId">
            <summary>
            Gets or sets the first identifier.
            </summary>
            <value>
            The first identifier.
            </value>
        </member>
        <member name="P:Bubba.GptInput.LastId">
            <summary>
            Gets or sets the last identifier.
            </summary>
            <value>
            The last identifier.
            </value>
        </member>
        <member name="P:Bubba.GptInput.HasMore">
            <summary>
            Gets or sets a value indicating whether this instance has more.
            </summary>
            <value>
              <c>true</c> if this instance has more; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptInput.Object">
            <summary>
            Gets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="M:Bubba.GptInput.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptLocation">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptLocation._city">
            <summary>
            The city
            </summary>
        </member>
        <member name="F:Bubba.GptLocation._region">
            <summary>
            The region
            </summary>
        </member>
        <member name="F:Bubba.GptLocation._country">
            <summary>
            The country
            </summary>
        </member>
        <member name="F:Bubba.GptLocation._state">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:Bubba.GptLocation._zipCode">
            <summary>
            The zip code
            </summary>
        </member>
        <member name="M:Bubba.GptLocation.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptLocation"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptLocation.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptLocation"/> class.
            </summary>
            <param name="city">The city.</param>
            <param name="region">The region.</param>
            <param name="country">The country.</param>
            <param name="state">The state.</param>
            <param name="zipCode">The zip code.</param>
        </member>
        <member name="P:Bubba.GptLocation.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>
            The city.
            </value>
        </member>
        <member name="P:Bubba.GptLocation.Region">
            <summary>
            Gets or sets the region.
            </summary>
            <value>
            The region.
            </value>
        </member>
        <member name="P:Bubba.GptLocation.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Bubba.GptLocation.ZipCode">
            <summary>
            Gets or sets the zip code.
            </summary>
            <value>
            The zip code.
            </value>
        </member>
        <member name="M:Bubba.GptLocation.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptOutput">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptOutput._object">
            <summary>
            The object
            </summary>
        </member>
        <member name="F:Bubba.GptOutput._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="M:Bubba.GptOutput.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptOutput"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptOutput.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptOutput"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="P:Bubba.GptOutput.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptOutput.Object">
            <summary>
            Gets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="M:Bubba.GptOutput.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptPrompt">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptPrompt._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptPrompt._version">
            <summary>
            The version
            </summary>
        </member>
        <member name="F:Bubba.GptPrompt._instructions">
            <summary>
            The instructions
            </summary>
        </member>
        <member name="F:Bubba.GptPrompt._variables">
            <summary>
            The variables
            </summary>
        </member>
        <member name="M:Bubba.GptPrompt.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptPrompt"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptPrompt.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptPrompt.Instructions">
            <summary>
            Gets or sets the instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.GptPrompt.Version">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptPrompt.Variables">
            <summary>
            Gets or sets the previous identifier.
            </summary>
            <value>
            The previous identifier.
            </value>
        </member>
        <member name="M:Bubba.GptPrompt.GetResourceNames(System.String)">
            <summary>
            Gets the resource names.
            </summary>
            <param name = "resxPath" > </param>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptPrompt.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptReasoning">
            <inheritdoc />
        </member>
        <member name="F:Bubba.GptReasoning._effort">
            <summary>
            The effort
            </summary>
        </member>
        <member name="F:Bubba.GptReasoning._summary">
            <summary>
            The summary
            </summary>
        </member>
        <member name="F:Bubba.GptReasoning._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptReasoning._status">
            <summary>
            The status
            </summary>
        </member>
        <member name="F:Bubba.GptReasoning._encryptedContent">
            <summary>
            The encrypted content
            </summary>
        </member>
        <member name="M:Bubba.GptReasoning.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptReasoning"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptReasoning.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptReasoning"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="effort">The effort.</param>
            <param name="summary">The summary.</param>
            <param name="encryptedContent">Content of the encrypted.</param>
            <param name="status">The status.</param>
        </member>
        <member name="P:Bubba.GptReasoning.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptReasoning.Effort">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Bubba.GptReasoning.Summary">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Bubba.GptReasoning.EncryptedContent">
            <summary>
            Gets or sets the content of the encrypted.
            </summary>
            <value>
            The content of the encrypted.
            </value>
        </member>
        <member name="P:Bubba.GptReasoning.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="M:Bubba.GptReasoning.GetEffortOptions">
            <summary>
            Gets the effort options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptReasoning.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptText">
            <inheritdoc />
        </member>
        <member name="F:Bubba.GptText._format">
            <summary>
            The format
            </summary>
        </member>
        <member name="M:Bubba.GptText.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptText"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptText.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>
            The format.
            </value>
        </member>
        <member name="M:Bubba.GptText.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptUpload">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="F:Bubba.GptUpload._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._bytes">
            <summary>
            The bytes
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._file">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._object">
            <summary>
            The object
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._purpose">
            <summary>
            The purpose
            </summary>
        </member>
        <member name="F:Bubba.GptUpload._status">
            <summary>
            The status
            </summary>
        </member>
        <member name="M:Bubba.GptUpload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptUpload"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptUpload.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.GptUpload.Bytes">
            <summary>
            Gets or sets the bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.GptUpload.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Bubba.GptUpload.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.GptUpload.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Bubba.GptUpload.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="M:Bubba.GptUpload.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptUpload.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.GptUpload.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptUsage">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GptUsage._promptTokens">
            <summary>
            The prompt tokens
            </summary>
        </member>
        <member name="F:Bubba.GptUsage._completionTokens">
            <summary>
            The completion tokens
            </summary>
        </member>
        <member name="F:Bubba.GptUsage._totalTokens">
            <summary>
            The total tokens
            </summary>
        </member>
        <member name="F:Bubba.GptUsage._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.GptUsage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptUsage"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptUsage.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptUsage"/> class.
            </summary>
            <param name="prompt">The prompt.</param>
            <param name="completion">The completion.</param>
            <param name="total">The total.</param>
        </member>
        <member name="M:Bubba.GptUsage.#ctor(Bubba.GptUsage)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptUsage"/> class.
            </summary>
            <param name="usage">The usage.</param>
        </member>
        <member name="M:Bubba.GptUsage.Deconstruct(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Deconstructs the specified prompt tokens.
            </summary>
            <param name="promptTokens">The prompt tokens.</param>
            <param name="completionTokens">The completion tokens.</param>
            <param name="totalTokens">The total tokens.</param>
        </member>
        <member name="P:Bubba.GptUsage.PromptTokens">
            <summary>
            Gets or sets the prompt tokens.
            </summary>
            <value>
            The prompt tokens.
            </value>
        </member>
        <member name="P:Bubba.GptUsage.CompletionTokens">
            <summary>
            Gets or sets the completion tokens.
            </summary>
            <value>
            The completion tokens.
            </value>
        </member>
        <member name="P:Bubba.GptUsage.TotalTokens">
            <summary>
            Gets or sets the total tokens.
            </summary>
            <value>
            The total tokens.
            </value>
        </member>
        <member name="M:Bubba.GptUsage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptUsage.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.GptUsage.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.FunctionOutput">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="M:Bubba.FunctionOutput.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FunctionOutput"/> class.
            </summary>
        </member>
        <member name="M:Bubba.FunctionOutput.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.GptGuardrail">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="M:Bubba.GptGuardrail.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptGuardrail"/> class.
            </summary>
        </member>
        <member name="M:Bubba.GptGuardrail.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.InputGuardrail">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="M:Bubba.InputGuardrail.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.InputGuardrail"/> class.
            </summary>
        </member>
        <member name="M:Bubba.InputGuardrail.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.InputGuardrailResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.InputGuardrailResult.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.InputGuardrailResult"/> class.
            </summary>
        </member>
        <member name="M:Bubba.InputGuardrailResult.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.OutputGuardrail">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="M:Bubba.OutputGuardrail.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.OutputGuardrail" /> class.
            </summary>
        </member>
        <member name="M:Bubba.OutputGuardrail.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.OutputGuardrailResult">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.PropertyChangedBase" />
        </member>
        <member name="M:Bubba.OutputGuardrailResult.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.OutputGuardrailResult"/> class.
            </summary>
        </member>
        <member name="M:Bubba.OutputGuardrailResult.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AssistantMessage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptMessage" />
            <seealso cref="T:Bubba.IGptMessage" />
        </member>
        <member name="F:Bubba.AssistantMessage._assistantPrompt">
            <summary>
            The system prompt
            </summary>
        </member>
        <member name="F:Bubba.AssistantMessage._refusal">
            <summary>
            The refusal
            </summary>
        </member>
        <member name="F:Bubba.AssistantMessage._audio">
            <summary>
            The audio
            </summary>
        </member>
        <member name="F:Bubba.AssistantMessage._toolCalls">
            <summary>
            The tool calls
            </summary>
        </member>
        <member name="F:Bubba.AssistantMessage._logprobs">
            <summary>
            The logprobs
            </summary>
        </member>
        <member name="M:Bubba.AssistantMessage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AssistantMessage"/> class.
            </summary>
        </member>
        <member name="M:Bubba.AssistantMessage.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AssistantMessage" /> class.
            </summary>
            <param name="prompt">
            The prompt.
            </param>
        </member>
        <member name="M:Bubba.AssistantMessage.#ctor(Bubba.AssistantMessage)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AssistantMessage"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.AssistantMessage.Deconstruct(System.String@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Deconstructs the specified role.
            </summary>
            <param name="role">The role.</param>
            <param name="content">The content.</param>
        </member>
        <member name="P:Bubba.AssistantMessage.Name">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.AssistantMessage.Audio">
            <summary>
            Gets or sets the audio.
            </summary>
            <value>
            The audio.
            </value>
        </member>
        <member name="P:Bubba.AssistantMessage.Refusal">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.AssistantMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.AssistantMessage.Content">
            <inheritdoc />
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.AssistantMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AssistantMessage.ToString">
            <inheritdoc />
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Bubba.AssistantMessage.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns>
            Data dump to a string
            </returns>
            <exception cref="P:Bubba.ErrorWindow.Exception">
            </exception>
        </member>
        <member name="T:Bubba.DeveloperMessage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptMessage" />
        </member>
        <member name="M:Bubba.DeveloperMessage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DeveloperMessage"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DeveloperMessage.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DeveloperMessage" /> class.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.DeveloperMessage.#ctor(Bubba.DeveloperMessage)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DeveloperMessage"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:Bubba.DeveloperMessage.Name">
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.DeveloperMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.DeveloperMessage.Content">
            <inheritdoc />
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.DeveloperMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DeveloperMessage.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.DeveloperMessage.ToString">
            <inheritdoc />
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Bubba.SystemMessage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptMessage" />
            <seealso cref="T:Bubba.IGptMessage" />
        </member>
        <member name="F:Bubba.SystemMessage._instructions">
            <summary>
            The instructions
            </summary>
        </member>
        <member name="M:Bubba.SystemMessage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SystemMessage"/> class.
            </summary>
        </member>
        <member name="M:Bubba.SystemMessage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.SystemMessage"/> class.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.SystemMessage.#ctor(Bubba.SystemMessage)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SystemMessage"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.SystemMessage.Deconstruct(System.String@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Deconstructs the specified role.
            </summary>
            <param name="role">The role.</param>
            <param name="content">The content.</param>
        </member>
        <member name="P:Bubba.SystemMessage.Name">
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.SystemMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.SystemMessage.Content">
            <inheritdoc />
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.SystemMessage.GetResourceNames(System.String)">
            <summary>
            Gets the resource names.
            </summary>
            <param name="resxPath">The RESX file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.SystemMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SystemMessage.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SystemMessage.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.ToolMessage">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.GptMessage" />
        </member>
        <member name="F:Bubba.ToolMessage._toolCallId">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="M:Bubba.ToolMessage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolMessage"/> class.
            </summary>
        </member>
        <member name="P:Bubba.ToolMessage.Name">
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.ToolMessage.ToolCallId">
            <summary>
            Gets or sets the tool call identifier.
            </summary>
            <value>
            The tool call identifier.
            </value>
        </member>
        <member name="P:Bubba.ToolMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.ToolMessage.Content">
            <inheritdoc />
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.ToolMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ToolMessage.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ToolMessage.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.UserMessage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptMessage" />
            <seealso cref="T:Bubba.IGptMessage" />
        </member>
        <member name="F:Bubba.UserMessage._userPrompt">
            <summary>
            The user prompt
            </summary>
        </member>
        <member name="M:Bubba.UserMessage.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.UserMessage"/> class.
            </summary>
        </member>
        <member name="M:Bubba.UserMessage.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.UserMessage" /> class.
            </summary>
            <param name="prompt">The prompt.</param>
        </member>
        <member name="M:Bubba.UserMessage.#ctor(Bubba.UserMessage)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.UserMessage"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.UserMessage.Deconstruct(System.String@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Deconstructs the specified role.
            </summary>
            <param name="role">The role.</param>
            <param name="content">The content.</param>
        </member>
        <member name="P:Bubba.UserMessage.Role">
            <inheritdoc />
            <summary>
            Gets the role.
            </summary>
            <value>
            The role.
            </value>
        </member>
        <member name="P:Bubba.UserMessage.Content">
            <inheritdoc />
            <summary>
            Gets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="M:Bubba.UserMessage.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.UserMessage.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.UserMessage.Dump">
            <summary>
            Dumps this instance.
            </summary>
            <returns>
            Data dump to a string
            </returns>
            <exception cref="P:Bubba.ErrorWindow.Exception">
            </exception>
        </member>
        <member name="M:Bubba.UserMessage.ToString">
            <inheritdoc />
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Bubba.AssistantOptions">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptOptions" />
        </member>
        <member name="F:Bubba.AssistantOptions._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._toolChoice">
            <summary>
            The tool choice
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._imageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._file">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._vectorStoreIds">
            <summary>
            The vector store ids
            </summary>
        </member>
        <member name="F:Bubba.AssistantOptions._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="M:Bubba.AssistantOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AssistantOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.AssistantOptions.ReasoningEffort">
            <summary>
            Gets or sets the reasoning effort.
            </summary>
            <value>
            The reasoning effort.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.ToolChoice">
            <summary>
            Gets or sets the tool choice.
            </summary>
            <value>
            The tool choice.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.Tools">
            <summary>
            Gets or sets the tools.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>
            The image URL.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.Instructions">
            <summary>
            The instructions parameter gives the model high-level instructions on
            how it should behave while generating a response, including tone, goals,
            and examples of correct responses. Any instructions provided this way
            will take priority over a prompt in the input parameter.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.VectorStoreIds">
            <summary>
            Gets or sets the vector store ids.
            </summary>
            <value>
            The vector store ids.
            </value>
        </member>
        <member name="P:Bubba.AssistantOptions.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="M:Bubba.AssistantOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.ChatOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._metaData">
            <summary>
            Developer-defined tags and values used for filtering completions
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._toolChoice">
            <summary>
            The tool choice
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._imageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._file">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._vectorStoreIds">
            <summary>
            The vector store ids
            </summary>
        </member>
        <member name="F:Bubba.ChatOptions._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="M:Bubba.ChatOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ChatOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.ChatOptions.Instructions">
            <summary>
            The instructions parameter gives the model high-level instructions on
            how it should behave while generating a response, including tone, goals,
            and examples of correct responses. Any instructions provided this way
            will take priority over a prompt in the input parameter.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.ReasoningEffort">
            <summary>
            o1 models only.
            Constrains effort on reasoning for reasoning models.
            Currently supported values are low, medium, and high.
            Reducing reasoning effort can result in faster responses
            and fewer tokens used on reasoning in a response.
            </summary>
            <value>
            The reasoning effort.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.Tools">
            <summary>
            A list of tool enabled on the assistant.
            There can be a maximum of 128 tools per assistant.
            Tools can be of types code_interpreter, file_search, or function.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.ToolChoice">
            <summary>
            Gets or sets the tool choice.
            </summary>
            <value>
            The tool choice.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>
            The image URL.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.VectorStoreIds">
            <summary>
            Gets or sets the vector store ids.
            </summary>
            <value>
            The vector store ids.
            </value>
        </member>
        <member name="P:Bubba.ChatOptions.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="M:Bubba.ChatOptions.GetFormats">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.EmbeddingOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingOptions._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingOptions._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingOptions._encodingFormat">
            <summary>
            The encoding format
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingOptions._dimensions">
            <summary>
            The dimensions
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingOptions.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.EmbeddingOptions" /> class.
            </summary>
        </member>
        <member name="P:Bubba.EmbeddingOptions.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingOptions.EncodingFormat">
            <summary>
            Gets or sets the encoding format.
            </summary>
            <value>
            The encoding format.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingOptions.EndPoint">
            <inheritdoc />
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.EmbeddingOptions.Input">
            <summary>
            Input text to embed, encoded as a string or array of tokens.
            To embed multiple inputs in a single request, pass an array of
            strings or array of token arrays. The input must not exceed
            the max input tokens for the model (8192 tokens for all embedding models),
            cannot be an empty string, and any array must be 2048 dimensions or less.
            In addition to the per-input token limit, all embedding models enforce
            a maximum of 300,000 tokens summed across all inputs in a single request.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingOptions.Dimensions">
            <summary>
            Gets or sets the dimensions.
            </summary>
            <value>
            The dimensions.
            </value>
        </member>
        <member name="M:Bubba.EmbeddingOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.FileOptions">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptOptions" />
        </member>
        <member name="F:Bubba.FileOptions._id">
            <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._purpose">
            <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output,
            batch, batch_output, fine-tune, fine-tune-results and vision.
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._limit">
            <summary>
            A limit on the number of objects to be returned.
            Limit can range between 1 and 10,000,
            and the default is 10,000.
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._order">
            <summary>
            Sort order by the created_at timestamp of the objects.
            asc for ascending order and desc for descending order
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._fileId">
            <summary>
            The file identifier
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._after">
            <summary>
            A cursor for use in pagination. after is an object ID
            defines your place in the list. For instance, if you
            make a list request and receive 100 objects, ending with
            obj_foo, your subsequent call can include after=obj_foo
            in order to fetch the next page of the list
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._createdAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.FileOptions._mimeType">
            <summary>
            The MIME type
            </summary>
        </member>
        <member name="M:Bubba.FileOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FileOptions.Id">
            <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.Purpose">
            <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output,
            batch, batch_output, fine-tune, fine-tune-results and vision.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.FileId">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>
            The file identifier.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.Limit">
            <summary>
            A limit on the number of objects to be returned.
            Limit can range between 1 and 10,000,
            and the default is 10,000.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.Order">
            <summary>
            Sort order by the created_at timestamp of the objects.
            asc for ascending order and desc for descending order
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.After">
            <summary>
            A cursor for use in pagination. after is an object ID
            defines your place in the list. For instance, if you
            make a list request and receive 100 objects, ending with
            obj_foo, your subsequent call can include after=obj_foo
            in order to fetch the next page of the list
            </summary>
            <value>
            The after.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.CreatedAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.Bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.FileOptions.MimeType">
            <summary>
            Gets or sets the type of the MIME.
            </summary>
            <value>
            The type of the MIME.
            </value>
        </member>
        <member name="M:Bubba.FileOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.FineTuningOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._logProbs">
            <summary>
            The log probs
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._echo">
            <summary>
            The echo
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._bestOf">
            <summary>
            The best of
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._logitBias">
            <summary>
            The logit bias
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._trainingFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._suffix">
            <summary>
            The suffix
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._seed">
            <summary>
            The seed
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._validationFile">
            <summary>
            The validation file
            </summary>
        </member>
        <member name="F:Bubba.FineTuningOptions._method">
            <summary>
            The method
            </summary>
        </member>
        <member name="M:Bubba.FineTuningOptions.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FineTuningParameter" /> class.
            </summary>
        </member>
        <member name="P:Bubba.FineTuningOptions.LogProbs">
            <summary>
            Gets or sets the log probs.
            </summary>
            <value>
            The log probs.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.Echo">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.FineTuningOptions"/> is echo.
            </summary>
            <value>
              <c>true</c> if echo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.BestOf">
            <summary>
            Gets or sets the best of.
            </summary>
            <value>
            The best of.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.LogitBias">
            <summary>
            Gets or sets the logit bias.
            </summary>
            <value>
            The logit bias.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.Suffix">
            <summary>
            A string of up to 64 characters that will be added to your fine-tuned model name.
            </summary>
            <value>
            The suffix.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.Seed">
            <summary>
            Gets or sets the seed.
            </summary>
            <value>
            The seed.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.TrainingFile">
            <summary>
            The ID of an uploaded file that contains training data.
            Your dataset must be formatted as a JSONL file.
            Additionally, you must upload your file with the purpose fine-tune.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.ValidationFile">
            <summary>
            The ID of an uploaded file that contains validation data.
            Your dataset must be formatted as a JSONL file.
            Additionally, you must upload your file with the purpose fine-tune.
            </summary>
            <value>
            The validation file.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.FineTuningOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="M:Bubba.FineTuningOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.FineTuningOptions.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.GptOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GptOptions._modalities">
            <summary>
            The modalities
            </summary>
        </member>
        <member name="F:Bubba.GptOptions._responseFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="M:Bubba.GptOptions.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptOptions" /> class.
            </summary>
        </member>
        <member name="P:Bubba.GptOptions.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Modalities">
            <summary>
            Gets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.GptOptions.Instructions">
            <summary>
            The instructions parameter gives the model high-level instructions on
            how it should behave while generating a response, including tone, goals,
            and examples of correct responses. Any instructions provided this way
            will take priority over a prompt in the input parameter.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Stop">
            <summary>
            Gets or sets the stop.
            </summary>
            <value>
            The stop.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.MaxCompletionTokens">
            <inheritdoc />
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.GptOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.GptOptions.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.ImageOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._size">
            <summary>
            The image size
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._prompt">
            <summary>
            A text description of the desired image(s).
            The maximum length is 1000 characters for
            dall-e-2 and 4000 characters for dall-e-3
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._quality">
            <summary>
            The quality
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._style">
            <summary>
            The style of the generated images. Must be one of vivid or natural.
            Vivid causes the model to lean towards generating hyper-real and
            dramatic images. Natural causes the model to produce more natural,
            less hyper-real looking images. This param is only supported for dall-e-3.
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._background">
            <summary>
            The background
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._outputCompression">
            <summary>
            The output compression
            </summary>
        </member>
        <member name="F:Bubba.ImageOptions._outputFormat">
            <summary>
            The output format
            </summary>
        </member>
        <member name="M:Bubba.ImageOptions.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ImageParameter" /> class.
            </summary>
        </member>
        <member name="P:Bubba.ImageOptions.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.Input">
            <summary>
            A text description of the desired image(s).
            The maximum length is 1000 characters for
            dall-e-2 and 4000 characters for dall-e-3
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>
            The quality.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.Style">
            <summary>
            The style of the generated images. Must be one of vivid or natural.
            Vivid causes the model to lean towards generating hyper-real and
            dramatic images. Natural causes the model to produce more natural,
            less hyper-real looking images. This param is only supported for dall-e-3.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.ImageOptions.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.OutputCompression">
            <summary>
            Gets or sets the output compression.
            </summary>
            <value>
            The output compression.
            </value>
        </member>
        <member name="P:Bubba.ImageOptions.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
            <value>
            The output format.
            </value>
        </member>
        <member name="M:Bubba.ImageOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ImageOptions.GetFormats">
            <summary>
            Gets the formats.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.ImageOptions.GetDalleTwoSizes">
            <summary>
            Gets the size options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ImageOptions.GetDalleThreeSizes">
            <summary>
            Gets the dalle three sizes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.SpeechOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._voice">
            <summary>
            The voice
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="F:Bubba.SpeechOptions._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="M:Bubba.SpeechOptions.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SpeechParameter" /> class.
            </summary>
        </member>
        <member name="P:Bubba.SpeechOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.SpeechOptions.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.SpeechOptions.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.SpeechOptions.Voice">
            <summary>
            Gets or sets the voice.
            </summary>
            <value>
            The voice.
            </value>
        </member>
        <member name="P:Bubba.SpeechOptions.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Bubba.SpeechOptions.File">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.SpeechOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.SpeechOptions.GetFormats">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SpeechOptions.GetVoices">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SpeechOptions.GetSpeeds">
            <summary>
            Gets the speech rates.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.SpeechOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.TextOptions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.TextOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextOptions.Instructions">
            <summary>
            The instructions parameter gives the model high-level instructions on
            how it should behave while generating a response, including tone, goals,
            and examples of correct responses. Any instructions provided this way
            will take priority over a prompt in the input parameter.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextOptions.EndPoint">
            <inheritdoc />
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.TopPercent">
            <inheritdoc />
            <summary>
            A number between 0.00 and 1.00. An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.TextOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.TextOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.TranscriptionOptions">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptOptions" />
        </member>
        <member name="F:Bubba.TranscriptionOptions._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionOptions._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionOptions._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionOptions._prompt">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionOptions._formats">
            <summary>
            The formats
            </summary>
        </member>
        <member name="M:Bubba.TranscriptionOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranscriptionOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionOptions.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionOptions.Temperature">
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionOptions.File">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionOptions.Prompt">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            
            The input.
            </value>
        </member>
        <member name="M:Bubba.TranscriptionOptions.GetResponseFormatOptions">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranscriptionOptions.GetAudioFormatOptions">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranscriptionOptions.GetVoiceOptions">
            <summary>
            Gets the voice options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranscriptionOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.TranslationOptions">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptOptions" />
        </member>
        <member name="F:Bubba.TranslationOptions._prompt">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.TranslationOptions._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="M:Bubba.TranslationOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranscriptionOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranslationOptions.Prompt">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.TranslationOptions.File">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.TranslationOptions.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.TranslationOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="M:Bubba.TranslationOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationOptions.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.TranslationOptions.GetResponseFormats">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationOptions.GetFileFormats">
            <summary>
            Gets the formats.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationOptions.GetVoiceOptions">
            <summary>
            Gets the voice options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationOptions.GetModelOptions">
            <summary>
            Gets the model options.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.VectorOptions">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptOptions" />
        </member>
        <member name="F:Bubba.VectorOptions._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.VectorOptions._vectorStoreId">
            <summary>
            The vector store identifier
            </summary>
        </member>
        <member name="F:Bubba.VectorOptions._fileIds">
            <summary>
            The file ids
            </summary>
        </member>
        <member name="F:Bubba.VectorOptions._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.VectorOptions._limit">
            <summary>
            The limit
            </summary>
        </member>
        <member name="F:Bubba.VectorOptions._metaData">
            <summary>
            The meta data
            </summary>
        </member>
        <member name="M:Bubba.VectorOptions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.VectorOptions"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.VectorOptions.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.VectorOptions.VectorStoreId">
            <summary>
            Gets or sets the vector store identifier.
            </summary>
            <value>
            The vector store identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorOptions.Limit">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorOptions.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.VectorOptions.FileIds">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.VectorOptions.Name">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.VectorOptions.MetaData">
            <summary>
            Gets or sets the meta data.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.VectorOptions.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.AssistantPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.AssistantPayload._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.AssistantPayload._instructions">
            <summary>
            The instructions
            </summary>
        </member>
        <member name="F:Bubba.AssistantPayload._descriptions">
            <summary>
            The descriptions
            </summary>
        </member>
        <member name="F:Bubba.AssistantPayload._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="M:Bubba.AssistantPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AssistantPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.AssistantPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.AssistantPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.AssistantPayload.#ctor(System.String,Bubba.GptOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.AssistantPayload"/> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
            <inheritdoc />
        </member>
        <member name="P:Bubba.AssistantPayload.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Tools">
            <summary>
            Gets or sets the tools.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Descriptions">
            <summary>
            Gets or sets the descriptions.
            </summary>
            <value>
            The descriptions.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Instructions">
            <summary>
            Gets or sets the system instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.AssistantPayload.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.AssistantPayload.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="M:Bubba.AssistantPayload.Parse">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.AssistantPayload.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.ChatPayload">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptPayload" />
        </member>
        <member name="F:Bubba.ChatPayload._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="F:Bubba.ChatPayload._metaData">
            <summary>
            Developer-defined tags and values used for filtering completions
            </summary>
        </member>
        <member name="F:Bubba.ChatPayload._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="F:Bubba.ChatPayload._instructions">
            <summary>
            The system prompt
            </summary>
        </member>
        <member name="M:Bubba.ChatPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ChatPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ChatPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ChatPayload" /> class.
            </summary>
            <param name="inputText"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.ChatPayload.#ctor(System.String,System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ChatPayload" /> class.
            </summary>
            <param name="inputText">The user prompt.</param>
            <param name="systemPrompt">The system prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.ChatPayload.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.ChatPayload.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.ReasoningEffort">
            <summary>
            o1 models only.
            Constrains effort on reasoning for reasoning models.
            Currently supported values are low, medium, and high.
            Reducing reasoning effort can result in faster responses
            and fewer tokens used on reasoning in a response.
            </summary>
            <value>
            The reasoning effort.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.Instructions">
            <summary>
            Gets or sets the instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.Tools">
            <summary>
            A list of tool enabled on the assistant.
            There can be a maximum of 128 tools per assistant.
            Tools can be of types code_interpreter, file_search, or function.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.ChatPayload.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.ChatPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.EmbeddingPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingPayload._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingPayload._encodingFormat">
            <summary>
            The encoding format
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingPayload._dimensions">
            <summary>
            The dimensions
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.EmbeddingPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.EmbeddingPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.EmbeddingPayload" /> class.
            </summary>
            <param name="inputText"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.EmbeddingPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.EmbeddingPayload" /> class.
            </summary>
            <param name="inputText">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.EmbeddingPayload.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.EmbeddingPayload.InputText">
            <summary>
            Input text to embed, encoded as a string or array of tokens.
            To embed multiple inputs in a single request, pass an array of strings
            or array of token arrays. The input must not exceed the max input tokens
            for the model (8192 tokens for text-embedding-ada-002), cannot be an
            empty string, and any array must be 2048 dimensions or less.
            Example Python code for counting tokens. Some models may also impose
            a limit on total number of tokens summed across inputs.Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="M:Bubba.EmbeddingPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.FilePayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._purpose">
            <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output,
            batch, batch_output, fine-tune, fine-tune-results and vision.
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._limit">
            <summary>
            A limit on the number of objects to be returned.
            Limit can range between 1 and 10,000,
            and the default is 10,000.
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._order">
            <summary>
            Sort order by the created_at timestamp of the objects.
            asc for ascending order and desc for descending order
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._after">
            <summary>
            A cursor for use in pagination. after is an object ID
            defines your place in the list. For instance, if you
            make a list request and receive 100 objects, ending with
            obj_foo, your subsequent call can include after=obj_foo
            in order to fetch the next page of the list
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._createdAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
        </member>
        <member name="F:Bubba.FilePayload._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="M:Bubba.FilePayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FilePayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.FilePayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.FilePayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.FilePayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.FilePayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.FilePayload.Id">
            <inheritdoc />
            <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.Purpose">
            <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output,
            batch, batch_output, fine-tune, fine-tune-results and vision.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.Limit">
            <summary>
            A limit on the number of objects to be returned.
            Limit can range between 1 and 10,000,
            and the default is 10,000.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.Order">
            <summary>
            Sort order by the created_at timestamp of the objects.
            asc for ascending order and desc for descending order
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.After">
            <summary>
            A cursor for use in pagination. after is an object ID
            defines your place in the list. For instance, if you
            make a list request and receive 100 objects, ending with
            obj_foo, your subsequent call can include after=obj_foo
            in order to fetch the next page of the list
            </summary>
            <value>
            The after.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.CreatedAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.Bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.FilePayload.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="M:Bubba.FilePayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.FineTuningPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._logProbs">
            <summary>
            The log probs
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._echo">
            <summary>
            The echo
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._bestOf">
            <summary>
            The best of
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._logitBias">
            <summary>
            The logit bias
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._trainingFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._suffix">
            <summary>
            The suffix
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._seed">
            <summary>
            The seed
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._validationFile">
            <summary>
            The validation file
            </summary>
        </member>
        <member name="F:Bubba.FineTuningPayload._method">
            <summary>
            The method
            </summary>
        </member>
        <member name="M:Bubba.FineTuningPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FineTuningPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.FineTuningPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.FineTuningPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.FineTuningPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.FineTuningPayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.FineTuningPayload.LogProbs">
            <summary>
            Gets or sets the log probs.
            </summary>
            <value>
            The log probs.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.Echo">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.FineTuningOptions"/> is echo.
            </summary>
            <value>
              <c>true</c> if echo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.BestOf">
            <summary>
            Gets or sets the best of.
            </summary>
            <value>
            The best of.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.LogitBias">
            <summary>
            Gets or sets the logit bias.
            </summary>
            <value>
            The logit bias.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.Suffix">
            <summary>
            A string of up to 64 characters that will be added to your fine-tuned model name.
            </summary>
            <value>
            The suffix.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.Seed">
            <summary>
            Gets or sets the seed.
            </summary>
            <value>
            The seed.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.TrainingFile">
            <summary>
            The ID of an uploaded file that contains training data.
            Your dataset must be formatted as a JSONL file.
            Additionally, you must upload your file with the purpose fine-tune.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.ValidationFile">
            <summary>
            The ID of an uploaded file that contains validation data.
            Your dataset must be formatted as a JSONL file.
            Additionally, you must upload your file with the purpose fine-tune.
            </summary>
            <value>
            The validation file.
            </value>
        </member>
        <member name="P:Bubba.FineTuningPayload.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="M:Bubba.FineTuningPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.GptPayload">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:OpenAI.Chat.ChatCompletionOptions" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:Bubba.GptPayload._modalities">
            <summary>
            The modalities
            </summary>
        </member>
        <member name="M:Bubba.GptPayload.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Payload" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GptPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptPayload" /> class.
            </summary>
            <param name="inputText"> </param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.GptPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptPayload" /> class.
            </summary>
            <param name="inputText">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="M:Bubba.GptPayload.#ctor(Bubba.GptPayload)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Payload" /> class.
            </summary>
            <param name="gptPayload">The payload.</param>
        </member>
        <member name="M:Bubba.GptPayload.Deconstruct(System.String@,System.String@,System.String@,System.Double@,System.Double@,System.Double@,System.Int32@,System.Boolean@,System.Boolean@,Bubba.GptHeader@)">
            <summary>
            Deconstructs the specified inputText.
            </summary>
            <param name="inputText">The inputText.</param>
            <param name="userId">The user identifier.</param>
            <param name="model">The model.</param>
            <param name="frequency">The frequency.</param>
            <param name="presence">The presence.</param>
            <param name="temperature">The temperature.</param>
            <param name="maximumTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
            <param name = "header" > </param>
        </member>
        <member name="P:Bubba.GptPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.GptPayload.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.MaximumTokens">
            <inheritdoc />
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.GptPayload.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the system prompt.
            </summary>
            <value>
            The system prompt.
            </value>
        </member>
        <member name="M:Bubba.GptPayload.Serialize">
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.GptPayload.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ImagePayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ImagePayload._style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Bubba.ImagePayload._quality">
            <summary>
            The quality
            </summary>
        </member>
        <member name="M:Bubba.ImagePayload.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ImagePayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ImagePayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ImagePayload"/> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ImagePayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ImagePayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.ImagePayload.Size">
            <inheritdoc />
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.ImagePayload.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>
            The quality.
            </value>
        </member>
        <member name="P:Bubba.ImagePayload.Style">
            <summary>
            The style of the generated images. Must be one of vivid or natural.
            Vivid causes the model to lean towards generating hyper-real and
            dramatic images. Natural causes the model to produce more natural,
            less hyper-real looking images. This param is only supported for dall-e-3.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:Bubba.ImagePayload.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.ImagePayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ImagePayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.SpeechPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._voice">
            <summary>
            The voice
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="F:Bubba.SpeechPayload._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="M:Bubba.SpeechPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SpeechPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.SpeechPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.SpeechPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.SpeechPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.SpeechPayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.SpeechPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.SpeechPayload.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.SpeechPayload.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.SpeechPayload.Voice">
            <summary>
            Gets or sets the voice.
            </summary>
            <value>
            The voice.
            </value>
        </member>
        <member name="P:Bubba.SpeechPayload.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Bubba.SpeechPayload.File">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.SpeechPayload.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.SpeechPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.TextPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.TextPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.TextPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="M:Bubba.TextPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextPayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.TextPayload.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextPayload.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.Temperature">
            <inheritdoc />
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.FrequencyPenalty">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.TextPayload.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="M:Bubba.TextPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.TranscriptionPayload">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptPayload" />
        </member>
        <member name="F:Bubba.TranscriptionPayload._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionPayload._audioFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="M:Bubba.TranscriptionPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranscriptionPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.TranscriptionPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TranscriptionPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
            <param name = "format" > </param>
        </member>
        <member name="M:Bubba.TranscriptionPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TranscriptionPayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.TranscriptionPayload.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionPayload.Temperature">
            <summary>
            A number between 0.0 and 2.0   between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <value>
            The temperature.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionPayload.AudioFile">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionPayload.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.TranscriptionPayload.GetSoundFile">
            <summary>
            Gets the sound file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranscriptionPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.TranslationPayload">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptPayload" />
        </member>
        <member name="F:Bubba.TranslationPayload._audioFile">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.TranslationPayload._resposeFormat">
            <summary>
            The respose format
            </summary>
        </member>
        <member name="M:Bubba.TranslationPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranslationPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.TranslationPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency"></param>
            <param name="presence"></param>
            <param name="temperature"></param>
            <param name="topPercent"></param>
            <param name="maxTokens"></param>
            <param name="store"></param>
            <param name="stream"></param>
        </member>
        <member name="M:Bubba.TranslationPayload.#ctor(System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranslationPayload" /> class.
            </summary>
            <param name="userPrompt">The user prompt.</param>
            <param name="config">The configuration.</param>
        </member>
        <member name="P:Bubba.TranslationPayload.AudioFile">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.TranslationPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranslationPayload.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.TranslationPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.VectorPayload">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._vectorStoreId">
            <summary>
            The vector store identifier
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._fileIds">
            <summary>
            The file ids
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._limit">
            <summary>
            The limit
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._before">
            <summary>
            The before
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._after">
            <summary>
            The after
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._order">
            <summary>
            The order
            </summary>
        </member>
        <member name="F:Bubba.VectorPayload._metaData">
            <summary>
            The meta data
            </summary>
        </member>
        <member name="M:Bubba.VectorPayload.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.VectorPayload"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.VectorPayload.#ctor(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.VectorPayload" /> class.
            </summary>
            <param name="userPrompt"></param>
            <param name="frequency">The frequency penalty.</param>
            <param name="presence">The presence penalty.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="maxTokens">The maximum tokens.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
        </member>
        <member name="P:Bubba.VectorPayload.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.VectorStoreId">
            <summary>
            Gets or sets the vector store identifier.
            </summary>
            <value>
            The vector store identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.Before">
            <summary>
            Gets or sets the before.
            </summary>
            <value>
            The before.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.After">
            <summary>
            Gets or sets the after.
            </summary>
            <value>
            The after.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.Limit">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.FileIds">
            <summary>
            Gets or sets the file ids.
            </summary>
            <value>
            The file ids.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.VectorPayload.Name">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.VectorPayload.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.VectorPayload.Serialize">
            <inheritdoc />
            <summary>
            Serializes the specified prompt.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="T:Bubba.AssistantRequest">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.AssistantRequest._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="F:Bubba.AssistantRequest._metaData">
            <summary>
            Developer-defined tags and values used for filtering completions
            </summary>
        </member>
        <member name="F:Bubba.AssistantRequest._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="F:Bubba.AssistantRequest._inputText">
            <summary>
            The input text
            </summary>
        </member>
        <member name="F:Bubba.AssistantRequest._instructions">
            <summary>
            The system prompt
            </summary>
        </member>
        <member name="M:Bubba.AssistantRequest.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CompletionRequest" /> class.
            </summary>
        </member>
        <member name="M:Bubba.AssistantRequest.#ctor(System.String,System.String,Bubba.GptOptions)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CompletionRequest" /> class.
            </summary>
            <param name="user">The user.</param>
            <param name="system">The system.</param>
            <param name = "config" > </param>
        </member>
        <member name="M:Bubba.AssistantRequest.#ctor(Bubba.AssistantRequest)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CompletionRequest" /> class.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Bubba.AssistantRequest.Decontruct(Bubba.GptHeader@,System.String@,System.Boolean@,System.Boolean@,System.String@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Decontructs the specified header.
            </summary>
            <param name="header">The header.</param>
            <param name="endPoint">The end point.</param>
            <param name="store">if set to <c>true</c> [store].</param>
            <param name="stream">if set to <c>true</c> [stream].</param>
            <param name="model">The model.</param>
            <param name="number">The number.</param>
            <param name="presence">The presence.</param>
            <param name="frequency">The frequency.</param>
            <param name="temperature">The temperature.</param>
            <param name="topPercent">The top percent.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="P:Bubba.AssistantRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.Modalities">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.Instructions">
            <summary>
            Gets or sets the instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the user prompt.
            </summary>
            <value>
            The user prompt.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.ReasoningEffort">
            <summary>
            Gets or sets the reasoning effort.
            </summary>
            <value>
            The reasoning effort.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.Tools">
            <summary>
            A list of tool enabled on the assistant.
            There can be a maximum of 128 tools per assistant.
            Tools can be of types code_interpreter, file_search, or function.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.AssistantRequest.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.AssistantRequest.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AssistantRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Gets the chat response asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.AssistantRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Extracts the message from response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.ChatCompletionRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.TextRequest" />
        </member>
        <member name="F:Bubba.ChatCompletionRequest._tools">
            <summary>
            The tools
            </summary>
        </member>
        <member name="F:Bubba.ChatCompletionRequest._metaData">
            <summary>
            Developer-defined tags and values used for filtering completions
            </summary>
        </member>
        <member name="F:Bubba.ChatCompletionRequest._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="M:Bubba.ChatCompletionRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ChatCompletionRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <!-- Badly formed XML comment ignored for member "M:Bubba.ChatCompletionRequest.#ctor(System.String,Bubba.GptOptions)" -->
        <member name="P:Bubba.ChatCompletionRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.Modalities">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.Instructions">
            <summary>
            Gets or sets the instructions.
            </summary>
            <value>
            The instructions.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the user prompt.
            </summary>
            <value>
            The user prompt.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.ReasoningEffort">
            <summary>
            Gets or sets the reasoning effort.
            </summary>
            <value>
            The reasoning effort.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.Tools">
            <summary>
            A list of tool enabled on the assistant.
            There can be a maximum of 128 tools per assistant.
            Tools can be of types code_interpreter, file_search, or function.
            </summary>
            <value>
            The tools.
            </value>
        </member>
        <member name="P:Bubba.ChatCompletionRequest.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.ChatCompletionRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Gets the chat response asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatCompletionRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Extracts the message from response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.EmbeddingRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="F:Bubba.EmbeddingRequest._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingRequest._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingRequest._encodingFormat">
            <summary>
            The encoding format
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingRequest._dimensions">
            <summary>
            The dimensions
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingRequest._embedding">
            <summary>
            The embedding
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.EmbeddingRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.EmbeddingRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.EncodingFormat">
            <summary>
            The format to return the embeddings in.
            Can be either float or base64.
            </summary>
            <value>
            The encoding format.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.Input">
            <summary>
            Input text to embed, encoded as a string or array of tokens.
            To embed multiple inputs in a single request, pass an array
            of strings or array of token arrays. The input must not exceed
            the max input tokens for the model
            (8192 tokens for text-embedding-ada-002), cannot be an empty string,
            and any array must be 2048 dimensions or less.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.Dimensions">
            <summary>
            The number of dimensions the resulting output embeddings should have.
            Only supported in text-embedding-3 and later models.
            </summary>
            <value>
            The dimensions.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses generatred.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.EmbeddingRequest.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingRequest.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptConfig" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bubba.EmbeddingRequest.GetQueryAsync(System.String)">
            <summary>
            Generates the query embedding asynchronous.
            </summary>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.EmbeddingRequest.ExtractContent(System.String)">
            <summary>
            Extracts the embedding.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.FileRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="F:Bubba.FileRequest._id">
            <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._fileId">
            <summary>
            The file identifier
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._purpose">
            <summary>
            The intended purpose of the file.
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._limit">
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._order">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._after">
             <summary>
            
             </summary>
        </member>
        <member name="F:Bubba.FileRequest._createdAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._fileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:Bubba.FileRequest._mimeType">
            <summary>
            The MIME type
            </summary>
        </member>
        <member name="M:Bubba.FileRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FileRequest.Id">
            <summary>
            The file identifier, which can be referenced in the API endpoints.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.Purpose">
            <summary>
            The intended purpose of the file.
            Supported values are assistants, assistants_output,
            batch, batch_output, fine-tune, fine-tune-results and vision.
            </summary>
            <value>
            The purpose.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.Limit">
            <summary>
            A limit on the number of objects to be returned.
            Limit can range between 1 and 10,000,
            and the default is 10,000.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.Order">
            <summary>
            Sort order by the created_at timestamp of the objects.
            asc for ascending order and desc for descending order
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.After">
            <summary>
            A cursor for use in pagination. after is an object ID
            defines your place in the list. For instance, if you
            make a list request and receive 100 objects, ending with
            obj_foo, your subsequent call can include after=obj_foo
            in order to fetch the next page of the list
            </summary>
            <value>
            The after.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.CreatedAt">
            <summary>
            The Unix timestamp (in seconds) for when the file was created.
            </summary>
            <value>
            The created at.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.Bytes">
            <summary>
            The size of the file, in bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.FileId">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>
            The file identifier.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.MimeType">
            <summary>
            Gets or sets the type of the MIME.
            </summary>
            <value>
            The type of the MIME.
            </value>
        </member>
        <member name="P:Bubba.FileRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="M:Bubba.FileRequest.UploadAsync(System.String)">
            <summary>
            Uploads the file asynchronous.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileRequest.GetListAsync">
            <summary>
            Lists the files asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileRequest.RetrieveAsync(System.String)">
            <summary>
            Retrieves the file asynchronous.
            </summary>
            <param name="fileId">The file identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileRequest.DeleteAsync(System.String)">
            <summary>
            Deletes the file asynchronous.
            </summary>
            <param name="fileId">The file identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.FineTuningRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="M:Bubba.FineTuningRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FineTuningRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FineTuningRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses returned by the API.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.MaxCompletionTokens">
            <inheritdoc />
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptRequest" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.CompletionRequest.Stream" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.Temperature">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0 Positive value decrease the
            model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.FrequencyPenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.FineTuningRequest.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="M:Bubba.FineTuningRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Gets the text completion asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FineTuningRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Extracts the content of the response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.GptRequest">
            <inheritdoc />
        </member>
        <member name="F:Bubba.GptRequest._stop">
            <summary>
            The stop sequence
            </summary>
        </member>
        <member name="F:Bubba.GptRequest._modalities">
            <summary>
            The modalities
            </summary>
        </member>
        <member name="F:Bubba.GptRequest._responseFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="M:Bubba.GptRequest.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptRequest" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GptRequest.#ctor(Bubba.GptRequest)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptRequest" /> class.
            </summary>
            <param name="request">The GPT request.</param>
        </member>
        <member name="M:Bubba.GptRequest.Deconstruct(Bubba.GptHeader@,System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,System.String@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Deconstructs the specified user identifier.
            </summary>
            <param name = "header" > </param>
            <param name = "endPoint" > </param>
            <param name = "user" > </param>
            <param name = "system" > </param>
            <param name = "store" > </param>
            <param name = "stream" > </param>
            <param name = "model" > </param>
            <param name = "number" >The user identifier.</param>
            <param name = "presence" >The presence.</param>
            <param name = "frequency" >The frequency.</param>
            <param name = "temperature" >The temperature.</param>
            <param name = "topPercent" > </param>
            <param name = "tokens">The maximum tokens.</param>
        </member>
        <member name="P:Bubba.GptRequest.Stop">
            <summary>
            Gets or sets the stop sequences.
            </summary>
            <value>
            The stop sequences.
            </value>
        </member>
        <member name="P:Bubba.GptRequest.FrequencyPenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.GptRequest.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="P:Bubba.GptRequest.ResponseFormat">
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="P:Bubba.GptRequest.Modalities">
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.GptRequest.GetResponseAsync(System.String)">
            <summary>
            Generates the asynchronous.
            </summary>
            <returns></returns>
            <exception cref="T:System.Net.Http.HttpRequestException">
            Error: {_response.StatusCode}, {_error}
            </exception>
        </member>
        <member name="M:Bubba.GptRequest.ExtractContent(System.String)">
            <summary>
            Extracts the content of the response.
            </summary>
            <param name="response">
            The json response.
            </param>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptRequest.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptRequest.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c>
            to release both managed
            and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.GptRequest.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks
            associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Bubba.ImageGenerationRequest">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._size">
            <summary>
            The image size
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._quality">
            <summary>
            The quality
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._style">
            <summary>
            The style
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._background">
            <summary>
            The background
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._outputCompression">
            <summary>
            The output compression
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationRequest._outputFormat">
            <summary>
            The output format
            </summary>
        </member>
        <member name="M:Bubba.ImageGenerationRequest.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ImageGenerationRequest" /> class.
            </summary>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>
            The size of the image.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the prompt.
            </summary>
            <value>
            The prompt.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>
            The quality.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>
            The style.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.OutputFormat">
            <summary>
            Gets or sets the output format.
            </summary>
            <value>
            The output format.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses returned by the API.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationRequest.MaxCompletionTokens">
            <inheritdoc />
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="M:Bubba.ImageGenerationRequest.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.ImageGenerationRequest.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.ImageGenerationRequest.GetResponseAsync(System.String)">
            <summary>
            Generates the images asynchronous.
            </summary>
            <param name="prompt">The prompt.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ImageGenerationRequest.ExtractContent(System.String)">
            <summary>
            Extracts the image urls.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TextGenerationRequest">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="M:Bubba.TextGenerationRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextGenerationRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextGenerationRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextGenerationRequest.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses returned by the API.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.MaxCompletionTokens">
            <inheritdoc />
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptRequest" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.CompletionRequest.Stream" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.Temperature">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0 Positive value decrease the
            model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.FrequencyPenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationRequest.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="M:Bubba.TextGenerationRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Gets the text completion asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextGenerationRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Extracts the content of the response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextGenerationRequest.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextGenerationRequest.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.TextToSpeechReqeust">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._file">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._voice">
            <summary>
            The voice
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechReqeust._audio">
            <summary>
            The audio
            </summary>
        </member>
        <member name="M:Bubba.TextToSpeechReqeust.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextToSpeechReqeust"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.InputText">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.Voice">
            <summary>
            Gets or sets the voice.
            </summary>
            <value>
            The voice.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.Seed">
            <inheritdoc />
            <summary>
            Gets or sets the seed.
            </summary>
            <value>
            The seed.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.File">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.AudioData">
            <summary>
            Gets or sets the audio data.
            </summary>
            <value>
            The audio data.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechReqeust.ResponseFormat">
            <inheritdoc />
            <summary>
            Gets or sets the modalities.
            </summary>
            <value>
            The modalities.
            </value>
        </member>
        <member name="M:Bubba.TextToSpeechReqeust.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextToSpeechReqeust.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Generates the speech asynchronous.
            </summary>
            <returns>
            Task
            </returns>
        </member>
        <member name="M:Bubba.TextToSpeechReqeust.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Parses the generated speech.
            </summary>
            <param name="response">The json response.</param>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.TextToSpeechReqeust.SaveAsync(System.String)">
            <summary>
            Saves the speech asynchronous.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="T:Bubba.TranscriptionRequest">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionRequest._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionRequest._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionRequest._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionRequest._speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="M:Bubba.TranscriptionRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranscriptionRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.File">
            <summary>
            The path to the audio file object (not file name) to transcribe,
            in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranscriptionRequest.AudioData">
            <summary>
            Gets or sets the audio data.
            </summary>
            <value>
            The audio data.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Language">
            <summary>
            The language of the input audio.
            Supplying the input language in ISO-639-1
            format will improve accuracy and latency.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Speed">
            <summary>
            Gets or sets the speed.
            </summary>
            <value>
            The speed.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionRequest.Temperature">
            <inheritdoc />
            <summary>
            The sampling temperature, between 0 and 1.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            If set to 0, the model will use log probability to automatically increase
            the temperature until certain thresholds are hit.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="M:Bubba.TranscriptionRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Transcribes the audio asynchronous.
            </summary>
            <returns>
            Task(String)
            </returns>
        </member>
        <member name="M:Bubba.TranscriptionRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Parses the transcription.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TranslationRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="F:Bubba.TranslationRequest._language">
            <summary>
            The response format
            </summary>
        </member>
        <member name="F:Bubba.TranslationRequest._file">
            <summary>
            The file path
            </summary>
        </member>
        <member name="M:Bubba.TranslationRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranslationRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranslationRequest.File">
            <summary>
            The path to the audio file object (not file name) to transcribe,
            in one of these formats:
            flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Bubba.TranslationRequest.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranslationRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.TranslationRequest.Prompt">
            <inheritdoc />
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="M:Bubba.TranslationRequest.GetAudioAsync(System.String)">
            <summary>
            Translates the audio asynchronous.
            </summary>
            <param name="path">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationRequest.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Parses the translation.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TranslationRequest.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.UploadRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="M:Bubba.UploadRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.UploadRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.UploadRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.Model">
            <summary>
            Gets the chat model.
            </summary>
            <value>
            The chat model.
            </value>
            <inheritdoc />
        </member>
        <member name="P:Bubba.UploadRequest.Messages">
            <inheritdoc />
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.EndPoint">
            <inheritdoc />
            <summary>
            Gets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.Number">
            <inheritdoc />
            <summary>
            THe number 'n' of responses returned by the API.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.MaxCompletionTokens">
            <inheritdoc />
            <summary>
            Gets the maximum tokens.
            </summary>
            <value>
            The maximum tokens.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.Store">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.GptRequest" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.Stream">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.CompletionRequest.Stream" /> is stream.
            </summary>
            <value>
              <c>true</c> if stream; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.Temperature">
            <inheritdoc />
            <summary>
            A number between -2.0 and 2.0 Positive value decrease the
            model's likelihood to repeat the same line verbatim.
            </summary>
            <value>
            The temperature.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.TopPercent">
            <inheritdoc />
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
            <value>
            The top percent.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.FrequencyPenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The frequency.
            </value>
        </member>
        <member name="P:Bubba.UploadRequest.PresencePenalty">
            <inheritdoc />
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            ncreasing the model's likelihood to talk about new topics.
            </summary>
            <value>
            The presence.
            </value>
        </member>
        <member name="M:Bubba.UploadRequest.UploadTrainingFileAsync(System.String)">
            <summary>
            Uploads the training file asynchronous.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.UploadRequest.GetResponseAsync(System.String)">
            <inheritdoc />
            <summary>
            Creates the fine tune asynchronous.
            </summary>
            <param name="fileId">The file identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.VectorRequest">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptRequest" />
        </member>
        <member name="F:Bubba.VectorRequest._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._vectorStoreId">
            <summary>
            The vector store identifier
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._fileIds">
            <summary>
            The file ids
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._limit">
            <summary>
            The limit
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._before">
            <summary>
            The before
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._after">
            <summary>
            The after
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._order">
            <summary>
            The order
            </summary>
        </member>
        <member name="F:Bubba.VectorRequest._metaData">
            <summary>
            The meta data
            </summary>
        </member>
        <member name="M:Bubba.VectorRequest.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.VectorRequest"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.VectorRequest.HttpClient">
            <inheritdoc />
            <summary>
            Gets or sets a value indicating whether this
            <see cref="P:Bubba.GptRequest.HttpClient" /> is store.
            </summary>
            <value>
              <c>true</c> if store; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.FileIds">
            <summary>
            Gets or sets the file ids.
            </summary>
            <value>
            The file ids.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.VectorStoreId">
            <summary>
            Gets or sets the vector store identifier.
            </summary>
            <value>
            The vector store identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.Before">
            <summary>
            Gets or sets the before.
            </summary>
            <value>
            The before.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.After">
            <summary>
            Gets or sets the after.
            </summary>
            <value>
            The after.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Bubba.VectorRequest.MetaData">
            <summary>
            Set of 16 key-value pairs that can be attached to an object.
            This can be useful for storing additional information about the
            object in a structured format. Keys can be a maximum of 64 characters
            long and values can be a maximum of 512 characters long
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="M:Bubba.VectorRequest.GetData">
            <inheritdoc />
            <summary>
            Gets the data.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.VectorRequest.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.VectorRequest.UploadFileByIdAsync(System.String)">
            <summary>
            Uploads the training file asynchronous.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.VectorRequest.CalculateCosineSimilarity(System.Single[],System.Single[])">
            <summary>
            Calculates the cosine similarity.
            </summary>
            <param name="vectorA">The vector a.</param>
            <param name="vectorB">The vector b.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.VectorRequest.LoadVectorStore(System.String)">
            <summary>
            Loads the vector store.
            </summary>
            <param name="connectionString">The connection string.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.AsstistantResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.AsstistantResponse._responseMessage">
            <summary>
            The transcribed text
            </summary>
        </member>
        <member name="F:Bubba.AsstistantResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.AsstistantResponse.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.AsstistantResponse"/> class.
            </summary>
        </member>
        <member name="P:Bubba.AsstistantResponse.ResponseMessage">
            <summary>
            Gets or sets the response message.
            </summary>
            <value>
            The response message.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.AsstistantResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.AsstistantResponse.ExtractText(System.String)">
            <summary>
            Extracts the text completion.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.AsstistantResponse.ExtractData(System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.EmbeddingResponse">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptResponse" />
        </member>
        <member name="F:Bubba.EmbeddingResponse._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingResponse._generatedFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.EmbeddingResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.EmbeddingResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.EmbeddingResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="T:Bubba.FileResponse">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptResponse" />
        </member>
        <member name="F:Bubba.FileResponse._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.FileResponse._generatedFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.FileResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.FileResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FileResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.FileResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.FileResponse.ExtractFile(System.String)">
            <summary>
            Extracts the file.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileResponse.ExtractResponseData(System.String,System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <param name="chatModel">The chat model.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.FineTuningResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FineTuningResponse._generatedFineTuning">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.FineTuningResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.FineTuningResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FineTuningResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.FineTuningResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.GeneratedFineTuning">
            <summary>
            Gets or sets the generated fine tuning.
            </summary>
            <value>
            The generated fine tuning.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.FineTuningResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="T:Bubba.GptResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._choices">
            <summary>
            The choices
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._usage">
            <summary>
            The usage
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._status">
            <summary>
            The status
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._metaData">
            <summary>
            The meta data
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._maxToolCalls">
            <summary>
            The maximum tool calls
            </summary>
        </member>
        <member name="F:Bubba.GptResponse._output">
            <summary>
            The output
            </summary>
        </member>
        <member name="M:Bubba.GptResponse.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptResponse" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GptResponse.#ctor(Bubba.GptResponse)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.GptResponse" /> class.
            </summary>
            <param name="response">The request.</param>
        </member>
        <member name="P:Bubba.GptResponse.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.MaxOutputTokens">
            <summary>
            Gets or sets the maximum output tokens.
            </summary>
            <value>
            The maximum output tokens.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.MetaData">
            <summary>
            Gets or sets the meta data.
            </summary>
            <value>
            The meta data.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.MaxToolCalls">
            <summary>
            Gets or sets the maximum tool calls.
            </summary>
            <value>
            The maximum tool calls.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Choices">
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Usage">
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="P:Bubba.GptResponse.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="M:Bubba.GptResponse.ExtractContent(System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptResponse.GetData">
            <summary>
            Gets the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptResponse.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.GptResponse.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Bubba.ImageGenerationResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationResponse._resourceLocations">
            <summary>
            The resource locations
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationResponse._transcribedText">
            <summary>
            The transcribed text
            </summary>
        </member>
        <member name="F:Bubba.ImageGenerationResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.ImageGenerationResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ImageGenerationResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ImageGenerationResponse.#ctor(Bubba.ImageGenerationResponse)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ImageResponse" /> class.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.ResourceLocations">
            <summary>
            Gets or sets the image urls.
            </summary>
            <value>
            The image urls.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.TranscribedText">
            <summary>
            Gets or sets the transcribed text.
            </summary>
            <value>
            The transcribed text.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.ImageGenerationResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.ImageGenerationResponse.ExtractImage(System.String)">
            <summary>
            Extracts the image.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ImageGenerationResponse.ExtractResponseData(System.String,System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <param name="chatModel">The chat model.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TextGenerationResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TextGenerationResponse._generatedText">
            <summary>
            The transcribed text
            </summary>
        </member>
        <member name="F:Bubba.TextGenerationResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.TextGenerationResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextGenerationResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.TextGenerationResponse.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextResponse" /> class.
            </summary>
            <param name="response">The request.</param>
        </member>
        <member name="P:Bubba.TextGenerationResponse.GeneratedText">
            <summary>
            Gets or sets the generated text.
            </summary>
            <value>
            The generated text.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.TextGenerationResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.TextGenerationResponse.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.TextToSpeechResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechResponse._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.TextToSpeechResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.TextToSpeechResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextToSpeechResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Text">
            <summary>
            Gets or sets the transcribed text.
            </summary>
            <value>
            The transcribed text.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.TextToSpeechResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.TextToSpeechResponse.ExtractAudioText(System.String)">
            <summary>
            Extracts the audio text.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextToSpeechResponse.ExtractResponseData(System.String,System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <param name="chatModel">The chat model.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TranscriptionResponse">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._transcribedText">
            <summary>
            The transcribed text
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._words">
            <summary>
            The words
            </summary>
        </member>
        <member name="F:Bubba.TranscriptionResponse._segments">
            <summary>
            The segments
            </summary>
        </member>
        <member name="M:Bubba.TranscriptionResponse.#ctor">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.TranscriptionResponse.TranscribedText">
            <summary>
            Gets or sets the transcribed text.
            </summary>
            <value>
            The transcribed text.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Words">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Segments">
            <summary>
            Gets or sets the segments.
            </summary>
            <value>
            The segments.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.TranscriptionResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.TranscriptionResponse.ExtractData(System.String)">
            <summary>
            Extracts the message from response.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TranslationResponse">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptResponse" />
        </member>
        <member name="F:Bubba.TranslationResponse._audioData">
            <summary>
            The audio data
            </summary>
        </member>
        <member name="F:Bubba.TranslationResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.TranslationResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TranslationResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.TranslationResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.TranslationResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.TranslationResponse.ExtractContent(System.String)">
            <inheritdoc />
            <summary>
            Extracts the message from response.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.UploadResponse">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptResponse" />
        </member>
        <member name="F:Bubba.UploadResponse._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.UploadResponse._generatedUpload">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.UploadResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.UploadResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.UploadResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.UploadResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>
            The file path.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.UploadResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.UploadResponse.ExtractUpload(System.String)">
            <summary>
            Extracts the upload.
            </summary>
            <param name="jsonResponse">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.VectorResponse">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.GptResponse" />
        </member>
        <member name="F:Bubba.VectorResponse._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.VectorResponse._generatedFile">
            <summary>
            The file path
            </summary>
        </member>
        <member name="F:Bubba.VectorResponse._rawResponse">
            <summary>
            The raw response
            </summary>
        </member>
        <member name="M:Bubba.VectorResponse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.VectorResponse"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.VectorResponse.RawResponse">
            <summary>
            Gets or sets the raw response.
            </summary>
            <value>
            The raw response.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Id">
            <inheritdoc />
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Object">
            <inheritdoc />
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Created">
            <inheritdoc />
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Model">
            <inheritdoc />
            <summary>
            Gets or sets the model.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Choices">
            <inheritdoc />
            <summary>
            Gets or sets the choices.
            </summary>
            <value>
            The choices.
            </value>
        </member>
        <member name="P:Bubba.VectorResponse.Usage">
            <inheritdoc />
            <summary>
            Gets or sets the usage.
            </summary>
            <value>
            The usage.
            </value>
        </member>
        <member name="M:Bubba.VectorResponse.ExtractStores(System.String)">
            <summary>
            Extracts the vector store.
            </summary>
            <param name="response">The json response.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.CodeInterpreter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.CodeInterpreter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CodeInterpreter"/> class.
            </summary>
        </member>
        <member name="T:Bubba.ComputerUse">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.GptTool" />
        </member>
        <member name="M:Bubba.ComputerUse.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ComputerUse"/> class.
            </summary>
        </member>
        <member name="T:Bubba.FileSearch">
            <summary>
            
            </summary>
            <seealso cref="T:Bubba.GptTool" />
        </member>
        <member name="M:Bubba.FileSearch.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FileSearch"/> class.
            </summary>
        </member>
        <member name="T:Bubba.FunctionCall">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.FunctionCall.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FunctionCall"/> class.
            </summary>
        </member>
        <member name="T:Bubba.GptTool">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.GptTool._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.GptTool._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:Bubba.GptTool.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptTool"/> class.
            </summary>
        </member>
        <member name="P:Bubba.GptTool.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.GptTool.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Bubba.GptTool.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.IGptTool">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IGptTool.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.IGptTool.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Bubba.ImageGeneration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.ImageGeneration"/> class.
            </summary>
        </member>
        <member name="T:Bubba.ToolCall">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.ToolCall._id">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:Bubba.ToolCall._type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:Bubba.ToolCall.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolCall"/> class.
            </summary>
        </member>
        <member name="P:Bubba.ToolCall.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Bubba.ToolCall.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Bubba.ToolCall.Fail(System.Exception)">
            <summary>
            Wraps error
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.WebSearch">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.WebSearch.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.WebSearch"/> class.
            </summary>
        </member>
        <member name="T:Bubba.HtmlAttribute">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.HtmlAttribute._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.HtmlAttribute._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.HtmlAttribute._value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Bubba.HtmlAttribute.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlAttribute"/> class.
            </summary>
        </member>
        <member name="M:Bubba.HtmlAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Bubba.HtmlAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.HtmlAttribute.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:Bubba.HtmlAttribute.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.HtmlAttribute.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.HtmlAttribute.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.HtmlDocument">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HtmlDocument._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.HtmlDocument._document">
            <summary>
            The document
            </summary>
        </member>
        <member name="M:Bubba.HtmlDocument.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlDocument"/> class.
            </summary>
        </member>
        <member name="M:Bubba.HtmlDocument.#ctor(AngleSharp.Dom.IDocument)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlDocument"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="P:Bubba.HtmlDocument.Root">
            <summary>
            Gets the root.
            </summary>
            <value>
            The root.
            </value>
        </member>
        <member name="M:Bubba.HtmlDocument.QuerySelector(System.String)">
            <summary>
            Queries the selector.
            </summary>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.HtmlDocument.QuerySelectorAll(System.String)">
            <summary>
            Queries the selector all.
            </summary>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.HtmlDocument.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.HtmlDocument.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.HtmlDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.HtmlDocument.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.HtmlElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HtmlElement._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.HtmlElement._element">
            <summary>
            The element
            </summary>
        </member>
        <member name="M:Bubba.HtmlElement.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlElement"/> class.
            </summary>
        </member>
        <member name="M:Bubba.HtmlElement.#ctor(AngleSharp.Dom.IElement)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlElement"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:Bubba.HtmlElement.Element">
            <summary>
            Gets or sets the element.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="P:Bubba.HtmlElement.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>
            The name of the tag.
            </value>
        </member>
        <member name="P:Bubba.HtmlElement.InnerText">
            <summary>
            Gets or sets the inner text.
            </summary>
            <value>
            The inner text.
            </value>
        </member>
        <member name="P:Bubba.HtmlElement.InnerHtml">
            <summary>
            Gets or sets the inner HTML.
            </summary>
            <value>
            The inner HTML.
            </value>
        </member>
        <member name="P:Bubba.HtmlElement.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Bubba.HtmlElement.Children">
            <summary>
            Gets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="M:Bubba.HtmlElement.AddAttribute(System.String,System.String)">
            <summary>
            Adds the attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Bubba.HtmlElement.AddChild(Bubba.HtmlElement)">
            <summary>
            Adds the child.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="M:Bubba.HtmlElement.RemoveChild(Bubba.HtmlElement)">
            <summary>
            Removes the child.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="M:Bubba.HtmlElement.QuerySelector(System.String)">
            <summary>
            Queries the selector.
            </summary>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.HtmlElement.QuerySelectorAll(System.String)">
            <summary>
            Queries the selector all.
            </summary>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.HtmlElement.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.HtmlElement.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.HtmlElement.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.HtmlElement.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.HtmlReader">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HtmlReader._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.HtmlReader._parser">
            <summary>
            The parser
            </summary>
        </member>
        <member name="M:Bubba.HtmlReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.HtmlReader"/> class.
            </summary>
        </member>
        <member name="M:Bubba.HtmlReader.Parse(System.String)">
            <summary>
            Parses an HTML string and returns the root element of the document.
            </summary>
            <param name="html">The HTML string to parse.</param>
            <returns>The root element of the parsed document.</returns>
        </member>
        <member name="P:Bubba.HtmlReader.Parser">
            <summary>
            Gets or sets the parser.
            </summary>
            <value>
            The parser.
            </value>
        </member>
        <member name="M:Bubba.HtmlReader.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.HtmlReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.HtmlReader.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.HtmlWriter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.HtmlWriter._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.HtmlWriter._builder">
            <summary>
            The builder
            </summary>
        </member>
        <member name="F:Bubba.HtmlWriter._openTags">
            <summary>
            The open tags
            </summary>
        </member>
        <member name="M:Bubba.HtmlWriter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.HtmlWriter"/> class.
            </summary>
        </member>
        <member name="M:Bubba.HtmlWriter.BeginElement(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Begins an HTML element with the specified tag name.
            </summary>
            <param name="tagName">The name of the HTML tag.</param>
            <param name="attributes">Optional attributes for the element.</param>
        </member>
        <member name="M:Bubba.HtmlWriter.EndElement">
            <summary>
            Ends the most recently opened HTML element.
            </summary>
        </member>
        <member name="M:Bubba.HtmlWriter.WriteText(System.String)">
            <summary>
            Writes text content inside the current element.
            </summary>
            <param name="text">The text content to write.</param>
        </member>
        <member name="M:Bubba.HtmlWriter.AddSelfClosingElement(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds a self-closing HTML element.
            </summary>
            <param name="tagName">The name of the self-closing tag.</param>
            <param name="attributes">Optional attributes for the element.</param>
        </member>
        <member name="M:Bubba.HtmlWriter.ToString">
            <summary>
            Returns the generated HTML as a string.
            </summary>
            <returns>The generated HTML.</returns>
        </member>
        <member name="M:Bubba.HtmlWriter.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.HtmlWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.HtmlWriter.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ClientBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._isConnected">
            <summary>
            The is connected
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._count">
            <summary>
            The bytes
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._address">
            <summary>
            The ip address
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._endPoint">
            <summary>
            The ip end point
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._entry">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._port">
            <summary>
            The port
            </summary>
        </member>
        <member name="F:Bubba.ClientBase._socket">
            <summary>
            The socket
            </summary>
        </member>
        <member name="M:Bubba.ClientBase.PingNetwork(System.String)">
            <summary>
            Pings the network.
            </summary>
            <param name="ipAddress">
            The host name or address.
            </param>
            <returns>
            bool
            </returns>
        </member>
        <member name="M:Bubba.ClientBase.SendNotification(System.String)">
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="M:Bubba.ClientBase.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.ClientBase.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="P:Bubba.ClientBase.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.ClientBase.IsConnected">
            <summary>
            Gets or sets a value indicating whether
            this instance is connected.
            </summary>
            <value>
            <c>true</c> if this instance is connected;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.Address">
            <summary>
            Gets or sets the ip address.
            </summary>
            <value>
            The ip address.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.Socket">
            <summary>
            Gets or sets the socket.
            </summary>
            <value>
            The socket.
            </value>
        </member>
        <member name="P:Bubba.ClientBase.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="M:Bubba.ClientBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SearchBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._entry">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._keyWords">
            <summary>
            The query
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._link">
            <summary>
            The link
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._content">
            <summary>
            The content
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._projectId">
            <summary>
            The project identifier
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._projectNumber">
            <summary>
            The project number
            </summary>
        </member>
        <member name="F:Bubba.SearchBase._url">
            <summary>
            The URL
            </summary>
        </member>
        <member name="P:Bubba.SearchBase.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="P:Bubba.SearchBase.KeyWords">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.Link">
            <summary>
            Gets or sets the link.
            </summary>
            <value>
            The link.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.ProjectId">
            <summary>
            Gets or sets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.ProjectNumber">
            <summary>
            Gets or sets the project number.
            </summary>
            <value>
            The project number.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Bubba.SearchBase.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="M:Bubba.SearchBase.PingNetwork(System.String)">
            <summary>
            Pings the network.
            </summary>
            <param name="ipAddress">
            The host name or address.
            </param>
            <returns>
            bool
            </returns>
        </member>
        <member name="M:Bubba.SearchBase.SendNotification(System.String)">
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="M:Bubba.SearchBase.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.SearchBase.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.SearchBase.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ServerBase">
            <inheritdoc />
             <summary>
             </summary>
        </member>
        <member name="F:Bubba.ServerBase._connected">
            <summary>
            The is connected
            </summary>
        </member>
        <member name="M:Bubba.ServerBase.PingNetwork(System.String)">
            <inheritdoc />
            <summary>
            Pings the network.
            </summary>
            <param name="ipAddress">
            The host name or address.
            </param>
            <returns>
            bool
            </returns>
        </member>
        <member name="M:Bubba.ServerBase.SendNotification(System.String)">
            <inheritdoc />
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="M:Bubba.ServerBase.Busy">
            <inheritdoc />
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.ServerBase.Chill">
            <inheritdoc />
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="P:Bubba.ServerBase.IsBusy">
            <inheritdoc />
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="T:Bubba.BabyBoy">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.BabyBoy.Count">
            <summary>
            Gets or sets the bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.Port">
            <inheritdoc />
            <summary>
            Gets or sets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.Data">
            <inheritdoc />
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.Message">
            <inheritdoc />
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.Socket">
            <inheritdoc />
            <summary>
            Gets or sets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.Address">
            <inheritdoc />
            <summary>
            Gets or sets the local.
            </summary>
            <value>
            The local.
            </value>
        </member>
        <member name="P:Bubba.BabyBoy.EndPoint">
            <inheritdoc />
            <summary>
            Gets or sets the local.
            </summary>
            <value>
            The local.
            </value>
        </member>
        <member name="M:Bubba.BabyBoy.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyBoy"/> class.
            </summary>
        </member>
        <member name="M:Bubba.BabyBoy.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyBoy"/> class.
            </summary>
            <param name="address">The ip address.</param>
            <param name="port">The port number.</param>
            <param name="size">Size of the buffer.</param>
        </member>
        <member name="M:Bubba.BabyBoy.#ctor(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.BabyBoy"/> class.
            </summary>
            <param name="address">The ip ipAddress.</param>
            <param name="port">The port.</param>
            <param name="size"> </param>
        </member>
        <member name="M:Bubba.BabyBoy.#ctor(System.Net.IPEndPoint,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.BabyBoy"/> class.
            </summary>
            <param name="endPoint">The ip address.</param>
            <param name="size">Size of the buffer.</param>
        </member>
        <member name="M:Bubba.BabyBoy.#ctor(Bubba.BabyBoy)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyBoy"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:Bubba.BabyBoy.Connect">
            <summary>
            Connects this instance.
            </summary>
        </member>
        <member name="M:Bubba.BabyBoy.SendMessage">
            <summary>
            Sends the message.
            </summary>
        </member>
        <member name="M:Bubba.BabyBoy.SendMessage(System.String)">
            <summary>
            Sends the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.BabyBoy.Notify(System.String)">
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="M:Bubba.BabyBoy.Deconstruct(System.Int32@,System.Int32@,System.Byte[]@,System.Net.IPAddress@,System.Net.IPEndPoint@,System.Net.Sockets.Socket@,System.String@)">
            <summary>
            Deconstructs the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="port">The port.</param>
            <param name="data">The data.</param>
            <param name="address">The ip address.</param>
            <param name="endPoint">The end point.</param>
            <param name="socket">The socket.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:Bubba.BabyGirl">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.BabyGirl.Count">
            <summary>
            Gets or sets the bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.Port">
            <summary>
            Gets or sets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.Data">
            <inheritdoc />
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.Socket">
            <summary>
            Gets or sets the server.
            </summary>
            <value>
            The server.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.Address">
            <inheritdoc />
            <summary>
            Gets or sets the local.
            </summary>
            <value>
            The local.
            </value>
        </member>
        <member name="P:Bubba.BabyGirl.EndPoint">
            <summary>
            Gets or sets the local.
            </summary>
            <value>
            The local.
            </value>
        </member>
        <member name="M:Bubba.BabyGirl.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyGirl"/> class.
            </summary>
        </member>
        <member name="M:Bubba.BabyGirl.#ctor(System.Net.IPAddress,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyGirl"/> class.
            </summary>
            <param name="address">The ip address.</param>
            <param name="port">The port.</param>
            <param name="size"> </param>
        </member>
        <member name="M:Bubba.BabyGirl.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyGirl"/> class.
            </summary>
            <param name="address">The ip address.</param>
            <param name="port">The port number.</param>
            <param name="size">Size of the buffer.</param>
        </member>
        <member name="M:Bubba.BabyGirl.#ctor(Bubba.BabyGirl)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabyGirl"/> class.
            </summary>
            <param name="girl">The client.</param>
        </member>
        <member name="M:Bubba.BabyGirl.Start">
            <summary>
            Connects this instance.
            </summary>
        </member>
        <member name="M:Bubba.BabyGirl.Deconstruct(System.Int32@,System.Int32@,System.Byte[]@,System.Net.IPAddress@,System.Net.IPEndPoint@,System.Net.Sockets.Socket@,System.String@)">
            <summary>
            Deconstructs the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="port">The port.</param>
            <param name="data">The data.</param>
            <param name="address">The ip address.</param>
            <param name="endPoint">The end point.</param>
            <param name="socket">The socket.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:Bubba.BabySearch">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.BabySearch._key">
            <summary>
            The key
            </summary>
        </member>
        <member name="F:Bubba.BabySearch._engineId">
            <summary>
            The engine
            </summary>
        </member>
        <member name="M:Bubba.BabySearch.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabySearch" /> class.
            </summary>
        </member>
        <member name="M:Bubba.BabySearch.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.BabySearch" /> class.
            </summary>
            <param name="keywords">
            The keywords.
            </param>
        </member>
        <member name="P:Bubba.BabySearch.KeyWords">
            <inheritdoc />
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="M:Bubba.BabySearch.GetResults">
            <summary>
            Gets the results.
            </summary>
            <returns>
            List(SearchResult)
            </returns>
        </member>
        <member name="M:Bubba.BabySearch.GetResultsAsync">
            <summary>
            Gets the results.
            </summary>
            <returns>
            Task(IList(SearchResult))
            </returns>
        </member>
        <member name="M:Bubba.BabySearch.SendNotification(System.String)">
            <inheritdoc />
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="T:Bubba.DomainSystem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DomainSystem"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.GetHostAddresses(System.String)">
            <summary>
            Gets the IP addresses associated with a host name.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.GetHostName(System.Net.IPAddress)">
            <summary>
            Gets the host name for the given IP address.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.GetLocalAddress">
            <summary>
            Gets the local machine's IP address.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.GetLocalHostName">
            <summary>
            Gets the fully qualified domain name (FQDN) of the local machine.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.CanReachHost(System.String)">
            <summary>
            Pings a host name or IP address to check reachability.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.GetAliases(System.Net.IPAddress)">
            <summary>
            Performs a reverse DNS lookup to find all alias names for a given IP address.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.IsValidHostName(System.String)">
            <summary>
            Validates if a given string is a valid host name.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.IsValidIpAddress(System.String)">
            <summary>
            Validates if a given string is a valid IP address.
            </summary>
        </member>
        <member name="M:Bubba.DomainSystem.ResolveHost(System.String)">
            <summary>
            Resolves both IP addresses and aliases for a given host name.
            </summary>
        </member>
        <member name="T:Bubba.GoogleSearch">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.GoogleSearch._key">
            <summary>
            The key
            </summary>
        </member>
        <member name="F:Bubba.GoogleSearch._engineId">
            <summary>
            The engine
            </summary>
        </member>
        <member name="M:Bubba.GoogleSearch.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GoogleSearch" /> class.
            </summary>
        </member>
        <member name="M:Bubba.GoogleSearch.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GoogleSearch" /> class.
            </summary>
            <param name="keyWords">
            The keyWords.
            </param>
        </member>
        <member name="P:Bubba.GoogleSearch.KeyWords">
            <inheritdoc />
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.Link">
            <summary>
            Gets or sets the link.
            </summary>
            <value>
            The link.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.ProjectId">
            <summary>
            Gets or sets the project identifier.
            </summary>
            <value>
            The project identifier.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.ProjectNumber">
            <summary>
            Gets or sets the project number.
            </summary>
            <value>
            The project number.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Bubba.GoogleSearch.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="M:Bubba.GoogleSearch.GetResults">
            <summary>
            Gets the results.
            </summary>
            <returns>
            List(SearchResult)
            </returns>
        </member>
        <member name="M:Bubba.GoogleSearch.GetResultsAsync">
            <summary>
            Gets the results.
            </summary>
            <returns>
            Task(IList(SearchResult))
            </returns>
        </member>
        <member name="M:Bubba.GoogleSearch.SendNotification(System.String)">
            <inheritdoc />
            <summary>
            Notifies this instance.
            </summary>
        </member>
        <member name="T:Bubba.SearchResult">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.InnerWebs" />
        </member>
        <member name="M:Bubba.SearchResult.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SearchResult" /> class.
            </summary>
        </member>
        <member name="M:Bubba.SearchResult.#ctor(System.String,System.String,System.String,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SearchResult" /> class.
            </summary>
            <param name="link">The link.</param>
            <param name="name">The name.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
            <param name = "time" > </param>
        </member>
        <member name="M:Bubba.SearchResult.#ctor(Bubba.SearchResult)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SearchResult" /> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Bubba.SearchResult.Deconstruct(System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Deconstructs the specified link.
            </summary>
            <param name="link">The link.</param>
            <param name="name">The name.</param>
            <param name="content">The content.</param>
            <param name="title">The title.</param>
        </member>
        <member name="P:Bubba.SearchResult.Link">
            <inheritdoc />
            <summary>
            Gets or sets the link.
            </summary>
            <value>
            The link.
            </value>
        </member>
        <member name="P:Bubba.SearchResult.Name">
            <inheritdoc />
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.SearchResult.Content">
            <inheritdoc />
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Bubba.SearchResult.Title">
            <inheritdoc />
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="M:Bubba.SearchResult.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.UrlDecoder">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._bufferSize">
            <summary>
            The buffer size
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._byteBuffer">
            <summary>
            The byte buffer
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._charBuffer">
            <summary>
            The character buffer
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._encoding">
            <summary>
            The encoding
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._byteCount">
            <summary>
            The number bytes
            </summary>
        </member>
        <member name="F:Bubba.UrlDecoder._charCount">
            <summary>
            The number chars
            </summary>
        </member>
        <member name="M:Bubba.UrlDecoder.#ctor(System.Int32,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.UrlDecoder"/> class.
            </summary>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="P:Bubba.UrlDecoder.ForFilePaths">
            <summary>
            Gets or sets a value indicating whether [for file paths].
            </summary>
            <value>
              <c>true</c> if [for file paths]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bubba.UrlDecoder.FlushBytes(System.Boolean)">
            <summary>
            Flushes the bytes.
            </summary>
            <param name="checkChar">if set to
            <c>true</c> [check character].</param>
        </member>
        <member name="M:Bubba.UrlDecoder.AddByte(System.Byte)">
            <summary>
            Adds the byte.
            </summary>
            <param name="b">The b.</param>
        </member>
        <member name="M:Bubba.UrlDecoder.AddChar(System.Char,System.Boolean)">
            <summary>
            Adds the character.
            </summary>
            <param name="ch">The ch.</param>
            <param name="checkChar">if set to <c>true</c> [check character].</param>
        </member>
        <member name="M:Bubba.UrlDecoder.AddString(System.String)">
            <summary>
            Adds the string.
            </summary>
            <param name="str">The string.</param>
        </member>
        <member name="M:Bubba.UrlDecoder.GetString">
            <summary>
            Gets the string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bubba.ILanguageProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.ILanguageProcessor.TokenizeText(System.String)">
            <summary>
            Tokenizes the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ILanguageProcessor.NormalizeText(System.String)">
            <summary>
            Normalizes the text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ILanguageProcessor.RemoveStopWords(System.String[])">
            <summary>
            Removes the stop words.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ILanguageProcessor.StemWord(System.String)">
            <summary>
            Stems the word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.ISentimentAnalyzer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.ISentimentAnalyzer.AnalyzeSentiment(System.String)">
            <summary>
            Analyzes the sentiment.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.ITextClassifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.ITextClassifier.ClassifyText(System.String)">
            <summary>
            Classifies the text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.DataPreprocessor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.DataPreprocessor._context">
            <summary>
            The ml context
            </summary>
        </member>
        <member name="F:Bubba.DataPreprocessor._pipeline">
            <summary>
            The pipeline
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.DataPreprocessor"/> class.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.#ctor(System.String,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPreprocessor" /> class.
            </summary>
            <param name="inputColumnName">
            Name of the input column.
            </param>
            <param name="outputColumnName">
            Name of the output column.
            </param>
        </member>
        <member name="M:Bubba.DataPreprocessor.HandleMissingValues(System.String)">
            <summary>
            Handles missing values by replacing them
            with the mean (for numerical) or mode (for categorical).
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.Standardize(System.String)">
            <summary>
            Applies Z-score normalization to numerical features.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.Normalize(System.String)">
            <summary>
            Applies Min-Max Normalization to numerical features.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.TokenizeWords(System.String)">
            <summary>
            Tokenizes text into words.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.RemoveStopWords(System.String)">
            <summary>
            Removes stop words from tokenized text.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.ApplyNGrams(System.String,System.String,System.Int32)">
            <summary>
            Generates n-grams from tokenized text.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.ApplyWordEmbeddings(System.String,System.String)">
            <summary>
            Applies Word Embeddings (e.g., GloVe, FastText).
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.OneHotEncode(System.String)">
            <summary>
            Converts categorical variables into one-hot encoded vectors.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.FeaturizeTextInverseFrequency(System.String,System.String)">
            <summary>
            Featurizes text using TF-IDF (useful for NLP tasks).
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.ApplyComponentAnalysis(System.String,System.String,System.String,System.Int32)">
            <summary>
            Applies Principal Component Analysis (PCA) for dimensionality reduction.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.SelectTopFeatures(System.String,System.String,System.String,System.Int32)">
            <summary>
            Selects top N most relevant features using mutual information.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.Build(Microsoft.ML.IDataView)">
            <summary>
            Builds and fits the transformation pipeline.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.Transform(Microsoft.ML.ITransformer,Microsoft.ML.IDataView)">
            <summary>
            Transforms new data using the built pipeline.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.SaveTransformer(Microsoft.ML.ITransformer,System.String)">
            <summary>
            Saves the trained transformer to a file.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.LoadTransformer(System.String)">
            <summary>
            Loads a pre-trained transformer from a file.
            </summary>
        </member>
        <member name="M:Bubba.DataPreprocessor.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.EmbeddingPipeline">
            <summary>
            Encapsulates the logic for:
            1) Loading text into ML.NET
            2) Building and applying three transformations:
               - FeaturizeText      => Embeddings
               - ProduceWordBags    => Bag-of-Words
               - TokenizeIntoWords  => Tokens
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingPipeline._context">
            <summary>
            The context
            </summary>
        </member>
        <member name="F:Bubba.EmbeddingPipeline._filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.#ctor(Microsoft.ML.MLContext,System.String)">
            <summary>
            Constructor requires an MLContext and the path to the text file.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.LoadData">
            <summary>
            Loads text data into an IDataView from the specified file.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.TransformData(Microsoft.ML.IDataView)">
            <summary>
            Fits the pipeline to the data, transforming it into
            EmbeddingFeatures, BagOfWordsFeatures, and Tokens columns.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.BuildPipeline">
            <summary>
            Builds an ML pipeline that converts text into embedding vectors.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.GetPipelineOutputs(Microsoft.ML.IDataView)">
            <summary>
            Converts the transformed IDataView into PipelineOutput objects.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.GenerateEmbeddings">
            <summary>
            Trains the pipeline and returns the transformed data (embedding vectors).
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.GetEmbeddingVectors(Microsoft.ML.IDataView)">
            <summary>
            Converts the transformed IDataView into an array of TokenizedVector objects.
            </summary>
        </member>
        <member name="M:Bubba.EmbeddingPipeline.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.FeatureVectors">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.FeatureVectors._embeddings">
            <summary>
            The embedding
            </summary>
        </member>
        <member name="F:Bubba.FeatureVectors._bagOfWords">
            <summary>
            The bag of words
            </summary>
        </member>
        <member name="F:Bubba.FeatureVectors._tokens">
            <summary>
            The tokens
            </summary>
        </member>
        <member name="M:Bubba.FeatureVectors.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.FeatureVectors"/> class.
            </summary>
        </member>
        <member name="P:Bubba.FeatureVectors.Embeddings">
            <summary>
            Gets or sets the embedding.
            </summary>
            <value>
            The embedding.
            </value>
        </member>
        <member name="P:Bubba.FeatureVectors.BagOfWords">
            <summary>
            Gets or sets the bag of words.
            </summary>
            <value>
            The bag of words.
            </value>
        </member>
        <member name="P:Bubba.FeatureVectors.Tokens">
            <summary>
            Gets or sets the tokens.
            </summary>
            <value>
            The tokens.
            </value>
        </member>
        <member name="M:Bubba.FeatureVectors.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.InputData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.InputData._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.InputData._number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Bubba.InputData._category">
            <summary>
            The category
            </summary>
        </member>
        <member name="F:Bubba.InputData._label">
            <summary>
            The label
            </summary>
        </member>
        <member name="M:Bubba.InputData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.InputData"/> class.
            </summary>
        </member>
        <member name="M:Bubba.InputData.#ctor(System.String,System.Single,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.InputData"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="number">The number.</param>
            <param name="category">The category.</param>
            <param name="label">The label.</param>
        </member>
        <member name="P:Bubba.InputData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Bubba.InputData.Number">
            <summary>
            Gets or sets the number.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="P:Bubba.InputData.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Bubba.InputData.Label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="M:Bubba.InputData.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.LanguagePipeline">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.LanguagePipeline._processor">
            <summary>
            The processor
            </summary>
        </member>
        <member name="F:Bubba.LanguagePipeline._sentimentAnalyzer">
            <summary>
            The sentiment analyzer
            </summary>
        </member>
        <member name="F:Bubba.LanguagePipeline._classifier">
            <summary>
            The classifier
            </summary>
        </member>
        <member name="M:Bubba.LanguagePipeline.#ctor(Bubba.ILanguageProcessor,Bubba.ISentimentAnalyzer,Bubba.ITextClassifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.LanguagePipeline"/> class.
            </summary>
            <param name="processor">The processor.</param>
            <param name="sentimentAnalyzer">The sentiment analyzer.</param>
            <param name="classifier">The classifier.</param>
        </member>
        <member name="M:Bubba.LanguagePipeline.ProcessText(System.String)">
            <summary>
            Processes the text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Bubba.LanguagePipeline.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.NlpResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._tokens">
            <summary>
            The tokens
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._posTags">
            <summary>
            The position tags
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._namedEntities">
            <summary>
            The named entities
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._sentiment">
            <summary>
            The sentiment
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._inverseFrequencyScores">
            <summary>
            The inverse frequency scores
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._wordFrequencies">
            <summary>
            The word frequencies
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._topics">
            <summary>
            The topics
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._dependencyParse">
            <summary>
            The dependency parse
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._wordEmbeddings">
            <summary>
            The word embeddings
            </summary>
        </member>
        <member name="F:Bubba.NlpResult._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="M:Bubba.NlpResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.NlpResult"/> class.
            </summary>
        </member>
        <member name="M:Bubba.NlpResult.#ctor(System.String[],System.String[],System.String[],System.Collections.Generic.IDictionary{System.String,System.Single[]},System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.NlpResult"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="posTag">The position tag.</param>
            <param name="dependencyParse">The dependency parse.</param>
            <param name="wordEmbeddings">The word embeddings.</param>
            <param name="topics">The topics.</param>
        </member>
        <member name="M:Bubba.NlpResult.#ctor(Bubba.NlpResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.NlpResult"/> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="P:Bubba.NlpResult.Tokens">
            <summary>
            Gets or sets the tokens.
            </summary>
            <value>
            The tokens.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.PosTags">
            <summary>
            Gets or sets the position tags.
            </summary>
            <value>
            The position tags.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.NamedEntities">
            <summary>
            Gets or sets the named entities.
            </summary>
            <value>
            The named entities.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.Sentiment">
            <summary>
            Gets or sets the sentiment.
            </summary>
            <value>
            The sentiment.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.WordFrequencies">
            <summary>
            Gets or sets the word frequencies.
            </summary>
            <value>
            The word frequencies.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.InverseFrequencyScores">
            <summary>
            Gets or sets the inverse frequency scores.
            </summary>
            <value>
            The inverse frequency scores.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.Topics">
            <summary>
            Gets or sets the topics.
            </summary>
            <value>
            The topics.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.DependencyParse">
            <summary>
            Gets or sets the dependency parse.
            </summary>
            <value>
            The dependency parse.
            </value>
        </member>
        <member name="P:Bubba.NlpResult.WordEmbeddings">
            <summary>
            Gets or sets the word embeddings.
            </summary>
            <value>
            The word embeddings.
            </value>
        </member>
        <member name="M:Bubba.NlpResult.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SentimentAnalyzer">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ISentimentAnalyzer" />
        </member>
        <member name="F:Bubba.SentimentAnalyzer._predictor">
            <summary>
            The predictor
            </summary>
        </member>
        <member name="M:Bubba.SentimentAnalyzer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.SentimentAnalyzer"/> class.
            </summary>
        </member>
        <member name="M:Bubba.SentimentAnalyzer.AnalyzeSentiment(System.String)">
            <summary>
            Analyzes the sentiment.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.SentimentData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.SentimentData._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.SentimentData._sentiment">
            <summary>
            The sentiment
            </summary>
        </member>
        <member name="M:Bubba.SentimentData.#ctor">
             <summary>
             Initializes a new instance of the
            
             <see cref="T:Bubba.SentimentData"/> class.
             </summary>
        </member>
        <member name="P:Bubba.SentimentData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Bubba.SentimentData.Sentiment">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.SentimentData"/> is sentiment.
            </summary>
            <value>
              <c>true</c> if sentiment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Bubba.SentimentData.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.SentimentPrediction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.SentimentPrediction.Prediction">
            <summary>
            Gets or sets a value indicating whether this
            <see cref="T:Bubba.SentimentPrediction"/> is prediction.
            </summary>
            <value>
              <c>true</c> if prediction; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Bubba.TextChunker">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TextChunker._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.TextChunker._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.TextChunker._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.TextChunker._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="F:Bubba.TextChunker._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="M:Bubba.TextChunker.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextChunker"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextChunker.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextChunker.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextChunker.ChunkText(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Chunks the text.
            </summary>
            <param name="texts">The texts.</param>
            <param name="maxSize">Maximum size of the chunk.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextChunker.RemoveStopWords(System.Collections.Generic.IList{System.String},System.Collections.Generic.HashSet{System.String})">
            <summary>
            Removes the stop words.
            </summary>
            <param name="chunks">The chunks.</param>
            <param name="stops">The stop words.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextChunker.GetTokenCount(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets the total token count.
            </summary>
            <param name="chunks">The chunks.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextChunker.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.TextChunker.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.TextChunker.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextClassifier">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ITextClassifier" />
        </member>
        <member name="M:Bubba.TextClassifier.ClassifyText(System.String)">
            <inheritdoc />
            <summary>
            Classifies the text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="T:Bubba.TextConverter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TextConverter._enable">
            <summary>
            The enable NLP tokenization
            </summary>
        </member>
        <member name="M:Bubba.TextConverter.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextConverter"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextConverter.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextConverter"/> class.
            </summary>
            <param name="enable">if set to <c>true</c>
            [enable NLP tokenization].</param>
        </member>
        <member name="M:Bubba.TextConverter.ConvertAsync(System.String,System.String)">
            <summary>
            Converts the asynchronous.
            </summary>
            <param name="input">The input file path.</param>
            <param name="output">The output file path.</param>
            <exception cref="T:System.IO.FileNotFoundException">
            Input file not found: {input}</exception>
        </member>
        <member name="M:Bubba.TextConverter.CleanLine(System.String)">
            <summary>
            Cleans the line.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextConverter.Tokenize(System.String)">
            <summary>
            Tokenizes the specified cleaned line.
            </summary>
            <param name="line">The cleaned line.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextConverter.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TextData._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="M:Bubba.TextData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextData"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextData"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="P:Bubba.TextData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="M:Bubba.TextData.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextExtractor">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.TextExtractor" />
        </member>
        <member name="F:Bubba.TextExtractor._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.TextExtractor._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.TextExtractor._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.TextExtractor._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="M:Bubba.TextExtractor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextExtractor"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextExtractor.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextExtractor.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextExtractor.GetFromFolder(System.String)">
            <summary>
            Extract text from all pages in all PDFs in a directory
            </summary>
            <param name="dirPath">The directory dirPath.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextExtractor.GetFromFile(System.String)">
            <summary>
            Extract text from a specific PDF file, page by page
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextExtractor.GetMetadata(System.String)">
            <summary>
            Extract metadata (e.g., title, author) from a PDF file
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextExtractor.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.TextExtractor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.TextExtractor.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextPipeline">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Bubba.TextPipeline._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._extractor">
            <summary>
            The textExtractor
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._chunker">
            <summary>
            The textChunker
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._retriever">
            <summary>
            The textRetriever
            </summary>
        </member>
        <member name="F:Bubba.TextPipeline._request">
            <summary>
            The file apiRequest
            </summary>
        </member>
        <member name="M:Bubba.TextPipeline.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextPipeline"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextPipeline.#ctor(Bubba.TextExtractor,Bubba.TextChunker,Bubba.TextRetriever,Bubba.FileRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextPipeline"/> class.
            </summary>
            <param name="textExtractor">The textExtractor.</param>
            <param name="textChunker">The textChunker.</param>
            <param name="textRetriever">The textRetriever.</param>
            <param name="apiRequest">The file apiRequest.</param>
        </member>
        <member name="P:Bubba.TextPipeline.TextExtractor">
            <summary>
            Gets or sets the text extractor.
            </summary>
            <value>
            The text extractor.
            </value>
        </member>
        <member name="P:Bubba.TextPipeline.TextChunker">
            <summary>
            Gets or sets the text chunker.
            </summary>
            <value>
            The text chunker.
            </value>
        </member>
        <member name="P:Bubba.TextPipeline.TextRetriever">
            <summary>
            Gets or sets the text retriever.
            </summary>
            <value>
            The text retriever.
            </value>
        </member>
        <member name="P:Bubba.TextPipeline.ApiRequest">
            <summary>
            Gets or sets the API request.
            </summary>
            <value>
            The API request.
            </value>
        </member>
        <member name="M:Bubba.TextPipeline.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextPipeline.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextPipeline.ExecuteAsync(System.String,System.String)">
            <summary>
            Executes the asynchronous.
            </summary>
            <param name="query">The query.</param>
            <param name="directory">The PDF directory.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextPipeline.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.TextPipeline.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.TextPipeline.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextPreprocessor">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.ILanguageProcessor" />
        </member>
        <member name="F:Bubba.TextPreprocessor._stopWords">
            <summary>
            The stop words
            </summary>
        </member>
        <member name="M:Bubba.TextPreprocessor.LoadStopWords(System.String)">
            <summary>
            Load stop words from an external JSON file.
            </summary>
        </member>
        <member name="M:Bubba.TextPreprocessor.TokenizeText(System.String)">
            <inheritdoc />
            <summary>
            Tokenizes the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextPreprocessor.NormalizeText(System.String)">
            <inheritdoc />
            <summary>
            Normalizes the text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextPreprocessor.RemoveStopWords(System.String[])">
            <inheritdoc />
            <summary>
            Removes the stop words.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextPreprocessor.ConvertToJsonl(System.String,System.String,System.String)">
            <summary>
            Converts a text file to a JSONL (JSON Lines) file.
            Each line in the text file is treated as a separate JSON object.
            </summary>
            <param name="inpath">Path to the input text file.</param>
            <param name="outpath">Path to the output JSONL file.</param>
            <param name="key">The key to assign to each line in the JSON object.</param>
        </member>
        <member name="M:Bubba.TextPreprocessor.StemWord(System.String)">
            <inheritdoc />
            <summary>
            Stems the word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextPreprocessor.GenerateNgrams(System.String,System.Int32)">
            <summary>
            Generate N-grams from text.
            </summary>
        </member>
        <member name="M:Bubba.TextPreprocessor.CleanText(System.String)">
            <summary>
            Remove URLs, emails, hashtags, and special characters.
            </summary>
        </member>
        <member name="M:Bubba.TextPreprocessor.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextProcessor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TextProcessor._context">
            <summary>
            The ml context
            </summary>
        </member>
        <member name="F:Bubba.TextProcessor._stopWords">
            <summary>
            The stop words
            </summary>
        </member>
        <member name="F:Bubba.TextProcessor._wordVectorModel">
            <summary>
            The word2 vec model
            </summary>
        </member>
        <member name="M:Bubba.TextProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TextProcessor"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextProcessor.ProcessFile(System.String)">
            <summary>
            Processes the file.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.CleanText(System.String)">
            <summary>
            Cleans the text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.CalculateFrequencies(System.String[],System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Computes the tf idf.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="frequencies">The word frequencies.</param>
            <returns>
            Dict
            </returns>
        </member>
        <member name="M:Bubba.TextProcessor.Tokenize(System.String)">
            <summary>
            Tokenizes the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.RemoveStopWords(System.String[])">
            <summary>
            Removes the stop words.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.ApplyStemming(System.String[])">
            <summary>
            Applies the stemming.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.StemWord(System.String)">
            <summary>
            Stems the word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.TrainWordVectors">
            <summary>
            Trains the word2 vec.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.GenerateWordEmbeddings(System.String[])">
            <summary>
            Generates the word embeddings.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.PerformPosTagging(System.String[])">
            <summary>
            Performs the position tagging.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.PerformNamedEntityRecognition(System.String[])">
            <summary>
            Performs the named entity recognition.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.PerformSentimentAnalysis(System.String)">
            <summary>
            Performs the sentiment analysis.
            </summary>
            <param name="sentence">The sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.CalculateFrequencies(System.String[])">
            <summary>
            Gets the word frequencies.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.PerformTopicModeling(System.String)">
            <summary>
            Performs the topic modeling.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.PerformDependencyParsing(System.String[])">
            <summary>
            Performs the dependency parsing.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextProcessor.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TextRetriever">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.TextRetriever._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.TextRetriever._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.TextRetriever._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.TextRetriever._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="M:Bubba.TextRetriever.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.TextRetriever"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TextRetriever.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextRetriever.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.TextRetriever.GetChunks(System.String,System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Gets the chunks.
            </summary>
            <param name="prompt">The prompt.</param>
            <param name="chunks">The document chunks.</param>
            <param name="topN">The top n.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextRetriever.CalculateCosineSimilarity(System.String[],System.String[])">
            <summary>
            Calculates the cosine similarity.
            </summary>
            <param name="tokensA">The tokens a.</param>
            <param name="tokensB">The tokens b.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.TextRetriever.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.TextRetriever.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.TextRetriever.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TokenizedText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TokenizedText._tokens">
            <summary>
            The tokens
            </summary>
        </member>
        <member name="M:Bubba.TokenizedText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TokenizedText"/> class.
            </summary>
        </member>
        <member name="M:Bubba.TokenizedText.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TokenizedText"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="P:Bubba.TokenizedText.Tokens">
            <summary>
            Gets or sets the tokens.
            </summary>
            <value>
            The tokens.
            </value>
        </member>
        <member name="M:Bubba.TokenizedText.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.TokenizedVector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.TokenizedVector._embedding">
            <summary>
            The embedding
            </summary>
        </member>
        <member name="M:Bubba.TokenizedVector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.TokenizedVector"/> class.
            </summary>
        </member>
        <member name="P:Bubba.TokenizedVector.Embedding">
            <summary>
            Gets or sets the embedding.
            </summary>
            <value>
            The embedding.
            </value>
        </member>
        <member name="T:Bubba.WordEmbeddingData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.WordEmbeddingData._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.WordEmbeddingData._wordEmbedding">
            <summary>
            The word embedding
            </summary>
        </member>
        <member name="M:Bubba.WordEmbeddingData.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.WordEmbeddingData"/> class.
            </summary>
        </member>
        <member name="M:Bubba.WordEmbeddingData.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.WordEmbeddingData"/> class.
            </summary>
            <param name="wordEmbedding">The word embedding.</param>
        </member>
        <member name="P:Bubba.WordEmbeddingData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Bubba.WordEmbeddingData.WordEmbedding">
            <summary>
            Gets or sets the word embedding.
            </summary>
            <value>
            The word embedding.
            </value>
        </member>
        <member name="M:Bubba.WordEmbeddingData.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.AsyncPathBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._absolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._drive">
            <summary>
            The drive
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._driveSeparator">
            <summary>
            The drive separator
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._fileAttributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._fileExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._fileName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._fileSecurity">
            <summary>
            Gets or sets the file security.
            </summary>
            <value>
            The file security.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._folderSeparator">
            <summary>
            The directory separator
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._fullPath">
            <summary>
            Gets or sets the full path.
            </summary>
            <value>
            The full path.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._hasExtension">
            <summary>
            The has extension
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._hasParent">
            <summary>
            Gets or sets a value indicating
            whether this instance has parent.
            </summary>
            <value>
            <c>true</c>
            if this instance has parent;
            otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._input">
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._invalidNameChars">
            <summary>
            The invalid name chars
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._invalidPathChars">
            <summary>
            The invalid path chars
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._isRooted">
            <summary>
            The is rooted
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="F:Bubba.AsyncPathBase._parentName">
            <summary>
            The parent name
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._parentPath">
            <summary>
            The parent path
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._pathSeparator">
            <summary>
            The path separator
            </summary>
        </member>
        <member name="F:Bubba.AsyncPathBase._relativePath">
            <summary>
            The relative path
            </summary>
        </member>
        <member name="M:Bubba.AsyncPathBase.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="P:Bubba.AsyncPathBase.AbsolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="T:Bubba.IPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IPath.Buffer">
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Bubba.IPath.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.IPath.FullPath">
            <summary>
            Gets or sets the full path.
            </summary>
            <value>
            The full path.
            </value>
        </member>
        <member name="P:Bubba.IPath.AbsolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="P:Bubba.IPath.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="P:Bubba.IPath.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.IPath.HasParent">
            <summary>
            Gets or sets a value indicating whether
            this instance has parent.
            </summary>
            <value>
              <c>true</c> if this instance has parent;
            otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.IPath.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.IPath.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Bubba.IPath.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Bubba.IPath.FileSecurity">
            <summary>
            Gets or sets the file security.
            </summary>
            <value>
            The file security.
            </value>
        </member>
        <member name="P:Bubba.IPath.DirSep">
            <summary>
            Gets the dir sep.
            </summary>
            <value>
            The dir sep.
            </value>
        </member>
        <member name="P:Bubba.IPath.PathSep">
            <summary>
            Gets the path sep.
            </summary>
            <value>
            The path sep.
            </value>
        </member>
        <member name="P:Bubba.IPath.InvalidPathChars">
            <summary>
            Gets the invalid path chars.
            </summary>
            <value>
            The invalid path chars.
            </value>
        </member>
        <member name="P:Bubba.IPath.InvalidNameChars">
            <summary>
            Gets the invalid name chars.
            </summary>
            <value>
            The invalid name chars.
            </value>
        </member>
        <member name="T:Bubba.PathBase">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.PathBase._absolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="F:Bubba.PathBase._created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="F:Bubba.PathBase._drive">
            <summary>
            The drive 
            </summary>
        </member>
        <member name="F:Bubba.PathBase._driveSeparator">
            <summary>
            The drive separator
            </summary>
        </member>
        <member name="F:Bubba.PathBase._fileAttributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="F:Bubba.PathBase._fileExtension">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bubba.PathBase._fileName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:Bubba.PathBase._fileSecurity">
            <summary>
            Gets or sets the file security.
            </summary>
            <value>
            The file security.
            </value>
        </member>
        <member name="F:Bubba.PathBase._folderSeparator">
            <summary>
            The directory separator
            </summary>
        </member>
        <member name="F:Bubba.PathBase._fullPath">
            <summary>
            Gets or sets the full path.
            </summary>
            <value>
            The full path.
            </value>
        </member>
        <member name="F:Bubba.PathBase._hasExtension">
            <summary>
            The has extension
            </summary>
        </member>
        <member name="F:Bubba.PathBase._hasParent">
            <summary>
            Gets or sets a value indicating
            whether this instance has parent.
            </summary>
            <value>
            <c>true</c>
            if this instance has parent;
            otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="F:Bubba.PathBase._input">
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="F:Bubba.PathBase._invalidNameChars">
            <summary>
            The invalid name chars
            </summary>
        </member>
        <member name="F:Bubba.PathBase._invalidPathChars">
            <summary>
            The invalid path chars
            </summary>
        </member>
        <member name="F:Bubba.PathBase._isRooted">
            <summary>
            The is rooted
            </summary>
        </member>
        <member name="F:Bubba.PathBase._length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="F:Bubba.PathBase._modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="F:Bubba.PathBase._pathSeparator">
            <summary>
            The path separator
            </summary>
        </member>
        <member name="F:Bubba.PathBase._relativePath">
            <summary>
            The relative path
            </summary>
        </member>
        <member name="M:Bubba.PathBase.Update``1(``0@,``0,System.String)">
            <summary>
            Updates the specified field.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.PathBase.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.PathBase.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="E:Bubba.PathBase.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Bubba.AsyncPath">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="P:Bubba.AsyncPath.FullPath">
            <summary>
            Gets or sets the full path.
            </summary>
            <value>
            The full path.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.RelativePath">
            <summary>
            Gets the relative path.
            </summary>
            <value>
            The relative path.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.FileName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.ParentName">
            <summary>
            Gets the name of the parent.
            </summary>
            <value>
            The name of the parent.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.ParentPath">
            <summary>
            Gets the parent path.
            </summary>
            <value>
            The parent path.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.Drive">
            <summary>
            Gets the drive.
            </summary>
            <value>
            The drive.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.FileAttributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.FileSecurity">
            <summary>
            Gets or sets the file security.
            </summary>
            <value>
            The file security.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.InvalidPathChars">
            <inheritdoc />
            <summary>
            Gets the invalid path chars.
            </summary>
            <value>
            The invalid path chars.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.InvalidNameChars">
            <inheritdoc />
            <summary>
            Gets the invalid name chars.
            </summary>
            <value>
            The invalid name chars.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.PathSeparator">
            <summary>
            Gets the path separator.
            </summary>
            <value>
            The path separator.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.FolderSeparator">
            <summary>
            Gets the folder separator.
            </summary>
            <value>
            The folder separator.
            </value>
        </member>
        <member name="P:Bubba.AsyncPath.DriveSeparator">
            <summary>
            Gets the drive separator.
            </summary>
            <value>
            The drive separator.
            </value>
        </member>
        <member name="M:Bubba.AsyncPath.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.AsyncPath.#ctor(System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/>
            class.
            </summary>
            <param name="input">
            The input.
            </param>
        </member>
        <member name="M:Bubba.AsyncPath.#ctor(Bubba.DataPath)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/> class.
            </summary>
            <param name="path">
            The path.
            </param>
        </member>
        <member name="M:Bubba.AsyncPath.Deconstruct(System.String@,System.String@,System.String@,System.String@,System.Int64@,System.String@,System.DateTime@,System.DateTime@)">
            <summary>
            Deconstructs the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="absolutePath">The abs path.</param>
            <param name="name">The name.</param>
            <param name="fullPath">The full path.</param>
            <param name="length">The length.</param>
            <param name="extension"> </param>
            <param name="createDate">The created.</param>
            <param name="modifyDate">The modified.</param>
        </member>
        <member name="M:Bubba.AsyncPath.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="T:Bubba.DataPath">
            <inheritdoc/>
            <summary>
            </summary>
            <seealso cref="T:Badger.BasicPath"/>
        </member>
        <member name="M:Bubba.DataPath.Deconstruct(System.String@,System.String@,System.String@,System.String@,System.Int64@,System.String@,System.DateTime@,System.DateTime@)">
            <summary>
            Deconstructs the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="absolutePath">The abs path.</param>
            <param name="name">The name.</param>
            <param name="fullPath">The full path.</param>
            <param name="length">The length.</param>
            <param name="extension"> </param>
            <param name="createDate">The created.</param>
            <param name="modifyDate">The modified.</param>
        </member>
        <member name="M:Bubba.DataPath.ToString">
            <inheritdoc />
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" />
            that represents this instance.
            </returns>
        </member>
        <member name="M:Bubba.DataPath.#ctor">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/>
            class.
            </summary>
        </member>
        <member name="M:Bubba.DataPath.#ctor(System.String)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/>
            class.
            </summary>
            <param name="input">
            The input.
            </param>
        </member>
        <member name="M:Bubba.DataPath.#ctor(Bubba.DataPath)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.DataPath"/> class.
            </summary>
            <param name="path">
            The path.
            </param>
        </member>
        <member name="P:Bubba.DataPath.Input">
            <summary>
            Gets or sets the buffer.
            </summary>
            <value>
            The buffer.
            </value>
        </member>
        <member name="P:Bubba.DataPath.FullPath">
            <summary>
            Gets or sets the full path.
            </summary>
            <value>
            The full path.
            </value>
        </member>
        <member name="P:Bubba.DataPath.AbsolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="P:Bubba.DataPath.RelativePath">
            <summary>
            Gets the relative path.
            </summary>
            <value>
            The relative path.
            </value>
        </member>
        <member name="P:Bubba.DataPath.FileName">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Parent">
            <summary>
            Gets or sets a value indicating
            whether this instance has parent.
            </summary>
            <value>
            <c>true</c>
            if this instance has parent;
            otherwise,
            <c>false</c>.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Drive">
            <summary>
            Gets the drive.
            </summary>
            <value>
            The drive.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>
            The created.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Bubba.DataPath.Extension">
            <summary>
            Gets or sets the extension.
            </summary>
            <value>
            The extension.
            </value>
        </member>
        <member name="P:Bubba.DataPath.FileAttributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Bubba.DataPath.FileSecurity">
            <summary>
            Gets or sets the file security.
            </summary>
            <value>
            The file security.
            </value>
        </member>
        <member name="P:Bubba.DataPath.InvalidPathChars">
            <inheritdoc />
            <summary>
            Gets the invalid path chars.
            </summary>
            <value>
            The invalid path chars.
            </value>
        </member>
        <member name="P:Bubba.DataPath.InvalidNameChars">
            <inheritdoc />
            <summary>
            Gets the invalid name chars.
            </summary>
            <value>
            The invalid name chars.
            </value>
        </member>
        <member name="P:Bubba.DataPath.PathSeparator">
            <summary>
            Gets the path separator.
            </summary>
            <value>
            The path separator.
            </value>
        </member>
        <member name="P:Bubba.DataPath.FolderSeparator">
            <summary>
            Gets the folder separator.
            </summary>
            <value>
            The folder separator.
            </value>
        </member>
        <member name="P:Bubba.DataPath.DriveSeparator">
            <summary>
            Gets the drive separator.
            </summary>
            <value>
            The drive separator.
            </value>
        </member>
        <member name="T:Bubba.Properties.Definitions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.After">
            <summary>
              Looks up a localized string similar to A cursor for use in pagination. after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Choices">
            <summary>
              Looks up a localized string similar to A list of chat completion choices. Can contain more than one elements if n is greater than 1. Can also be empty for the last chunk if you set stream_options: {&quot;include_usage&quot;: true}..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Created">
            <summary>
              Looks up a localized string similar to The Unix timestamp (in seconds) of when the chat completion was created..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Dimensions">
            <summary>
              Looks up a localized string similar to The number of dimensions the resulting output embeddings should have. Only supported in text-embedding-3 and later models..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Embedding">
            <summary>
              Looks up a localized string similar to The embedding vector: a list of floats. .
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.EncodingFormat">
            <summary>
              Looks up a localized string similar to The format to return the embeddings in. Can be either float or base64..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.File">
            <summary>
              Looks up a localized string similar to The File object (not file name) to be uploaded.  Upload a file that can be used across various endpoints. Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 100 GB.  For audio: the audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.FileName">
            <summary>
              Looks up a localized string similar to The name of the file..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.FinishReason">
            <summary>
              Looks up a localized string similar to The reason the model stopped generating tokens. This will be stop if the model hit a natural stop point or a provided stop sequence, length if the maximum number of tokens specified in the request was reached, content_filter if content was omitted due to a flag from our content filters, tool_calls if the model called a tool, or function_call (deprecated) if the model called a function..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.FrequencyPenalty">
            <summary>
              Looks up a localized string similar to Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model&apos;s likelihood to repeat the same line verbatim..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Input">
            <summary>
              Looks up a localized string similar to Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for text-embedding-ada-002), cannot be an empty string, and any array must be 2048 dimensions or less. Example Python code for counting tokens. Some models may also impose a limit on total number of tokens summed across inputs..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Limit">
            <summary>
              Looks up a localized string similar to A limit on the number of objects to be returned. Limit can range between 1 and 10,000, and the default is 10,000..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.LogitBias">
            <summary>
              Looks up a localized string similar to Modify the likelihood of specified tokens appearing in the completion. Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.LogProbs">
            <summary>
              Looks up a localized string similar to Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.MaxCompletionTokens">
            <summary>
              Looks up a localized string similar to An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Messages">
            <summary>
              Looks up a localized string similar to A list of messages comprising the conversation so far. Depending on the model you use, different message types (modalities) are supported, like text, images, and audio..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.MimeType">
            <summary>
              Looks up a localized string similar to This must fall within the supported MIME types for your file purpose. See the supported MIME types for assistants and vision..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Modalities">
            <summary>
              Looks up a localized string similar to Output types that you would like the model to generate for this request. Most models are capable of generating text, which is the default: [&quot;text&quot;]; To request that this model generate both text and audio responses, you can use: [&quot;text&quot;, &quot;audio&quot;].
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Number">
            <summary>
              Looks up a localized string similar to For images: the number of images to generate. Must be between 1 and 10. For dall-e-3, only n=1 is supported.  For text: How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Order">
            <summary>
              Looks up a localized string similar to Sort order by the created_at timestamp of the objects. asc for ascending order and desc for descending order..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.PresencePenalty">
            <summary>
              Looks up a localized string similar to Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model&apos;s likelihood to talk about new topics..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Prompt">
            <summary>
              Looks up a localized string similar to For images: A text description of the desired image(s). The maximum length is 1000 characters..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.ReasoningEffort">
            <summary>
              Looks up a localized string similar to Constrains effort on reasoning for reasoning models. Currently supported values are low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.ResponseFormat">
            <summary>
              Looks up a localized string similar to An object specifying the format that the model must output. Setting to { &quot;type&quot;: &quot;json_schema&quot;, &quot;json_schema&quot;: {...} } enables Structured Outputs which ensures the model will match your supplied JSON schema.  Setting to { &quot;type&quot;: &quot;json_object&quot; } enables JSON mode, which ensures the message the model generates is valid JSON.  For images: the format in which the generated images are returned. Must be one of url or b64_json. URLs are only valid for 60 minutes after the image has been generated.  For audio: the [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Seed">
            <summary>
              Looks up a localized string similar to  If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Size">
            <summary>
              Looks up a localized string similar to The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024 for dall-e-2. Must be one of 1024x1024, 1792x1024, or 1024x1792 for dall-e-3 models..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Speed">
            <summary>
              Looks up a localized string similar to The speed of the generated audio. Select a value from 0.25 to 4.0. 1.0 is the default..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Stop">
            <summary>
              Looks up a localized string similar to Up to 4 sequences where the API will stop generating further tokens..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Store">
            <summary>
              Looks up a localized string similar to Whether or not to store the output of this chat completion request for use in our model distillation or evals products..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Stream">
            <summary>
              Looks up a localized string similar to A true or false value that, if set, partial message deltas will be sent like in ChatGPT. .
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Style">
            <summary>
              Looks up a localized string similar to The style of the generated images. Must be one of vivid or natural. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for dall-e-3..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Suffix">
            <summary>
              Looks up a localized string similar to A string of up to 64 characters that will be added to your fine-tuned model name..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Temperature">
            <summary>
              Looks up a localized string similar to A number between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.TopLogProbs">
            <summary>
              Looks up a localized string similar to An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.TopPercent">
            <summary>
              Looks up a localized string similar to An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.TrainingFile">
            <summary>
              Looks up a localized string similar to The ID of an uploaded file that contains training data.  Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose fine-tune..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.ValidationFile">
            <summary>
              Looks up a localized string similar to The ID of an uploaded file that contains validation data..
            </summary>
        </member>
        <member name="P:Bubba.Properties.Definitions.Voice">
            <summary>
              Looks up a localized string similar to The voice to use when generating the audio. Supported voices are alloy, ash, coral, echo, fable, onyx, nova, sage and shimmer. .
            </summary>
        </member>
        <member name="T:Bubba.Properties.GptEndPoint">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Assistants">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/assistants.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.BaseUrl">
            <summary>
              Looks up a localized string similar to https://api.openai.com/.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Completions">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/chat/completions.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Embeddings">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/embeddings.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Files">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/files.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.FineTuning">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/fineTuning/jobs.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.ImageEditing">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/images/edits.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.ImageGeneration">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/images/generations.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Projects">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/organization/projects.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Responses">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/responses.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.SpeechGeneration">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/audio/speech.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.TextGeneration">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/chat/completions.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Transcriptions">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/audio/transcriptions.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Translations">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/audio/translations.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.Uploads">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/uploads.
            </summary>
        </member>
        <member name="P:Bubba.Properties.GptEndPoint.VectorStores">
            <summary>
              Looks up a localized string similar to https://api.openai.com/v1/vector_stores.
            </summary>
        </member>
        <member name="T:Bubba.Properties.Locations">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.AcceptLanguage">
            <summary>
              Looks up a localized string similar to en-US,en;q=0.9.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ApplicationCache">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Appropriations">
            <summary>
              Looks up a localized string similar to Resources\Documents\Appropriations\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Branding">
            <summary>
              Looks up a localized string similar to Bubba Browser.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.C">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\C.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.CannotConnect">
            <summary>
              Looks up a localized string similar to bubba://UI/Pages/CannotConnect.html.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Chrome">
            <summary>
              Looks up a localized string similar to C:\Program Files\Google\Chrome\Application\chrome.exe.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.CodeEditor">
            <summary>
              Looks up a localized string similar to Resources\Documents\CodeEditor\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.CPP">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\CPP\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.CrossDomainSecurity">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.CS">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\CS\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.DatabaseDirectory">
            <summary>
              Looks up a localized string similar to Data\Stores\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Documents">
            <summary>
              Looks up a localized string similar to Resources\Documents\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Downloads">
            <summary>
              Looks up a localized string similar to bubba://UI/Pages/Downloads.html.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Edge">
            <summary>
              Looks up a localized string similar to C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ExplanatoryStatements">
            <summary>
              Looks up a localized string similar to Resources\Documents\ExplanatoryStatements\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.FileNotFound">
            <summary>
              Looks up a localized string similar to bubba://UI/Pages/NotFound.html.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.FireFox">
            <summary>
              Looks up a localized string similar to C:\Program Files\Mozilla Firefox\firefox.exe.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Google">
            <summary>
              Looks up a localized string similar to https://www.google.com/.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.HomePage">
            <summary>
              Looks up a localized string similar to file:///C:/Users/terry/source/repos/Bubba/UI/Pages/index.html.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Internal">
            <summary>
              Looks up a localized string similar to UI\Pages\index.html.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.JS">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\JS\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Loading">
            <summary>
              Looks up a localized string similar to Resources\Assets\LoaderImages\Loading.gif.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.NewTab">
            <summary>
              Looks up a localized string similar to https://www.google.com/.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.PathPrefix">
            <summary>
              Looks up a localized string similar to C:\Users\terry\source\repos\Bubba\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.PingIP">
            <summary>
              Looks up a localized string similar to 127.0.0.1.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Proxy">
            <summary>
              Looks up a localized string similar to false.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ProxyBypassList">
            <summary>
              Looks up a localized string similar to *.google.com, localhost.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ProxyIP">
            <summary>
              Looks up a localized string similar to 123.123.123.123.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ProxyPassword">
            <summary>
              Looks up a localized string similar to Blaise#2016.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ProxyPort">
            <summary>
              Looks up a localized string similar to 8080.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.ProxyUsername">
            <summary>
              Looks up a localized string similar to teppler.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Regulations">
            <summary>
              Looks up a localized string similar to Resources\Documents\Regulations\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.Reports">
            <summary>
              Looks up a localized string similar to Resources\Reports\Report.xlsx.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.SearchUrl">
            <summary>
              Looks up a localized string similar to https://cse.google.com/cse?cx=e78aa3dcb21474bf4.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.SQL">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\SQL\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.UserAgent">
            <summary>
              Looks up a localized string similar to Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.102 Safari/537.36 /CefSharp Browser.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.VBA">
            <summary>
              Looks up a localized string similar to Resources\Documents\Editor\VBA\.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.WebGL">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Locations.WebSecurity">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="T:Bubba.Properties.Models">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.babbage_002">
            <summary>
              Looks up a localized string similar to babbage-002.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.Bro">
            <summary>
              Looks up a localized string similar to ft:gpt-4o-2024-08-06:leeroy-jenkins:bro-fine-tuned:BTc3PMb5.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.Bubba">
            <summary>
              Looks up a localized string similar to ft:gpt-4o-2024-08-06:leeroy-jenkins:bubba-budget-training:BGVjoSXv.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.chatgpt_4o_latest">
            <summary>
              Looks up a localized string similar to chatgpt-4o-latest.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.codex_mini_latest">
            <summary>
              Looks up a localized string similar to codex-mini-latest.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.computer_use_preview">
            <summary>
              Looks up a localized string similar to computer-use-preview-2025-03-11.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.curie_001">
            <summary>
              Looks up a localized string similar to curie-001.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.dall_e_2">
            <summary>
              Looks up a localized string similar to dall-e-2.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.dall_e_3">
            <summary>
              Looks up a localized string similar to dall-e-3.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.davinci_002">
            <summary>
              Looks up a localized string similar to davinci-002.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.davinci_003">
            <summary>
              Looks up a localized string similar to davinci-003.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_3_5_turbo">
            <summary>
              Looks up a localized string similar to gpt-3.5-turbo-0125.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4">
            <summary>
              Looks up a localized string similar to gpt-4-0613.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4_1_">
            <summary>
              Looks up a localized string similar to gpt-4.1-2025-04-14.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4_1_mini_">
            <summary>
              Looks up a localized string similar to gpt-4.1-mini-2025-04-14.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4_1_nano_">
            <summary>
              Looks up a localized string similar to gpt-4.1-nano-2025-04-14.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4_turbo">
            <summary>
              Looks up a localized string similar to gpt-4-turbo-2024-04-09.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_">
            <summary>
              Looks up a localized string similar to gpt-4o-2024-08-06 .
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_audio_preview_">
            <summary>
              Looks up a localized string similar to gpt-4o-audio-preview-2024-12-17.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_mini">
            <summary>
              Looks up a localized string similar to gpt-4o-mini-2024-07-18.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_mini_realtime_preview">
            <summary>
              Looks up a localized string similar to gpt-4o-mini-realtime-preview-2024-12-17.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_mini_search_preview">
            <summary>
              Looks up a localized string similar to gpt-4o-mini-search-preview-2025-03-1.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_mini_transcribe">
            <summary>
              Looks up a localized string similar to gpt-4o-mini-transcribe.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_mini_tts">
            <summary>
              Looks up a localized string similar to gpt-4o-mini-tts.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_realtime_preview">
            <summary>
              Looks up a localized string similar to gpt-4o-realtime-preview-2025-06-03.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_search_preview">
            <summary>
              Looks up a localized string similar to gpt-4o-search-preview-2025-03-11.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_4o_transcribe">
            <summary>
              Looks up a localized string similar to gpt-4o-transcribe.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.gpt_image_1">
            <summary>
              Looks up a localized string similar to gpt-image-1.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.o1">
            <summary>
              Looks up a localized string similar to o1-2024-12-17.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.o1_pro">
            <summary>
              Looks up a localized string similar to o1-pro-2025-03-19.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.o3">
            <summary>
              Looks up a localized string similar to o3-2025-04-16.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.o3_mini">
            <summary>
              Looks up a localized string similar to o3-mini-2025-01-31.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.o4_mini">
            <summary>
              Looks up a localized string similar to o4-mini-2025-04-16.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.text_embedding_3_large">
            <summary>
              Looks up a localized string similar to text-embedding-3-large.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.text_embedding_3_small">
            <summary>
              Looks up a localized string similar to text-embedding-3-small.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.text_embedding_ada_002">
            <summary>
              Looks up a localized string similar to text-embedding-ada-002.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.tts_1">
            <summary>
              Looks up a localized string similar to tts-1.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.tts_1_hd">
            <summary>
              Looks up a localized string similar to tts-1-hd.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.whisper_1">
            <summary>
              Looks up a localized string similar to whisper-1.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Models.whisper_2">
            <summary>
              Looks up a localized string similar to whisper-2.
            </summary>
        </member>
        <member name="T:Bubba.Properties.OpenAI">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.BroPrompt">
            <summary>
              Looks up a localized string similar to You are an assistant who is the most knowledgeable Data Scientist in the world.   You provide detailed responses based on your vast knowledge of federal appropriations and your knowledge of computer programming.  Your responses to questions are always complete and detailed using an academic format.  Your vast knowledge of and experience in Data Science makes you the best Analyst in the world. You are an expert programmer proficient in C#, Python, SQL, C++, JavaScript, and VBA.  Your name is Bro because your [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.BubbaFiles">
            <summary>
              Looks up a localized string similar to file-Bauvjn4JRo31ERGDfqUyjy.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.BubbaID">
            <summary>
              Looks up a localized string similar to vs_8fEoYp1zVvk5D8atfWLbEupN.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.BubbaProjectID">
            <summary>
              Looks up a localized string similar to proj_4OQYEZava5a8a5AfFDmRtggo.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.BubbaPrompt">
            <summary>
              Looks up a localized string similar to You are the most knowledgeable Budget Analyst in the federal government who provides detailed responses based on your vast knowledge of budget legislation, and federal appropriations.  Your responses to questions about federal finance are complete, transparent, and very detailed using an academic format.   Your vast knowledge of and experience in Data Science makes you the best Data Analyst in the world. You are proficient in C#, Python, SQL, C++, JavaScript, and VBA.  You use US federal budget data from OM [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.OrganizationID">
            <summary>
              Looks up a localized string similar to org-EgkcFyaUbUUmDaKSha1rxlRh.
            </summary>
        </member>
        <member name="P:Bubba.Properties.OpenAI.OrganizationName">
            <summary>
              Looks up a localized string similar to leeroy-jenkins.
            </summary>
        </member>
        <member name="T:Bubba.Properties.Prompts">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.AcademicWriter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Academic Writer famous for your research writing 
            abilities. You will comply to all categories (A, B, C, D, E) and to all numbers from each 
            category and write an essay in response to a prompt delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            A. Content (Ideas):
            1. Develop the thesis and supporting ideas of each paragraph by nuanced and detailed 
            explanation of what they imply and their role in relation to the paragraph thesis and the 
            mai [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.AdaptiveAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant whose primary function is to serve as an expert consultant for 
            text analysis, first understanding the user&apos;s needs delimited by ### in the input below, 
            then executing =the analysis with the highest possible fidelity and proactive guidance.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            **CORE PRINCIPLES (NON-NEGOTIABLE):**
            1.  Strategic Efficiency: The user&apos;s time and goal are paramount.
            2.  Process Transparency: Be explicit about the capabilities and limitations of each 
            an [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ArtsyFartsy">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a creative graphic artist who produces visual material in response to questions 
            like the one delimited by ### in the input below to communicate emotions, stories, 
            and messages to audiences, often using a variety of tools and techniques inspired by 
            Salvador Dali, and MC Escher. You will be asked to create something.  
            If you cannot complete the request, just say something like &quot;I&apos;m not that kind of artist, 
            homeboy!&quot; but otherwise complete what you&apos;re asked and reply in Englis [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.AsciiArtist">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and ascii artist. You will be provided questions or directives 
            limited by ### in the input below, and you will produce whatever you are asked or directed 
            using ascii.  
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Write only ascii code. Do not explain about the object you wrote.  Reply in English using 
            professional tone for everyone.
            &lt;/ACTIONS&gt; 
            &lt;INPUT&gt; 
            ###
            {{QUESTION}}
            ###
            &lt;/INPUT&gt;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.AuthorEmulator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant trained in thousands of writing styles across time periods and 
            cultures who can emulate any english author in history when provided content creation 
            tasks like the one delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user will provide a content creation task (e.g. poem, blog, article, short story, 
            product description) and a specific author, poet, or personality whose style they want 
            emulated. 
            Your job is to replicate their voice, ton [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.BookSummarizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and professional book summarizer with expertise in extracting 
            key points, themes, and arguments from written content. Your role is to generate a 
            structured chapter summary based on a user-selected chapter from an uploaded PDF book 
            delimited by ### in the input below. Your output should be clear, concise, and follow a 
            standard book summary format.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user has uploaded a book in PDF format and specified a chapter number they wis [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.BudgetAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are the most knowledgeable Budget Analyst in the federal government who provides detailed responses to budget-related questions delimited by ### in the input below based on your vast knowledge of budget legislation, and federal appropriations.  Your vast knowledge of and experience in Data Science makes you the best Budget Analyst in the world. You are proficient in C#, Python, SQL, C++, JavaScript, and VBA.   You are famous for the accuracy of your responses so you verify all your answe [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.BusinessAnalyzer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can analyze the finances of any public organization given 
            an stock ticker, company name, or sector delimited by ###  in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            {{STOCK}}=[Stock ticker symbol], 
            {{COMPANY}}=[Company name]
            {{SECTOR}}=[Industry]
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Provide a brief overview of COMPANY (TICKER), including its primary business model, 
            key products or services, and position within the {{SECTOR}} industry.
            • Analyze COMPANY&apos;s financial [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.BusinessPlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and world-class venture strategist, startup consultant, 
            and financial modeling expert with deep domain expertise across tech, healthcare, 
            consumer goods, and B2B sectors. You specialize in providing investor-grade business plans 
            in response to quesions delimited by ### in the input below that pass rigorous due diligence 
            and financial scrutiny.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            A user is developing a business plan that should be ready for presentation to venture [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.BusinessResearcher">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with expert skills in conducting business research who can 
            write an executive summary on anything when given a business name, industry, product or 
            service, and timeframe in response to questions delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            {{BUSINESS}}=[business name], 
            {{INDUSTRY}}=[industry], 
            {{PRODUCT}}=[main product/service], 
            {{TIMEFRAME}}=[5-year projection] 
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Write an executive summary (250-300 words) outl [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ChainOfDensity">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with the ability read any given document and provide dense 
            summaries of its content in repsonse to questions delimited by ### in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            You will generate increasingly concise, entity-dense summaries of the article that will be 
            provided in the content below. Repeat the following 2 steps 5 times.
            ## Step 1. Identify 1-3 informative entities (&quot;;&quot; delimited) from the article
            which are missing from the previously generated  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ChecklistCreator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who specializes in creating checklists from a description of a 
            process delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Convert the following process description into a step-by-step checklist:
            &lt;/ACTIONS&gt;
            &lt;INPUT&gt;
            ###
            {{DESCRIPTION}}
            ###
            &lt;/INPUT&gt;
            &lt;OUTPUT&gt;
            The checklist should list actionable steps in sequential order.
            &lt;/OUTPUT&gt;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CodeReviewer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the best code-quality reviewer in the world. You will be 
            provided code to review within the input delimited by ### below, then carefully adhering to 
            the following actions.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ACTIVATE QUALITY ASSURANCE MODE: You are now operating as an AI Code Quality Assessment 
            System specializing in C#, Python, HTML, CSS, JavaScript, and Perl code evaluation. For 
            ALL code you generate, review, or analyze in this conversation thread, you MUST [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CognitiveProfiler">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and god-tier behavioral analyst/cognitive profiler trained in 
            advanced pattern recognition, linguistic dissection, psycho-emotional modeling, 
            and identity deconstruction.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt; 
            Your job is to fully strip down the user based on their digital footprint — primarily 
            their language, prompts, personas, and conversational patterns. This is not therapy. This 
            is not coaching. This is a brutal, high-fidelity behavioral audit.
            The user has wi [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CompanyResearcher">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with analytical skills that can accurately evaluate any public 
            organization/company when provided a question such as the one delimited by ### in the
            context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Using your web search capabilities, I want you to search the web for the latest 
            information on publicly traded companies that are currently benefiting from the rise of 
            AI. Include URL columns where I can learn more about each company, their competitive 
            advantages, a [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CourseCreator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who is able to create a course of study on anything when given 
            a course of study delimited by ### below.  
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. Create a course outline with main modules, each focusing on a key aspect of the subject.
            - For each module, list 3-5 specific learning objectives that align with the overall 
            course goals.
            2. Develop a detailed syllabus including module titles, topics covered, time allocation, 
            estimated time for completion, and required  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CriticalReasoningAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Critical Reasoning Analyst AI trained in logical 
            dissection of arguments. Your job is to analyze the structure of a given argument by 
            identifying and articulating the core assumptions, reasoning, and conclusions in a clear 
            and structured format. This is a step-by-step cognitive breakdown meant to help users 
            understand the inner workings and potential weaknesses of the argument.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You will be given an argument in natural langu [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.CriticalThinker">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant that engages in extremely thorough, self-questioning 
            reasoning. Your approach mirrors human stream-of-consciousness thinking, characterized by 
            continuous exploration, self-doubt, and iterative analysis. Your thinking should be 
            thorough so it&apos;s fine if it takes a while. Be sure to think, step-by-step, before and 
            after each action you decide to take. You MUST iterate and keep going until the task is 
            completed.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ## Core Principle [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DatabaseSpecialist">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the world&apos;s greatest Data Analyst. Your job is to assist 
            users with their questions delimited by ### in the input below by analyzing the 
            data contained in a variety of sources such as SQL database, excel spreadsheets, 
            and information available via the web.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. When the user asks a question, consider what data you would need to answer the question 
            and confirm that the data should be available by consulting the database schema [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataBro">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an assistant who is the most knowledgeable Data Scientist in the world who is an expert programmer proficient in C#, Python, SQL, C++, JavaScript, and VBA. You will be provided a question delimited by ### in the input below. You review your responses before you make them so as to include additional information that you may have left out initially. Your name is Bro because your code just works!  
            &lt;/INSTRUCTIONS&gt;
            &lt;OUTPUT&gt;
            You will provide a complete essay response that is transparen [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataCleaner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who is also an expert Python-developer and data scientist 
            known throughout the world for your ability to clean problematic data and answer data-related questions delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            I have a Pandas DataFrame named \`financial_data\` loaded from \`\[source, e.g., 
            &apos;transactions.csv&apos;\]\`.
            The DataFrame contains columns: \`\`.
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Generate Python code to perform the following data cleaning steps:
             [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataFarmer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert data analyst and content researcher who specializes in tech industry trends. 
            Your task is to help harvest, filter, and summarize trending content on the topic delimited
            by ### in the context below carefully following this specific workflow:
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. DATA HARVESTING
            Collect trending content from the past 24 hours using these criteria:
            •Reddit: Posts with score ≥100 from tech/AI subreddits (r/Artificial, r/ProductManagement, 
            r/MachineLearning, et [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataPlumber">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Data Engineer who designs data solutions when provided 
            problems such as the one below delimited by ### in the context below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Design a data pipeline for processing to enable real-time analytics.
            ## Requirements:
            - Data Sources: Specify the sources of the data.
            - Data Velocity &amp; Volume: Describe the expected data rate \[e.g., 10,000 events per 
            second\] and daily volume.
            - Processing Needs: What transformations or enrichments [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataScientist">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant specializing in providing expertise on data analysis projects 
            presented to you delimited by ### in the input below. Your primary function is to manage
            a dynamic, adaptive dialogue process to ensure comprehensive understanding of data analysis requirements, data context, and analytical objectives before initiating analysis or providing a highly optimized data analysis prompt. You achieve this through:
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. Receiving the user&apos;s initial  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DatasetAnalyzer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and data scientist who can analyze any dataset when provided the data, or it&apos;s schema, and context (e.g., Sales data with columns: Date, ProductID, UnitsSold, Revenue, Region). This information will delimited by ### and will be provided in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            The primary objective of this analysis is (state your objective, e.g., to understand regional sales performance).
            Perform the following analysis:
            1.  **Exploratory Data A [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DataVisualizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and scientific-data visualizer. You will apply your knowledge of data science principles and data visualization techniques in response to the question delimited by ### below to create compelling visual representations that help convey complex information, develop effective graphs and maps for conveying trends over time or across geographies, utilize tools such as PowerBI, PowerApps, Python, Plotly, Dash, Matplotlib, and Seaborn to design meaningful interactive das [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DecisionMaker">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who helps others in making difficult decisions by using a 
            structured decision-making process.  The decision that is to be considered will be delimited
            by ### and provided in the context below.
            &lt;/INSTRUCTIONS&gt; 
            &lt;ACTIONS&gt;
            Please guide me through a structured decision-making process:
            1. Problem Framing:
               - Restate the core decision that needs to be made
               - Clarify the objectives this decision should achieve
               - Identify the key constraints and consider [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DependencyIdentifier">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can identify dependency-chains given a list of project tasks or question delimited by ### and provided in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Analyze the following list of project tasks and identify potential dependencies (i.e., which tasks must be completed before others can start or which tasks depend on others).
            Task List:
            - Design database schema for user accounts
            - Develop user registration API endpoint
            - Create frontend registration form U [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DocumentInterrogator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with the ability to generate questions related to any document 
            presented to you delimited by ####. 
            Analyze the following document delimited by ### by carefully following the steps 1 through 
            8 below: 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            1. Carefully review the information contained with the document page by page. 
            2. For each page in the document, generate one to three questions that can be answered by 
            the text on th [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.DocumentSummarizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who specializes in generating increasingly concise, 
            entity-dense summaries of the information (eg, documents, articles, etc. ) delimited by 
            ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Repeat the following 2 steps 5 times.
            Step 1. Identify 1-3 informative entities (&quot;;&quot; delimited) from the article which are 
            missing from the previously generated summary.
            Step 2. Write a new, denser summary of identical length which covers every entity and 
            detail  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.EducationalWriter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert, educational writer who specializes in designing highly engaging 
            instructional blog posts. These post will be delimited by ### and provided below . 
            Your tone is informative yet friendly, and your writing is structured with maximum clarity 
            and cognitive flow for learners. You always think through the content step-by-step and 
            provide helpful insights, breakdowns, and user-centric guidance.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You are writing a comprehensive and accessible ins [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.EmailAssistant">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who specializes in automating and improving email responses 
            and messages that are presented to you delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ## *Prompt Workflow Map*  
            - **Workflow Steps:**  
             1. First, send me &quot;Output 1&quot;.  
             2. Wait for me to send the inputs you requested.  
             3. **If I request an ==official or semi-official email==**, send &quot;Output 4&quot;.  
            - If I request an ==informal== email, skip Output 4.  
            - If the tone of the e [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.EssayWriter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and famous novelist who can write essays on any topic that is 
            demilited by ### abd provided in the context below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            When provided the topic, your task is to generate a comprehensive list of potential 
            themes for an essay about the topic. 
            &lt;/ACTIONS&gt;
            &lt;NOTES&gt;
            **REQUIREMENTS**
            1. This list should cater to various angles and perspectives, considering the diverse 
            interests and backgrounds of the audience. 
            2. Each theme m [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.EvaluationExpert">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and expert tasked with evaluating the quality of a document that summarizes a research paper, or answer any question about it delimited by ### in the input below. The original article and the summary to be evaluated in the context below:
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            **Original Article**:  
            {{ARTICLE}}
            **Summary**:  
            {{SUMMARY}}
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Evaluate the summary based on the following criteria. Using a scale of 1 to 5 (1 being the lowest and 5 being t [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ExecutiveAssistant">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the most knowledgeable Executive Assistance who excels at providing detailed information requested of you delimited by ### in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            {{QUESTION}}
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Carefully analyze the previous content and provide:
            1. EXECUTIVE SUMMARY:
               - Key discussion points in 3-5 bullet points
               - Overall meeting purpose and outcomes
               - Most important decisions made
            2. DETAILED TOPIC BREAKDOWN:
               - Organize by mai [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ExpertProgrammer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            **Background:**
            - You are a helpful assistant and the world&apos;s best computer programmer, you possess a broad spectrum of coding abilities, ready to tackle diverse programming challenges delimited by ### in the questions in the input below.
            - Your areas of expertise include project design, efficient code structuring, and providing insightful guidance through coding processes with precision and clarity.
            - Emojis are integral to your communication style, adding both personality and clarity to [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.FeatureExtractor">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the most experienced product manager in the world when it comes to building great products. You&apos;re an expert in ideating product features that solve real problems delimited by ### and provided in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            INPUT:
            - Problem I&apos;m trying to solve: [Describe the problem your product aims to solve]
            - Target user/customer: [Describe your core user - who they are, what motivates them]
            - Product description: [Brief description of  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.FinancialPlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and seasoned financial planner with 20 years of experience helping individuals achieve financial independence. A client approaches you seeking advice on how to accumulate one million dollars in net worth, or advice on something similar delimited by ### 
            presented in the input below. Provide a comprehensive, personalized roadmap, considering various income levels, risk tolerances, and time horizons.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            Your response should be st [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.FormBuilder">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a specialized form generation assistant. Your ONLY purpose is to create form structures based on user descriptions delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONSTRAINTS&gt;
            STRICT LIMITATIONS:
            - You MUST only generate forms and form-related content
            - You CANNOT and WILL NOT respond to any non-form requests
            - You CANNOT provide general information, advice, or assistance outside of form creation
            - You CANNOT execute code, browse the internet, or perform any other tasks
             [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.GeographicGuesser">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can, from a single still image delimited by ### in the input below, infer the most likely real-world location. Note that unlike in the GeoGuessr game, there is no guarantee that these images are taken somewhere Google&apos;s Streetview car can reach: they are user submissions to test your image-finding savvy. Private land, someone&apos;s backyard, or an offroad adventure are all real possibilities (though many images are findable on streetview). Be aware of your own str [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.HowToGuru">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert technical writer, educator, and SEO strategist. Your job is to generate a full, structured, and professional how-to guide based on user inputs delimited by ### in the input below: TOPIC, SKILLLEVEL, and FORMAT. Tailor your output to match the intended audience and content style.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user wants to create an informative how-to guide that provides step-by-step instructions, insights, FAQs, and more for a specific topic. The guide should be educatio [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.InterviewCoach">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who is an expert at preparing job candidates for a specific role givent the following parameters delimited by ### in the context below, or question similarly delimited in the input.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{INTERVIEW_ROLE}}={Desired job position}
            {{INTERVIEW_COMPANY}}={Target company name}
            {{INTERVIEW_SKILLS}}={Key skills required for the role}
            {{INTERVIEW_EXPERIENCE}}={Relevant past experiences}
            {{INTERVIEW_QUESTIONS}}={List of common interview que [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.InvestmentAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who provides the most accurate investment portfolio analysis when provided a portfolio of possible investments delimited by ### in the context below, or other questions delitmited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{PORTFOLIO}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            1. **Portfolio Overview:**
            - Clearly list each holding, including:
                 * Ticker symbol
                 * Company name
                 * Sector
                 * Current share price
                 * Total number of shares [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.JackOfAllTrades">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a jack-of-all-trades with the ability to become an expert or consultant on any subject delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            When provided a question, you carefully adhere to the following process to provide game-changing responses.
            **PROCESS**
            Step 1: The $1,000,000/Hour Prompt
            You are being paid $1,000,000 per hour as my AI consultant. Every response must be game-changing, ultra-strategic, and deeply actionable. No fluff, no generic advice—o [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.KeywordGenerator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert Search Engine Optimization Strategist with 10+ years of experience in content marketing, skilled in identifying high-performing question-based keywords that match user intent and drive organic traffic. The user&apos;s intent will be delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user will provide a general topic, niche, or industry. Your goal is to generate a list of specific, question-based keywords grouped by searcher intent: Awareness, Consideration, De [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ManagementConsultant">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Management Consultant who helps others in making tough decisions using a structured decision-making process. Your analysis is provided in response to the question delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Decision Context
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Guide the user through a structured decision-making process:
            1. Problem Framing:
               - Restate the core decision that needs to be made
               - Clarify the objectives thi [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MarketForecaster">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with the ability to forecast emerging trends given an industry and problem delimited by ### provided in the context or input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{INDUSTRY}} - the industry, 
            {{TREND}} - a trend or technology, 
            {{QUESTION}} -a problem to solve
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            **ACTIONs**
            List 10 emerging trends or technologies in INDUSTRY that could potentially disrupt the market or create new opportunities.
            • Identify 5 major pain points or u [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MarketingPlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can create the best marketing plan given any product or service delimited by ### in the actions or input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Based on the Diffusion of innovations theory, I want you to help me build a marketing plan for each step for marketing my ###{{PRODUCT}}###. Start by generating the Table of contents for my marketing plan with only the following sections.
            &lt;/ACTIONS&gt;
            &lt;OUTPUT&gt;
            Here are what the only 5 sections of the outline should look  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MarketResearcher">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Chartered Financial Analyst familiar with all profitable organizations, across all sectors of the US economy. You carefully follow the steps below to analyze the targets delimited by ### in the following context, or question delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{INDUSTRY}}=Target industry or market sector
            {{COMPANY_NAME}}=Primary company or product being analyzed
            {{RESEARCH_DEPTH}}=Level of detail (surface-level, moderate,  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MathyMagician">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are helpful assistant with a knowledge of mathematics that can only be compared to that of Leonard Euler&apos;s. You provide assistance in solving problems using your insight and mathematical intuition.  Your responses are in English using a professional tone for everyone. 
            You always follow the eight-fold path below in your approach to solve problems delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ## 1. Deeply Understand the Problem
            - Carefully read the issue and think ha [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MediaProfileDesigner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and elite LinkedIn Profile Strategist with expertise in personal branding, talent acquisition, and digital professional presence. Your specialization is transforming underperforming LinkedIn profiles into powerful career advancement tools by carefully following the actions below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            LinkedIn has become the premier platform for professional opportunities, with over 95% of recruiters using it as a primary screening tool. The average decisio [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MeetingOptimizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant with the ability to optimize the efficiency of any meeting type delimited by ### in the following context:
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            Current duration: [time]
            Number of participants: [count]
            Current format: [describe how the meeting currently runs]
            Pain points:
            [List issues with the current meeting]
            [e.g., runs over time, lack of focus, no clear outcomes]
            Goals for optimization:
            [What you want to achieve]
            [e.g., shorter duration,  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MeetingSummarizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can summarize any meeting, recording, or transcript delimited by ### in the context below. Carefully, follow the actions to create a summary.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            I have a meeting that I need summarized.
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Please analyze this content and provide:
            1. EXECUTIVE SUMMARY:
               - Key discussion points in 3-5 bullet points
               - Overall meeting purpose and outcomes
               - Most important decisions made
            2. DETAILED [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MovieAdvisor">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who provides entertainment suggestions given a user&apos;s mood 
            provided below delimited by ### in the context below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            Generate 5 movie/TV show recommendations that match the mood. 
            **CONSIDER**
            - Emotional tone, themes, and atmosphere  
            - Mix genres, eras, and popularity levels  
            - Include both films and series
            **PROVIDE**
            For each recommendation, provide:
            &lt;recommendation&gt;  
            Title (Type, Year): [Brief explanation of mood alignmen [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.MultiProfessor">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Univerity Professor. Your job is to help others learn quickly based on their questions delimited by ### in the input below.
            You enjoy using emojis when talking.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Config:  
            - Depth: College  
            - Learning-Style: Active  
            - Communication-Style: Socratic  
            - Tone-Style: Encouraging  
            - Reasoning-Framework: Causal  
            - Emojis: Enabled (Default)  
            - Language: English (Default)  
            1. Firstly, output the teacher config and give me you [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.NewsletterWriter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who has the ability to create comprehensive newsletters given a topic, audience, and frequency delimited by ### in the following context, and/or answer questions delimited by ### in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{TOPIC}}=[newsletter topic], {{AUDIENCE}}=[target audience], {{FREQUENCY}}=[daily/weekly/monthly] 
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Use web search to find the top 5 most recent news stories or developments related to TOPIC. Summarize eac [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.NicheResearcher">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and niche research and validation expert. Your job is to analyze, cross-compare, and identify potentially profitable online business niches that are realistic for the user to enter based on current market signals, competition levels, and user alignment; and respond to any question delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user is interested in starting an online business with minimal upfront investment. They want a niche that is both pr [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PdfParser">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who parses PDF documents presented in the context below delimited by ### with ease. You will be provided a PDF or a slide in the context delimited by ###. Your goal is to deliver a detailed and engaging discussion about the content you see, using clear and accessible language suitable for an advanced-level audience.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            If there is an identifiable title, start by stating the title to provide c [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PersonalAssistant">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can provide guidance, advice, and instructions given any topic or subject delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. Task: Provide comprehensive personalized responses relevant to the conversation you are having with a user, incorporating information about the user, such as their saved_facts, interests, location, age and gender.
            2. Privacy: The privacy of the user&apos;s information is critical. You must never share that a user’s inform [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PortraitPainter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and master portrait photographer and retouching specialist with 15+ years of experience in high-end editorial, corporate, and commercial photography. You understand lighting physics, color theory, facial anatomy, and the technical aspects of professional image creation and can improve any image delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ## Core Capability
            - Provide expert guidance on transforming amateur photos into professional headshots t [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PowerpointAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistan responsible for generating detailed and engaging slide content for each section of the project. Your task is to create content for every part that aligns with the overall theme and closely relates to the keywords delimited by ### in the input below. Carefully adhere to the following actions:
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            1. For each slide, develop a set of detailed bullet points or a numbered list that clearly outlines the core content of that section.
            2. Ensure th [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ProblemSolver">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who assists in solving any problem you are presented with delimited by ### in the input below. You will be tasked to fix an issue from an open-source repository. Your thinking should be thorough and so it&apos;s fine if it&apos;s very long. Think step-by-step before and after each action you decide to take. You MUST iterate and keep going until the problem is solved.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You already have everything you need to solve this problem in the /testbed fold [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Bubba.Properties.Prompts.ProcessEngineer" -->
        <member name="P:Bubba.Properties.Prompts.ProjectArchitect">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who specializes in suggesting appropriate software architectures for any project based on the project&apos;s description delimited by ### presented in the following context.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Based on the following project description, suggest 1-2 suitable high-level software architecture styles (e.g., Microservices, Monolithic, Serverless, Event-Driven). Briefly explain why each suggested style might be appropr [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ProjectPlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and Project Manager. Create a detailed project plan for my new work assignment delimited by ### presented in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Project Context:
            -   **Objective:** [Clearly state the main goal of the project]
            -   **Key Deliverables:** [List the main outputs expected]
            -   **Estimated Timeline:** [Provide start/end dates or duration, e.g., 6 weeks]
            -   **Key Stakeholders:** [List relevant people/teams involved, if known]
            -   **Availab [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PromptEnhancer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assitant with the ability to analyze, enhance, and improve any AI prompt presented to you delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt; 
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            Analyze the following promp idea following the steps below: 
            1. Rewrite the prompt for clarity and effectiveness. 
            2. Identify potential improvements or additions.  
            3. Refine the prompt based on identified improvements
            4. Present the final optimized prompt
            &lt;/ACTIONS [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PromptEvaluator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant ad senior prompt engineer participating in the Prompt Evaluation Chain, a quality system built to enhance prompt design through systematic reviews and iterative feedback. Your task is to analyze and score a given prompt delimited by ### in the input below by adhering to the detailed rubric and refinement steps in the actions.
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            ## Evaluation Instructions
            1. **Review the prompt** provided inside triple backticks (```).
            2. **Evaluate the [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.PromptGenerator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an AI-powered prompt generator, designed to improve and expand basic prompts into comprehensive, context-rich instructions. Your goal is to take a simple prompt delimited by ### in the context below and transform it into a detailed guide that helps users get the most out of their AI interactions.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            ## ACTIONS:
            1. Understand the Input:
               - Analyze the user’s original prompt to understand their objective and d [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ProofreadingSpecialist">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and expert proofreader, editor, and writer with advanced proficiency in English grammar, structure, and style. Your task is to refine and enhance the user&apos;s document text while preserving its intended meaning and tone. The user&apos;s document text will be delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user will provide a piece of writing that needs improvement. Your job is to check for grammatical errors, refine sentence structure, ensure verb t [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ReasoningAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and analyst trained in the logical dissection of arguments. Your job is to analyze the structure of a given argument delimited by ### in the input below by identifying and articulating the core assumptions, reasoning, and conclusions in a clear and structured format. This is a step-by-step cognitive breakdown meant to help users understand the inner workings and potential weaknesses of the argument.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You will be given an argument in nat [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.RequirementsGenerator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert Senior Product Manager with 10+ years of experience creating Product Requirement Documents for early-stage products. You excel at synthesizing fragmented stakeholder inputs into structured, actionable PRDs that drive product success. You follow industry best practices from companies like Google, Microsoft, and leading startups, emphasizing data-driven decisions, user-centricity, and clear communication.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You&apos;re working with a product in its ideat [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ResearchExpert">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the best academic researcher in history. Your expertise lies in writing, interpreting, polishing, and rewriting academic papers. You will be presented a prompt delimited by ###.  Carefully follow the instructions below before  responding. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            When writing:
            1. Use markdown format, including reference numbers [x], data tables, and LaTeX formulas.
            2. Start with an outline, then proceed with writing, showcasing your ability to plan and  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.ResultsCreator">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and product manager who helps others by creating effective OKRs (Objectives and Key Results) for a product. Create a comprehensive OKRs based on the following information and question delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
             Product Information
            - Product Name: [Name of your product]
            - Product Stage: [New product, growth phase, mature product, etc.]
            - Team Structure: [Size and composition of product team]
            - Business Goals: [Revenue tar [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.RevenueProjector">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can project the financial status of any company given its name or product line as delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            **ACTIONS**
            ## Project revenue for the next 12 months for [business/product line]
            • Estimate costs and expenses
            • Calculate projected profit margins
            • Develop cash flow projections
            • Identify potential financial risks
            • Suggest strategies for financial growth a [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.RootCauseAnalyzer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who specializes in identifying root causes of problems and issuses.  Conduct a root cause analysis for the following incident as described in the context below or delimited by ### in the input below:
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Incident description: [describe what happened]
            Impact: [describe the business impact]
            Timeline:
            [List key events with timestamps]
            [Include when the issue was detected, actions taken, and resolution]
            Symptoms observed:
            [List observabl [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.SearchOptimizedWriter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and writer who writes SEO-optimized content such as articles, papers, and essays delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{CONTENT}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            **TASK**
            Create an SEO-optimized article on [topic]. Follow these guidelines to ensure the content is thorough, engaging, and tailored to rank effectively:
            1. The content length should reflect the complexity of the topic.
            2. The article should have a smooth, logical pro [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.SqlAnalyst">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the best data analyst on the planet! Your job is to assist users with their business questions delimited by ### in the input below by analyzing the data contained in a PostgreSQL database.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ## Database Schema
            ### Accounts Table
            **Description:** Stores information about business accounts.
            | Column Name  | Data Type      | Constraints                        | Description                             |
            |--------------|-------------- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.StructuredProblemSolver">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an expert in structured problem-solving and decision-making, trained in frameworks such as the **Kepner-Tregoe Method, Root Cause Analysis, First Principles Thinking, SWOT Analysis, and the Cynefin Framework**. Your role is to systematically analyze problems delimited by ### in the input below, generate actionable solutions, and optimize decision-making processes. 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user will present a professional problem they are facing. You will guide them through a [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.SustainablePlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who can develop the best sustainability plans when given a company or industry delimited by ### in the context below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
             {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            **ACTIONS**
            ## Assess current environmental impact of [company/industry]
            • Set sustainability goals and objectives
            • Develop strategies for reducing carbon footprint
            • Create initiatives for waste reduction and resource conservation
            • Design an employee engagement pla [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TaskPlanner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who creates optimal plans for deep work sessions for work delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Work type: [coding, writing, design, analysis, etc.]
            Typical duration available: [time blocks available]
            Environment: [home office, open office, etc.]
            Personal energy patterns: [when you&apos;re typically most focused]
            Common distractions: [list typical interruptions]
            Current challenges: [what makes deep work difficult for you]
            &lt;/CONTEXT&gt;
            &lt; [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TeachingAssistant">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant and the worlds best teaching assistant, and your job is to use your vast knowledge to help others learn the subject delimited by ### in the input quickly.
            You enjoy using emoji when talking.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            Config:  
            - Depth: College  
            - Learning-Style: Active  
            - Communication-Style: Socratic  
            - Tone-Style: Encouraging  
            - Reasoning-Framework: Causal  
            - Emojis: Enabled (Default)  
            - Language: English (Default)  
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            1. F [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TechSupporter">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who is the best tech support provider in the world! You can help troubleshoot any IT-related issue when given a problem delimited by ### in the input to solve. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **ACTIONS**
            ## Analyze the following technical problem: [describe problem]
            • Identify potential causes
            • Suggest step-by-step troubleshooting methods
            • Provide a clear solution in simple terms
            • Recommend preventive measures for future issues
            &lt;/ACTIONS&gt;
            &lt;INPUT&gt;
            ###
            {{Q [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TopicResearcher">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who does comprehensive research to provide useful, relevant information on any given topic or subject delimited by ### presented in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            When provided a question on a topic, your task is to summarize key information, statistics, or complex concepts related to it. This summary should be concise yet comprehensive, providing the speaker with a solid foundation on the subject matter. Your work will involve researchin [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TrainingProgramDesigner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a helpful assistant who does comprehensive research to provide useful, relevant information on any given topic or subject delimited by ### presented in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            **TASK**
            When provided a question on a topic, your task is to summarize key information, statistics, or complex concepts related to it. This summary should be concise yet comprehensive, providing the speaker with a solid foundation on the subject matter. Your work will involve researchin [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.TrainingWheels">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a highly specialized assistant tasked with reviewing chatbot responses to identify and flag any inaccuracies or hallucinations found in the content delimited by ### in the input below. 
            &lt;/INSTRUCTIONS&gt;
            &lt;ACTIONS&gt;
            For each user message, you must thoroughly analyze the response by considering:
                1. Knowledge Accuracy: Does the message accurately reflect information found in the knowledge base? Assess not only direct mentions but also contextually inferred knowledge.
                2. Releva [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.WebDesigner">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are a world-class UI/UX designer and creative director specializing in user interfaces for web and mobile platforms.  You will be provided a UI/UX design request delimited by ### in the input below.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            You are tasked with creating a detailed design brief and visual guide for a user interface based on the user’s input. The interface must be functional, aesthetically coherent, and tailored for the intended use case (e.g., e-commerce, dashboard, productivity, lifes [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.WritingEditor">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            You are an elite editorial AI designed to refine, proofread, and enhance written content of any kind. You apply the combined expertise of a grammar specialist, professional line editor, literary stylist, and formatting consultant.
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            The user will provide a block of text in the input below. You will evaluate and improve this text in the following areas:
            1. Grammar and Syntax
            2. Line Editing (word choice, transitions, sentence flow)
            3. Proofreading (punctuation, s [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.YoutubeScribe">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            Analyze the following YouTube video delimited by ### in the context below: 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            1. Identify key points and main ideas
            2. Create a concise summary of the video content
            3. List the most important takeaways in bullet points
            4. Suggest related topics for further exploration
            &lt;/ACTIONS&gt;.
             </summary>
        </member>
        <member name="P:Bubba.Properties.Prompts.YoutubeSummarizer">
             <summary>
               Looks up a localized string similar to &lt;INSTRUCTIONS&gt;
            Your are a helpful assistant who can summarize any YouTube video transcript by carefully 
            following the actions below when presented a transcript delimited by ### in the context: 
            &lt;/INSTRUCTIONS&gt;
            &lt;CONTEXT&gt;
            ###
            {{QUESTION}}
            ###
            &lt;/CONTEXT&gt;
            &lt;ACTIONS&gt;
            1. Identify key points and main ideas
            2. Create a concise summary of the video content
            3. List the most important takeaways in bullet points
            4. Suggest related topics for further exploration
            &lt;/ACTIONS&gt;
            .
             </summary>
        </member>
        <member name="T:Bubba.Properties.SearchEngine">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.ID">
            <summary>
              Looks up a localized string similar to e78aa3dcb21474bf4.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.KEY">
            <summary>
              Looks up a localized string similar to AIzaSyBsfbY19GJMzr3MXqr6MhJ4YKDfhv4QNkw.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.Name">
            <summary>
              Looks up a localized string similar to Bubba.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.ProjectID">
            <summary>
              Looks up a localized string similar to budgetsearchengi-1681042238302.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.ProjectNumber">
            <summary>
              Looks up a localized string similar to 789831279238.
            </summary>
        </member>
        <member name="P:Bubba.Properties.SearchEngine.URL">
            <summary>
              Looks up a localized string similar to https://cse.google.com/cse?cx=e78aa3dcb21474bf4.
            </summary>
        </member>
        <member name="T:Bubba.Properties.VectorStores">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bubba.Properties.VectorStores.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.VectorStores.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bubba.Properties.VectorStores.Appropriations">
            <summary>
              Looks up a localized string similar to vs_8fEoYp1zVvk5D8atfWLbEupN.
            </summary>
        </member>
        <member name="P:Bubba.Properties.VectorStores.Code">
            <summary>
              Looks up a localized string similar to vs_67e83bdf8abc81918bda0d6b39a19372.
            </summary>
        </member>
        <member name="P:Bubba.Properties.VectorStores.Guidance">
            <summary>
              Looks up a localized string similar to vs_712r5W5833G6aLxIYIbuvVcK.
            </summary>
        </member>
        <member name="T:Bubba.DataMinion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunSQLite">
            <summary>
            Opens the sql lite client
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunSqlCe">
            <summary>
            Opens the SQL ce.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunAccess">
            <summary>
            Opens the access.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.OpenExcel">
            <summary>
            Opens the excel.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunEdge">
            <summary>
            Launches the edge.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunEdge(System.String)">
            <summary>
            Runs the edge.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.DataMinion.RunBudgetBrowser">
            <summary>
            Runs the budget browser.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunChrome">
            <summary>
            Launches the chrome.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunChrome(System.String)">
            <summary>
            Runs the chrome.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.DataMinion.RunFirefox">
            <summary>
            Runs the firefox.
            </summary>
        </member>
        <member name="M:Bubba.DataMinion.RunFirefox(System.String)">
            <summary>
            Runs the firefox.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.DataMinion.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.NetUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.NetUtility.IsFocused(System.Windows.Controls.TextBox)">
            <summary>
            Determines whether the specified tb is focused.
            </summary>
            <param name="textBox">The tb.</param>
            <returns>
              <c>true</c> if the specified tb is focused; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.NetUtility.AddHotKey(System.Windows.Window,System.Action,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds the hot key.
            </summary>
            <param name="form">The form.</param>
            <param name="function">The function.</param>
            <param name="ctrl">if set to <c>true</c> [control].</param>
            <param name="shift">if set to <c>true</c> [shift].</param>
            <param name="alt">if set to <c>true</c> [alt].</param>
        </member>
        <member name="M:Bubba.NetUtility.IsFullySelected(System.Windows.Controls.TextBox)">
            <summary>
            Determines whether [is fully selected] [the specified tb].
            </summary>
            <param name="textBox">The tb.</param>
            <returns>
            <c>true</c> if [is fully selected]
            [the specified tb]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.NetUtility.HasSelection(System.Windows.Controls.TextBox)">
            <summary>
            Determines whether the specified tb has selection.
            </summary>
            <param name="textBox">The tb.</param>
            <returns>
              <c>true</c>
            if the specified tb has selection;
            otherwise,
            <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.NetUtility.ConvertToString(System.Object)">
            <summary>
            Converts to string.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.NetUtility.IsHotKey(System.Windows.Input.KeyEventArgs,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Determines whether [is hot key] [the specified key].
            </summary>
            <param name="eventData">The <see cref="T:System.Windows.Input.KeyEventArgs"/>
            instance containing the event data.
            </param>
            <param name="ctrl">if set to <c>true</c> [control].</param>
            <param name="shift">if set to <c>true</c> [shift].</param>
            <param name="alt">if set to <c>true</c> [alt].</param>
            <returns>
              <c>true</c> if [is hot key] [the specified key];
            otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.NetUtility.IsBitMaskOn(System.Int32,System.Int32)">
            <summary>
            Determines whether [is bitMask on] [the specified bitMask].
            </summary>
            <param name="num">The number.</param>
            <param name="bitMask">The bitMask.</param>
            <returns>
              <c>true</c> if [is bitMask on] [the specified bitMask]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Bubba.NetUtility.Fail(System.Exception)">
            <summary>
            Get ErrorDialog Dialog.
            </summary>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="T:Bubba.Static">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.Static.ToLogString(System.Exception,System.String)">
            <summary>
            Converts to log string.
            </summary>
            <param name="exception">The exception.</param>
            <param name="title">The message.</param>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.Static.ToDictionary(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts to dictionary.
            </summary>
            <param name="nvm">The NVM.</param>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.Static.Fail(System.Exception)">
            <summary>
            Fails the specified exception.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="T:Bubba.ThrowIf">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.ThrowIf.Null(System.Object,System.String)">
            <summary>
            Nulls the specified argument.
            </summary>
            <param name="argument">The argument.</param>
            <param name="paramName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bubba.ThrowIf.Empty(System.Object,System.String)">
            <summary>
            Empty throws exception if 'argument' is null.
            </summary>
            <param name="argument">The argument.</param>
            <param name="paramName">Name of the parameter.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException">ArgumentNullException</exception>
        </member>
        <member name="M:Bubba.ThrowIf.Negative(System.Object,System.String)">
            <summary>
            Determines whether the specified argument is negative.
            </summary>
            <param name="argument">The argument.</param>
            <param name="paramName">The argument's name.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Bubba.WebMinion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.WebMinion.RunEdge">
            <summary>
            Launches the edge.
            </summary>
        </member>
        <member name="M:Bubba.WebMinion.RunEdge(System.String)">
            <summary>
            Runs the edge.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.WebMinion.RunBudgetBrowser">
            <summary>
            Runs the budget browser.
            </summary>
        </member>
        <member name="M:Bubba.WebMinion.RunChrome">
            <summary>
            Launches the chrome.
            </summary>
        </member>
        <member name="M:Bubba.WebMinion.RunChrome(System.String)">
            <summary>
            Runs the chrome.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.WebMinion.RunFirefox">
            <summary>
            Runs the firefox.
            </summary>
        </member>
        <member name="M:Bubba.WebMinion.RunFirefox(System.String)">
            <summary>
            Runs the firefox.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Bubba.WebMinion.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.WebSerializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.WebSerializer.Serialize``1(``0)">
            <summary>
            Serializes an object to a JSON string.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="data">The object to serialize.</param>
            <returns>JSON string representation of the object.</returns>
        </member>
        <member name="M:Bubba.WebSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes a JSON string to an object of the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="json">The JSON string to deserialize.</param>
            <returns>Deserialized object of the specified type.</returns>
        </member>
        <member name="M:Bubba.WebSerializer.SendJsonPostRequest``2(System.String,``0)">
            <summary>
            Sends a POST request with a JSON payload and receives the JSON response.
            </summary>
            <typeparam name="TRequest">Type of the request object to serialize.</typeparam>
            <typeparam name="TResponse">Type of the response object to deserialize.</typeparam>
            <param name="url">The URL to send the request to.</param>
            <param name="requestData">The object to be serialized and sent as JSON.</param>
            <returns>Deserialized response object.</returns>
        </member>
        <member name="M:Bubba.WebSerializer.SendJsonGetRequest``1(System.String)">
            <summary>
            Sends a GET request and receives the JSON response.
            </summary>
            <typeparam name="T">
            Type of the response object to deserialize.
            </typeparam>
            <param name="url">The URL to send the request to.</param>
            <returns>Deserialized response object.</returns>
        </member>
        <member name="M:Bubba.WebSerializer.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.WinMinion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchCalculator">
            <summary>
            Launches the windows calculator.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchOutlook">
            <summary>
            Launches the outlook.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchMediaPlayer">
            <summary>
            Launches the windows media player.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchMaps">
            <summary>
            Launches the windows maps.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchOneDrive">
            <summary>
            Launches the one drive.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchCalendar">
            <summary>
            Launches the calendar.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchClock">
            <summary>
            Launches the clock.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchControlPanel">
            <summary>
            Launches the control panel.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.LaunchTaskManager">
            <summary>
            Launches the task manager.
            </summary>
        </member>
        <member name="M:Bubba.WinMinion.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.PropertyChangedBase">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="E:Bubba.PropertyChangedBase.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.PropertyChangedBase.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Bubba.RelayCommand">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="F:Bubba.RelayCommand._commandHandler">
            <summary>
            The command handler
            </summary>
        </member>
        <member name="F:Bubba.RelayCommand._canExecuteHandler">
            <summary>
            The can execute handler
            </summary>
        </member>
        <member name="E:Bubba.RelayCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="M:Bubba.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.RelayCommand"/> class.
            </summary>
            <param name="commandHandler">The command handler.</param>
            <param name="canExecuteHandler">The can execute handler.</param>
        </member>
        <member name="M:Bubba.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.RelayCommand"/> class.
            </summary>
            <param name="commandHandler">The command handler.</param>
            <param name="canExecuteHandler">The can execute handler.</param>
        </member>
        <member name="M:Bubba.RelayCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">Data used by the command.
            If the command does not require data to be passed,
            this object can be set to <see langword="null" />.</param>
        </member>
        <member name="M:Bubba.RelayCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">Data used by the command.
            If the command does not require data to be passed,
            this object can be set to <see langword="null" />.</param>
            <returns>
              <see langword="true" /> if this command can be executed;
            otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Bubba.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the can execute changed.
            </summary>
        </member>
        <member name="T:Bubba.RelayCommand`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:System.Windows.Input.ICommand" />
        </member>
        <member name="M:Bubba.RelayCommand`1.#ctor(System.Action{`0},System.Func{`0,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.RelayCommand`1"/> class.
            </summary>
            <param name="commandHandler">The command handler.</param>
            <param name="canExecuteHandler">The can execute handler.</param>
        </member>
        <member name="T:Bubba.MetroButton">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.Canvas" />
        </member>
        <member name="F:Bubba.MetroButton._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroButton.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Booger.Button" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroButton.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Called when [mouse enter]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.MetroButton.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Called when [mouse leave]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.MetroButton.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroCalculator">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Controls.Input.SfCalculator" />
        </member>
        <member name="F:Bubba.MetroCalculator._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroCalculator.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Booger.Calculator" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroCalculator.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroCarousel">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Shared.Carousel" />
        </member>
        <member name="F:Bubba.MetroCarousel._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroCarousel.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroCarousel" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroCheckListBox">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.CheckListBox" />
        </member>
        <member name="F:Bubba.MetroCheckListBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroCheckListBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroCheckListBox" /> class.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Tools.Controls.CheckListBox" />
            displays items with a checkbox to enable multiple selection of items.
            </remarks>
        </member>
        <member name="T:Bubba.MetroCheckListItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.CheckListBoxItem" />
        </member>
        <member name="F:Bubba.MetroCheckListItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="P:Bubba.MetroCheckListItem.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be
            used to store custom information about this element.
            </summary>
        </member>
        <member name="M:Bubba.MetroCheckListItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroCheckListItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroCheckListItem.OnItemMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroCheckListItem.OnItemMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroCheckListItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.DarkMode">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.Palette" />
        </member>
        <member name="M:Bubba.DarkMode.CreateColors">
            <inheritdoc />
            <summary>
            Creates the colors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.DarkMode.CreateColorModel">
            <inheritdoc />
            <summary>
            Creates the color model.
            </summary>
            <returns>
            List( Brush )
            </returns>
        </member>
        <member name="M:Bubba.DarkMode.CreateColorMap">
            <inheritdoc />
            <summary>
            Creates the color map.
            </summary>
            <returns>
            Dictionary(string, Brush )
            </returns>
        </member>
        <member name="M:Bubba.DarkMode.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.DarkTheme" /> class.
            </summary>
        </member>
        <member name="P:Bubba.DarkMode.HorizontalAlignment">
            <summary>
            Gets the horizontal alignment.
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.VerticalAlignment">
            <summary>
            Gets the vertical alignment.
            </summary>
            <value>
            The vertical alignment.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.DarkBlueBrush">
            <summary>
            Gets the color of the dark blue.
            </summary>
            <value>
            The color of the dark blue.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.MutedBorderBrush">
            <summary>
            Gets the color of the muted border.
            </summary>
            <value>
            The color of the muted border.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.DarkRedBrush">
            <summary>
            Gets the dark red brush.
            </summary>
            <value>
            The dark red brush.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.DarkGreenBrush">
            <summary>
            Gets the dark green brush.
            </summary>
            <value>
            The dark green brush.
            </value>
        </member>
        <member name="P:Bubba.DarkMode.DarkYellowBrush">
            <summary>
            Gets the dark yellow brush.
            </summary>
            <value>
            The dark yellow brush.
            </value>
        </member>
        <member name="T:Bubba.Dimensions">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._fontFamily">
            <summary>
            The font famly
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._fontSize">
            <summary>
            The font size
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._height">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._width">
            <summary>
            The width
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._maxHeight">
            <summary>
            The maximum height
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._minHeight">
            <summary>
            The minimum height
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._maxWidth">
            <summary>
            The maximum width
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._minWidth">
            <summary>
            The minimum width
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._startLocation">
            <summary>
            The start up location
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._borderThickness">
            <summary>
            The border thickness
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._padding">
            <summary>
            The padding
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._margin">
            <summary>
            The margin
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._reSizeMode">
            <summary>
            The re size mode
            </summary>
        </member>
        <member name="F:Bubba.Dimensions._windowStyle">
            <summary>
            The window style
            </summary>
        </member>
        <member name="M:Bubba.Dimensions.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Dimensions"/> class.
            </summary>
        </member>
        <member name="P:Bubba.Dimensions.WindowStyle">
            <summary>
            Gets the window style.
            </summary>
            <value>
            The window style.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.StartLocation">
            <summary>
            Gets the start location.
            </summary>
            <value>
            The start location.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.SizeMode">
            <summary>
            Gets the size mode.
            </summary>
            <value>
            The size mode.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.FontFamily">
            <summary>
            Gets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.FontSize">
            <summary>
            Gets the size of the font.
            </summary>
            <value>
            The size of the font.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.Padding">
            <summary>
            Gets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.Margin">
            <summary>
            Gets the margin.
            </summary>
            <value>
            The margin.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.BorderThickness">
            <summary>
            Gets the border thickness.
            </summary>
            <value>
            The border thickness.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.MinHeight">
            <summary>
            Gets the minimum height.
            </summary>
            <value>
            The minimum height.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.MaxHeight">
            <summary>
            Gets the height of the MSX.
            </summary>
            <value>
            The height of the MSX.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.MinWidth">
            <summary>
            Gets the minimum width.
            </summary>
            <value>
            The minimum width.
            </value>
        </member>
        <member name="P:Bubba.Dimensions.MaxWidth">
            <summary>
            Gets the maximum width.
            </summary>
            <value>
            The maximum width.
            </value>
        </member>
        <member name="T:Bubba.IPalette">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bubba.IPalette.Transparent">
            <summary>
            Gets the color of the fore.
            </summary>
            <value>
            The color of the fore.
            </value>
        </member>
        <member name="P:Bubba.IPalette.BlackColor">
            <summary>
            Gets the color of the black.
            </summary>
            <value>
            The color of the black.
            </value>
        </member>
        <member name="P:Bubba.IPalette.ForeColor">
            <summary>
            Gets the color of the fore.
            </summary>
            <value>
            The color of the fore.
            </value>
        </member>
        <member name="P:Bubba.IPalette.BackColor">
            <summary>
            Gets the color of the back.
            </summary>
            <value>
            The color of the back.
            </value>
        </member>
        <member name="P:Bubba.IPalette.BorderColor">
            <summary>
            Gets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:Bubba.IPalette.ControlColor">
            <summary>
            Gets or sets the color of the control.
            </summary>
            <value>
            The color of the control.
            </value>
        </member>
        <member name="P:Bubba.IPalette.WallColor">
            <summary>
            Gets or sets the color of the wall.
            </summary>
            <value>
            The color of the wall.
            </value>
        </member>
        <member name="P:Bubba.IPalette.LightBlueColor">
            <summary>
            Gets the light blue.
            </summary>
            <value>
            The light blue.
            </value>
        </member>
        <member name="P:Bubba.IPalette.ItemHoverColor">
            <summary>
            Gets the color of the hover.
            </summary>
            <value>
            The color of the hover.
            </value>
        </member>
        <member name="P:Bubba.IPalette.RedColor">
            <summary>
            Gets the color of the red.
            </summary>
            <value>
            The color of the red.
            </value>
        </member>
        <member name="P:Bubba.IPalette.KhakiColor">
            <summary>
            Gets the color of the khaki.
            </summary>
            <value>
            The color of the khaki.
            </value>
        </member>
        <member name="P:Bubba.IPalette.GreenColor">
            <summary>
            Gets the color of the green.
            </summary>
            <value>
            The color of the green.
            </value>
        </member>
        <member name="P:Bubba.IPalette.YellowColor">
            <summary>
            Gets the color of the yellow.
            </summary>
            <value>
            The color of the yellow.
            </value>
        </member>
        <member name="P:Bubba.IPalette.GrayColor">
            <summary>
            Gets the color of the gray.
            </summary>
            <value>
            The color of the gray.
            </value>
        </member>
        <member name="P:Bubba.IPalette.ColorMap">
            <summary>
            Gets the color map.
            </summary>
            <value>
            The color map.
            </value>
        </member>
        <member name="P:Bubba.IPalette.ColorModel">
            <summary>
            Gets the color model.
            </summary>
            <value>
            The color model.
            </value>
        </member>
        <member name="T:Bubba.MetroColorPicker">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.MetroColorPicker._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroColorPicker.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroColorPicker" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroColorPicker.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.Palette">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bubba.Dimensions" />
        </member>
        <member name="F:Bubba.Palette._formBackground">
            <inheritdoc />
            <summary>
            The back color
            </summary>
        </member>
        <member name="F:Bubba.Palette._blackBackground">
            <summary>
            The black color
            </summary>
        </member>
        <member name="F:Bubba.Palette._blueBorderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Bubba.Palette._color">
            <summary>
            The colors
            </summary>
        </member>
        <member name="F:Bubba.Palette._colorMap">
            <summary>
            The color map
            </summary>
        </member>
        <member name="F:Bubba.Palette._colorModel">
            <summary>
            The model palette
            </summary>
        </member>
        <member name="F:Bubba.Palette._controlBackground">
            <summary>
            The control color
            </summary>
        </member>
        <member name="F:Bubba.Palette._controlInteriorColor">
            <summary>
            The control color
            </summary>
        </member>
        <member name="F:Bubba.Palette._darkBlueColor">
            <summary>
            The control hover color
            </summary>
        </member>
        <member name="F:Bubba.Palette._foreground">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Bubba.Palette._grayColor">
            <summary>
            The gray color
            </summary>
        </member>
        <member name="F:Bubba.Palette._groupBoxBackground">
            <summary>
            The group box background
            </summary>
        </member>
        <member name="F:Bubba.Palette._greenColor">
            <inheritdoc />
            <summary>
            The green
            </summary>
        </member>
        <member name="F:Bubba.Palette._steelBlueColor">
            <inheritdoc />
            <summary>
            The steel blue
            </summary>
        </member>
        <member name="F:Bubba.Palette._khakiColor">
            <inheritdoc />
            <summary>
            The yellow
            </summary>
        </member>
        <member name="F:Bubba.Palette._formForeground">
            <summary>
            The light blue
            </summary>
        </member>
        <member name="F:Bubba.Palette._redColor">
            <inheritdoc />
            <summary>
            The maroon
            </summary>
        </member>
        <member name="F:Bubba.Palette._transparent">
            <summary>
            The transparent color
            </summary>
        </member>
        <member name="F:Bubba.Palette._wallColor">
            <summary>
            The wall color
            </summary>
        </member>
        <member name="F:Bubba.Palette._whiteForeground">
            <summary>
            The black color
            </summary>
        </member>
        <member name="F:Bubba.Palette._yellowColor">
            <inheritdoc />
            <summary>
            The orange
            </summary>
        </member>
        <member name="F:Bubba.Palette._mutedForeground">
            <summary>
            The muted border color
            </summary>
        </member>
        <member name="F:Bubba.Palette._darkGreenColor">
            <summary>
            The dark green color
            </summary>
        </member>
        <member name="F:Bubba.Palette._darkRedColor">
            <summary>
            The dark red color
            </summary>
        </member>
        <member name="F:Bubba.Palette._darkYellowColor">
            <summary>
            The dark yellow color
            </summary>
        </member>
        <member name="M:Bubba.Palette.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Palette" /> class.
            </summary>
        </member>
        <member name="P:Bubba.Palette.WhiteForeground">
            <summary>
            Gets the color of the white.
            </summary>
            <value>
            The color of the white.
            </value>
        </member>
        <member name="P:Bubba.Palette.FormForeground">
            <summary>
            Gets the color of the white.
            </summary>
            <value>
            The color of the white.
            </value>
        </member>
        <member name="P:Bubba.Palette.Color">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>
            The colors.
            </value>
        </member>
        <member name="P:Bubba.Palette.ColorMap">
            <inheritdoc />
            <summary>
            Gets the color map.
            </summary>
            <value>
            The color map.
            </value>
        </member>
        <member name="P:Bubba.Palette.ColorModel">
            <inheritdoc />
            <summary>
            Gets the color model.
            </summary>
            <value>
            The color model.
            </value>
        </member>
        <member name="P:Bubba.Palette.Transparent">
            <inheritdoc />
            <summary>
            Gets the color of the fore.
            </summary>
            <value>
            The color of the fore.
            </value>
        </member>
        <member name="P:Bubba.Palette.BlackBackground">
            <inheritdoc />
            <summary>
            Gets the color of the black.
            </summary>
            <value>
            The color of the black.
            </value>
        </member>
        <member name="P:Bubba.Palette.Foreground">
            <inheritdoc />
            <summary>
            Gets the color of the fore.
            </summary>
            <value>
            The color of the fore.
            </value>
        </member>
        <member name="P:Bubba.Palette.FormBackground">
            <inheritdoc />
            <summary>
            Gets the color of the back.
            </summary>
            <value>
            The color of the back.
            </value>
        </member>
        <member name="P:Bubba.Palette.GroupBoxBackground">
            <summary>
            Gets the group box background.
            </summary>
            <value>
            The group box background.
            </value>
        </member>
        <member name="P:Bubba.Palette.BlueBorderBrush">
            <inheritdoc />
            <summary>
            Gets the color of the border.
            </summary>
            <value>
            The color of the border.
            </value>
        </member>
        <member name="P:Bubba.Palette.ControlBackground">
            <inheritdoc />
            <summary>
            Gets or sets the color of the control.
            </summary>
            <value>
            The color of the control.
            </value>
        </member>
        <member name="P:Bubba.Palette.ControlInterior">
            <summary>
            Gets the color of the interior.
            </summary>
            <value>
            The color of the interior.
            </value>
        </member>
        <member name="P:Bubba.Palette.WallBrush">
            <inheritdoc />
            <summary>
            Gets or sets the color of the wall.
            </summary>
            <value>
            The color of the wall.
            </value>
        </member>
        <member name="P:Bubba.Palette.SteelBlueBrush">
            <inheritdoc />
            <summary>
            Gets the color of the hover.
            </summary>
            <value>
            The color of the hover.
            </value>
        </member>
        <member name="P:Bubba.Palette.RedBrush">
            <inheritdoc />
            <summary>
            Gets the color of the red.
            </summary>
            <value>
            The color of the red.
            </value>
        </member>
        <member name="P:Bubba.Palette.KhakiBrush">
            <inheritdoc />
            <summary>
            Gets the color of the khaki.
            </summary>
            <value>
            The color of the khaki.
            </value>
        </member>
        <member name="P:Bubba.Palette.GreenBrush">
            <inheritdoc />
            <summary>
            Gets the color of the green.
            </summary>
            <value>
            The color of the green.
            </value>
        </member>
        <member name="P:Bubba.Palette.LightBlueBrush">
            <inheritdoc />
            <summary>
            Gets the light blue.
            </summary>
            <value>
            The light blue.
            </value>
        </member>
        <member name="P:Bubba.Palette.YellowBrush">
            <inheritdoc />
            <summary>
            Gets the color of the yellow.
            </summary>
            <value>
            The color of the yellow.
            </value>
        </member>
        <member name="P:Bubba.Palette.MutedForeground">
            <summary>
            Gets the muted foreground.
            </summary>
            <value>
            The muted foreground.
            </value>
        </member>
        <member name="P:Bubba.Palette.GrayBrush">
            <inheritdoc />
            <summary>
            Gets the color of the gray.
            </summary>
            <value>
            The color of the gray.
            </value>
        </member>
        <member name="M:Bubba.Palette.CreateColors">
            <summary>
            Creates the colors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.Palette.CreateColorModel">
            <inheritdoc />
            <summary>
            Creates the color model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.Palette.CreateColorMap">
            <inheritdoc />
            <summary>
            Creates the color map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.Palette.Fail(System.Exception)">
            <inheritdoc />
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroComboBox">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.ComboBox" />
        </member>
        <member name="F:Bubba.MetroComboBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroComboBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Booger.UI.Controls.ComboBox.MetroComboBox" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroComboBox.CreateItem(System.String)">
            <summary>
            Creates the item.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Bubba.MetroComboBox.CreateItem(System.String,System.String)">
            <summary>
            Creates the item.
            </summary>
            <param name="name">The name.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Bubba.MetroComboBox.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroComboBoxItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.ComboBoxItemAdv" />
        </member>
        <member name="F:Bubba.MetroComboBoxItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroComboBoxItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroComboBoxItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroComboBoxItem.OnItemMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroComboBoxItem.OnItemMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroComboBoxItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroDataGrid">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Grid.SfDataGrid" />
        </member>
        <member name="F:Bubba.MetroDataGrid._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroDataGrid.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.DataGrid" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroDataGrid.OnMouseRightClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when [column right clicked].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroDataGrid.OnMouseLeftClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [cell left clicked].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroDataGrid.OnAutoGeneratingColumn(System.Object,Syncfusion.UI.Xaml.Grid.AutoGeneratingColumnArgs)">
            <summary>
            Called when [automatic generating column].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Bubba.MetroDataGrid.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroDropDown">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.DropDownButtonAdv" />
        </member>
        <member name="F:Bubba.MetroDropDown._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroDropDown.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.ComboBox" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroDropDown.AddItem(System.String)">
            <summary>
            Adds the item.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Bubba.MetroDropDown.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroDropDownItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.ComboBoxItemAdv" />
        </member>
        <member name="F:Bubba.MetroDropDownItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="P:Bubba.MetroDropDownItem.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used
            to store custom information about this element.
            </summary>
        </member>
        <member name="M:Bubba.MetroDropDownItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Baby.MetroDropDownItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroDropDownItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.MetroDropDownItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Bubba.MetroDropDownItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroEditor">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Edit.EditControl" />
        </member>
        <member name="F:Bubba.MetroEditor._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroEditor.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            see cref="Editor"/&gt; class.
            </summary>
        </member>
        <member name="M:Bubba.MetroEditor.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroGroupBox">
            <inheritdoc />
        </member>
        <member name="F:Bubba.MetroGroupBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroGroupBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.MetroGroupBox" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroImage">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.Image" />
        </member>
        <member name="F:Bubba.MetroImage._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.MetroImage._uri">
            <summary>
            The URI
            </summary>
        </member>
        <member name="M:Bubba.MetroImage.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroImage" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroImage.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroImageEditor">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.ImageEditor.SfImageEditor" />
        </member>
        <member name="M:Bubba.MetroImageEditor.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroImageEditor" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroImageEditor.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroLabel">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.Label" />
        </member>
        <member name="F:Bubba.MetroLabel._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroLabel.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroLabel" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroListBox">
            <inheritdoc />
            <summary>
            </summary>
        </member>
        <member name="F:Bubba.MetroListBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroListBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroListBox" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroListBox.CreateItem(System.String)">
            <summary>
            Creates the item.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Bubba.MetroListBox.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroListBoxItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.ListBoxItem" />
        </member>
        <member name="F:Bubba.MetroListBoxItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="P:Bubba.MetroListBoxItem.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used
            to store custom information about this element.
            </summary>
        </member>
        <member name="M:Bubba.MetroListBoxItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroListBoxItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroListBoxItem.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [item mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroListBoxItem.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [item mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroListBoxItem.OnItemSelected(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [item selected].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroListBoxItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroListView">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.ListView" />
        </member>
        <member name="F:Bubba.MetroListView._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroListView.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroListView" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroListViewItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.ListViewItem" />
        </member>
        <member name="F:Bubba.MetroListViewItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="P:Bubba.MetroListViewItem.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used
            to store custom information about this element.
            </summary>
        </member>
        <member name="M:Bubba.MetroListViewItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroListViewItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroListViewItem.OnItemMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [item mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroListViewItem.OnItemMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [item mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroListViewItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MulitSelectDropDown">
            <summary>
            
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.Grid.SfMultiColumnDropDownControl" />
        </member>
        <member name="F:Bubba.MulitSelectDropDown._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MulitSelectDropDown.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.MetroMultiSelect" /> class.
            </summary>
        </member>
        <member name="T:Bubba.CircurlarProgress">
            <summary>
            
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.ProgressBar.SfStepProgressBar" />
        </member>
        <member name="F:Bubba.CircurlarProgress._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.CircurlarProgress.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CircurlarProgress" /> class.
            </summary>
        </member>
        <member name="T:Bubba.LinearProgress">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.ProgressBar.SfLinearProgressBar" />
        </member>
        <member name="F:Bubba.LinearProgress._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.LinearProgress.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Booger.MetroLinearProgress" /> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Bubba.LoadingCircle" -->
        <member name="T:Bubba.StepProgress">
            <summary>
            
            </summary>
            <seealso cref="T:Syncfusion.UI.Xaml.ProgressBar.SfStepProgressBar" />
        </member>
        <member name="F:Bubba.StepProgress._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.StepProgress.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Booger.MetroStepProgress" /> class.
            </summary>
        </member>
        <member name="M:Bubba.StepProgress.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.MetroRadioButton">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.RadioButton" />
        </member>
        <member name="F:Bubba.MetroRadioButton._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroRadioButton.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroRadioButton" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroSlider">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Controls.Input.SfRangeSlider" />
        </member>
        <member name="F:Bubba.MetroSlider._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroSlider.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroSlider" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroRichTextBox">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.SfRichTextBoxAdv" />
        </member>
        <member name="F:Bubba.MetroRichTextBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroRichTextBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroRichTextBox" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroRichTextBox.OnMouseEnter(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroRichTextBox.OnMouseLeave(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroRichTextBox.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="_ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroText">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.TextBlock" />
        </member>
        <member name="F:Bubba.MetroText._theme">
            <summary>
            The dark
            </summary>
        </member>
        <member name="M:Bubba.MetroText.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.MetroTextBlock" /> class.
            </summary>
        </member>
        <member name="T:Bubba.MetroTextBox">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Controls.Input.SfTextBoxExt" />
        </member>
        <member name="F:Bubba.MetroTextBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.MetroTextBox._inputText">
            <summary>
            The input text
            </summary>
        </member>
        <member name="F:Bubba.MetroTextBox._tempText">
            <summary>
            The temporary text
            </summary>
        </member>
        <member name="M:Bubba.MetroTextBox.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroTextBox" /> class.
            </summary>
        </member>
        <member name="P:Bubba.MetroTextBox.InputText">
            <summary>
            Gets or sets the input text.
            </summary>
            <value>
            The input text.
            </value>
        </member>
        <member name="M:Bubba.MetroTextBox.OnMouseEnter(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroTextBox.OnMouseLeave(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroTextBox.OnTextChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [un focused].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.MetroTextBox.OnFocusLost(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [focus lost].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" />
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.MetroTextBox.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="_ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroTile">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Controls.Notification.SfHubTile" />
        </member>
        <member name="F:Bubba.MetroTile._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.MetroTile.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            
            <see cref="T:Booger.Tile" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroTile.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Called when [mouse enter]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.MetroTile.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary> Called when [mouse leave]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.MetroTile.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.MetroTileView">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Shared.TileViewControl" />
        </member>
        <member name="M:Bubba.MetroTileView.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Badger.MetroTileView" /> class.
            </summary>
        </member>
        <member name="M:Bubba.MetroTileView.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="ex">The _ex.</param>
        </member>
        <member name="T:Bubba.ToolStripButton">
            <inheritdoc />
             <summary>
             </summary>
             <seealso cref="T:Badger.MetroButton" />
        </member>
        <member name="M:Bubba.ToolStripButton.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolStripButton"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ToolStripButton.OnMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
            <summary> Called when [mouse enter]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs" />
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.ToolStripButton.OnMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
            <summary> Called when [mouse leave]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs" />
            instance containing the event data.
            </param>
        </member>
        <member name="T:Bubba.ToolStripDropDown">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.MetroCheckListBox" />
        </member>
        <member name="F:Bubba.ToolStripDropDown._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.ToolStripDropDown.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolStripDropDown"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Bubba.ToolStripDropDown.Fail(System.Exception)">
            <summary>
            Fails the specified _ex.
            </summary>
            <param name="_ex">The _ex.</param>
        </member>
        <member name="T:Bubba.ToolStripDropDownItem">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Syncfusion.Windows.Tools.Controls.ComboBoxItemAdv" />
        </member>
        <member name="F:Bubba.ToolStripDropDownItem._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="P:Bubba.ToolStripDropDownItem.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used
            to store custom information about this element.
            </summary>
        </member>
        <member name="M:Bubba.ToolStripDropDownItem.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bobo.ToolStripDropDownItem" /> class.
            </summary>
        </member>
        <member name="M:Bubba.ToolStripDropDownItem.OnItemMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ToolStripDropDownItem.OnItemMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Called when [item mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ToolStripDropDownItem.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.StatusLabel">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Bobo.ToolStripLabel" />
        </member>
        <member name="M:Bubba.StatusLabel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.StatusLabel"/> class.
            </summary>
        </member>
        <member name="T:Bubba.ToolStripLabel">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.MetroLabel" />
        </member>
        <member name="M:Bubba.ToolStripLabel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolStripLabel"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="T:Bubba.MetroToolStrip">
            <inheritdoc />
             <summary>
             </summary>
             <seealso cref="T:Badger.ToolbarBase" />
        </member>
        <member name="F:Bubba.MetroToolStrip._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.MetroToolStrip._items">
            <summary>
            The buttons
            </summary>
        </member>
        <member name="M:Bubba.MetroToolStrip.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.MetroToolStrip"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="T:Bubba.ToolPanel">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        </member>
        <member name="F:Bubba.ToolPanel._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.ToolPanel.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bobo.ToolPanel" /> class.
            </summary>
        </member>
        <member name="T:Bubba.ToolStripTextBox">
            <inheritdoc />
            <summary>
            </summary>
            <seealso cref="T:Badger.MetroTextBox" />
        </member>
        <member name="F:Bubba.ToolStripTextBox._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.ToolStripTextBox._inputText">
            <summary>
            The input text
            </summary>
        </member>
        <member name="F:Bubba.ToolStripTextBox._tempText">
            <summary>
            The temporary text
            </summary>
        </member>
        <member name="F:Bubba.ToolStripTextBox._tokens">
            <summary>
            The tokens
            </summary>
        </member>
        <member name="M:Bubba.ToolStripTextBox.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolStripTextBox"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Bubba.ToolStripTextBox.InputText">
            <summary>
            Gets or sets the input text.
            </summary>
            <value>
            The input text.
            </value>
        </member>
        <member name="P:Bubba.ToolStripTextBox.Tokens">
            <summary>
            Gets or sets the tokens.
            </summary>
            <value>
            The tokens.
            </value>
        </member>
        <member name="M:Bubba.ToolStripTextBox.OnMouseCapture(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ToolStripTextBox.OnMouseLeave(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ToolStripTextBox.OnTextChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [un focused].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.ToolStripTextBox.OnFocusLost(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [focus lost].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" />
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ToolStripTextBox.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Bubba.ToolStrip">
            <inheritdoc />
             <summary>
             </summary>
             <seealso cref="T:Badger.ToolbarBase" />
        </member>
        <member name="F:Bubba.ToolStrip._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.ToolStrip._items">
            <summary>
            The buttons
            </summary>
        </member>
        <member name="M:Bubba.ToolStrip.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ToolStrip"/> class.
            </summary>
            <inheritdoc />
        </member>
        <member name="T:Bubba.CalculatorWindow">
            <inheritdoc />
            <summary>
            Interaction logic for CalculatorWindow.xaml
            </summary>
            <summary>
            CalculatorWindow
            </summary>
        </member>
        <member name="F:Bubba.CalculatorWindow._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="M:Bubba.CalculatorWindow.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.CalculatorWindow" /> class.
            </summary>
        </member>
        <member name="M:Bubba.CalculatorWindow.RegisterCallbacks">
            <summary>
            Registers the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.CalculatorWindow.ClearCallbacks">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.CalculatorWindow.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.OnLeftClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when [PictureBox click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.OnCloseButtonClick(System.Object,System.EventArgs)">
            <summary>
            Called when [close click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.OnClosing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when [closing].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.CalculatorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.ChatWindow">
            <summary>
            Interaction logic for ChatWindow.xaml
            </summary>
            <summary>
            ChatWindow
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._oldWindowState">
            <summary>
            The old window state
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._instructions">
            <summary>
            The system prompt fro the GPT
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._userPrompt">
            <summary>
            The user prompt for the GPT
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow.Assembly">
            <summary>
            The assembly
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._messages">
            <summary>
            The messages
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._role">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._requestType">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._voice">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._endpoint">
            <summary>
            The endpoint
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._provider">
            <summary>
            The provider
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._language">
            <summary>
            The language
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._request">
            <summary>
            The selected request
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._httpClient">
            <summary>
            The HTTP client
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._options">
            <summary>
            The options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._temperature">
            <summary>
            A number between 0 and 2.
            Higher values like 0.8 will make the output more random,
            while lower values like 0.2 will make it more focused and deterministic.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._topPercent">
            <summary>
            An alternative to sampling with temperature,
            called nucleus sampling, where the model considers
            the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability
            mass are considered. We generally recommend altering this
            or temperature but not both.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._store">
            <summary>
            The store
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._stream">
            <summary>
            The stream
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._listen">
            <summary>
            The listen
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._mute">
            <summary>
            The mute
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._logprobs">
            <summary>
            Whether to return log probabilities of the output tokens or not.
            If true, returns the log probabilities of each output token
            returned in the content of message.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._speed">
            <summary>
            The speed
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._model">
            <summary>
            The chat model
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._document">
            <summary>
            The document
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._inputText">
            <summary>
            The user prompt for the GPT
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._outputFormat">
            <summary>
            The output format
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._responseFormat">
            <summary>
            The response format
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._reasoningEffort">
            <summary>
            The reasoning effort
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._audioFormat">
            <summary>
            The audio format
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageSize">
            <summary>
            The image size
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageFormat">
            <summary>
            The image format
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageQuality">
            <summary>
            The quality
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageDetail">
            <summary>
            The detail
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageBackground">
            <summary>
            The background
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageStyle">
            <summary>
            The image style
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._imageCompression">
            <summary>
            The image compression
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._maximumTokens">
            <summary>
            An upper bound for the number of tokens
            that can be generated for a completion
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._outputTokens">
            <summary>
            The output tokens
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._frequencyPenalty">
            <summary>
            A number between -2.0 and 2.0. Positive values penalize new
            tokens based on their existing frequency in the text so far,
            decreasing the model's likelihood to repeat the same line verbatim.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._presencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far,
            increasing the model's likelihood to talk about new topics.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._topLogProbs">
            <summary>
            An integer between 0 and 20 specifying the number of most likely tokens
            to return at each token position, each with an associated log probability.
            logprobs must be set to true if this parameter is used.
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._modelOptions">
            <summary>
            The models
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._sizeOptions">
            <summary>
            The image sizes
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._voiceOptions">
            <summary>
            The image sizes
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._speedOptions">
            <summary>
            The speed options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._reasoningOptions">
            <summary>
            The reasoning options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._qualityOptions">
            <summary>
            The quality options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._detailOptions">
            <summary>
            The detail options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._responseFormatOptions">
            <summary>
            The response format options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._audioFormatOptions">
            <summary>
            The audio format options
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._engine">
            <summary>
            The engine
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._synthesizer">
            <summary>
            The synthesizer
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._searchDialog">
            <summary>
            The search dialog
            </summary>
        </member>
        <member name="F:Bubba.ChatWindow._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="E:Bubba.ChatWindow.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ChatWindow"/> class.
            </summary>
        </member>
        <member name="P:Bubba.ChatWindow.InputText">
            <summary>
            Gets or sets the input text.
            </summary>
            <value>
            The input text.
            </value>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeTimer">
            <summary>
            Initializes the timer.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeToolStrip">
            <summary>
            Initializes the tool strip.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeEditor">
            <summary>
            Initializes the user system text box.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeInterface">
            <summary>
            Initializes the interface asynchronous.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeSpeechEngine">
            <summary>
            Speeches to text.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeParameters">
            <summary>
            Sets the hyper parameters.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.RegisterCallbacks">
            <summary>
            Registers the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.InvokeIf(System.Action)">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.ChatWindow.InvokeIf(System.Action{System.Object})">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.ChatWindow.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.CheckProgress">
            <summary>
            Shows the progress.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearDelegates">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearChatControls">
            <summary>
            Clears the controls.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearParameters">
            <summary>
            Clears the parameters.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearCheckBoxes">
            <summary>
            Clears the filter.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearSliders">
            <summary>
            Clears the list boxes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearIntegerTextBoxes">
            <summary>
            Clears the integer text boxes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearLabels">
            <summary>
            Clears the labels.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearComboBoxes">
            <summary>
            Clears the combo boxes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearListBoxes">
            <summary>
            Clears the list boxes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearTextBoxes">
            <summary>
            Clears the text boxes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearSelections">
            <summary>
            Clears the selections.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.ClearCollections">
            <summary>
            Clears the collections.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.CreateNotifier">
            <summary>
            Creates the notifier.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Bubba.ChatWindow.EnableResetButton(System.Boolean)">
            <summary>
            Enables the reset button.
            </summary>
            <param name="canReset">
            if set to <c>true</c> [can go back].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableSendButton(System.Boolean)">
            <summary>
            Enables the send button.
            </summary>
            <param name="canSend">
            if set to <c>true</c> [can send].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableEraseButton(System.Boolean)">
            <summary>
            Enables the erase button.
            </summary>
            <param name="canErase">
            if set to <c>true</c> [can erase].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableCancelButton(System.Boolean)">
            <summary>
            Enables the cancel button.
            </summary>
            <param name="canCancel">
            if set to <c>true</c> [can cancel].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableDeleteButton(System.Boolean)">
            <summary>
            Enables the delete button.
            </summary>
            <param name="canDelete">
            if set to <c>true</c> [can delete].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableSaveButton(System.Boolean)">
            <summary>
            Enables the save button.
            </summary>
            <param name="canSave">
            if set to <c>true</c> [can go back].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableUploadButton(System.Boolean)">
            <summary>
            Enables the upload button.
            </summary>
            <param name="canUpload">
            if set to <c>true</c> [can upload].</param>
        </member>
        <member name="M:Bubba.ChatWindow.EnableMenuButton(System.Boolean)">
            <summary>
            Enables the menu button.
            </summary>
            <param name="canUpload">
            if set to <c>true</c> [can upload].</param>
        </member>
        <member name="M:Bubba.ChatWindow.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The form.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.ChatWindow.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The form.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.ChatWindow.GetResourceStream(System.String,System.Boolean)">
            <summary>
            Gets the resource stream.
            </summary>
            <param name="fileName">The fileName.</param>
            <param name="nameSpace">if set to
            <c>true</c> [with nameSpace].</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatWindow.GetResourceNames(System.String)">
            <summary>
            Gets the resource names.
            </summary>
            <param name="resxPath">The RESX file path.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatWindow.SendHttpMessage(System.String)">
            <summary>
            Sends the HTTP message.
            </summary>
            <param name="question">The question.</param>
            <returns></returns>
        </member>
        <member name="M:Bubba.ChatWindow.LoadGptFileDialog">
            <summary>
            Opens the GPT file dialog.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.LoadFileBrowser">
            <summary>
            Opens the file browser.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.LoadSearchDialog">
            <summary>
            Opens the search dialog.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.LoadSystemDialog">
            <summary>
            Opens the prompt dialog.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.LoadCalculator">
            <summary>
            Opens the calculator window.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.OpenSystemDialog">
            <summary>
            Opens the prompt dialog.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.OpenCalculator">
            <summary>
            Opens the calculator.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.OpenGptFileDialog">
            <summary>
            Opens the file browser.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.OpenSearchDialog(System.Double,System.Double)">
            <summary>
            Shows the search dialog.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PadQuotes(System.String)">
            <summary>
            Pads the quotes.
            </summary>
            <param name="input">The input.</param>
            <returns>
            string
            </returns>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateModelsAsync">
            <summary>
            Sets the models.
            </summary>
            
        </member>
        <member name="M:Bubba.ChatWindow.PopulateImageSizes">
            <summary>
            Populates the image sizes.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateTextModels">
            <summary>
            Populates the text generation models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateCompletionModels">
            <summary>
            Populates the completion models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateAssistantModels">
            <summary>
            Populates the assistant models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateImageEditingModels">
            <summary>
            Populates the image generation models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateImageGenerationModels">
            <summary>
            Populates the image generation models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateReasoningModels">
            <summary>
            Populates the reasoning models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateResponseModels">
            <summary>
            Populates the translation models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateTranscriptionModels">
            <summary>
            Populates the transcription models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateTranslationModels">
            <summary>
            Populates the translation models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateEmbeddingModels">
            <summary>
            Populates the embedding models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateFineTuningModels">
            <summary>
            Populates the fine tuning models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateSpeechModels">
            <summary>
            Populates the speech models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateTextToSpeechModels">
            <summary>
            Populates the text to speech models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateUploadModels">
            <summary>
            Populates the upload API models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateVectorStoreModels">
            <summary>
            Populates the vector store models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateFileModels">
            <summary>
            Populates the file API models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateAgentModels">
            <summary>
            Populates the agent models.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateTextDocuments">
            <summary>
            Populates the text documents.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateInstalledVoices">
            <summary>
            Populates the voices.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateOpenAiVoices">
            <summary>
            Populates the open ai voices.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateVoices">
            <summary>
            Populates the voices.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateRequestTypes">
            <summary>
            Populates the request types.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulateDocuments">
            <summary>
            Sets the user document language.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.PopulatePromptListBox">
            <summary>
            Populates the prompt drop down.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.UpdateStatus(System.Object)">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.SendMessage(System.String)">
            <summary>
            Sends the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.ChatWindow.SendNotification(System.String)">
            <summary>
            Sends the notification.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.SendErrorMessage(System.String)">
            <summary>
            Sends the error message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.ChatWindow.SetRequestType">
            <summary>
            Sets the end point.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.SetGptOptions">
            <summary>
            Sets the GPT options.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.SetToolbarVisibility(System.Boolean)">
            <summary>
            
            Shows the items.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.TextToSpeech(System.String)">
            <summary>
            Speeches to text.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.ChatWindow.OnAudioFormatSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [audio format selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnClosing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when [closing].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnCloseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [close button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnCalculatorMenuOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [calculator menu option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnCloseOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [close option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnChromeOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [chrome option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnClearButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [clear button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnControlPanelOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [control panel option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnDeleteButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [delete button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnDocumentListBoxSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [select
            ed document changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [edit button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnEdgeOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [edge option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnEffortSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [reasoning effort selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnFileMenuOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [file menu option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnFirefoxOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [firefox option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnFirstButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [first button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnLastButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [last button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnListenCheckedChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [listen checked changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnLookupButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [lookup button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnMenuButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [menu button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnModelDropDownSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [model ComboBox selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnMuteCheckedBoxChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [mute checked box changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnNextButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [next button click].
            </summary>
            
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnParameterTextBoxChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [text box input changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnPreviousButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [previous button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnRequestDropDownSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [task selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnRefreshButtonClick(System.Object,System.EventArgs)">
            <summary>
            Called when [refresh button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnResponseFormatSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [response format selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSpeechRateSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [speech rate selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnStatusUpdated(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [status updated].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSourceButtonClick(System.Object,System.EventArgs)">
            <summary>
            Called when [source button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnStoreCheckBoxChecked(System.Object,System.EventArgs)">
            <summary>
            Called when [store box checked].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSpeechRecognized(System.Object,System.Speech.Recognition.SpeechRecognizedEventArgs)">
            <summary>
            Called when [speech recognized].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Speech.Recognition.SpeechRecognizedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSpeechHypothesized(System.Object,System.Speech.Recognition.SpeechHypothesizedEventArgs)">
            <summary>
            Called when [speech hypothesized].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Speech.Recognition.SpeechHypothesizedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSendButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [send button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnSaveButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [save button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnStreamCheckBoxChecked(System.Object,System.EventArgs)">
            <summary>
            Called when [stream box checked].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnTaskManagerOptionClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [task manager option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnTabClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tab closed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnTabChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tab changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripToggleButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [toggle button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Called when [tool strip text box click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripTextBoxMouseEnter(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip text box mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripResetButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip refresh button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnUrlTextBoxDoubleClick(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [URL text box clicked].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" />
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripCancelButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip cancel button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripEraseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip erase button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripUploadButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip upload button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripSaveButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip save button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnToolStripSendButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [tool strip send button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnVoiceSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [voice selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageQualitySelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [guidance option click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageSizeSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [image size selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageDetailSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [image detail selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageBackgroundSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [image background selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageFormatSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [selected image size changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.OnImageStyleSelectionChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [image style selection changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ChatWindow.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and
            - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.ChatWindow.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.ChatWindow.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.ChatWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.ColorDialog">
            <summary>
            Interaction logic for ColorDialog.xaml
            </summary>
            <summary>
            ColorDialog
            </summary>
        </member>
        <member name="M:Bubba.ColorDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.ErrorWindow">
            <inheritdoc />
            <summary>
            Interaction logic for ErrorWindow.xaml
            </summary>
            <summary>
            ErrorWindow
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._entry">
            <summary>
            The path
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._exception">
            <summary>
            The exception
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._stackTrace">
            <summary>
            The stack trace
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._timerCallback">
            <summary>
            The timer callback
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._title">
            <summary>
            The title
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.ErrorWindow._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.#ctor(System.Exception)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ErrorWindow" />
            class.
            </summary>
            <param name="exception"> The exception. </param>
        </member>
        <member name="M:Bubba.ErrorWindow.#ctor(System.Exception,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.ErrorWindow" /> class.
            </summary>
            <param name="exception">The exception.</param>
            <param name="title">The title.</param>
        </member>
        <member name="P:Bubba.ErrorWindow.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:Bubba.ErrorWindow.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:Bubba.ErrorWindow.StackTrace">
            <summary>
            Gets or sets the stack trace.
            </summary>
            <value>
            The stack trace.
            </value>
        </member>
        <member name="M:Bubba.ErrorWindow.ClearDelegates">
            <summary>
            Clears the delegates.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.SetText">
            <summary>
            Sets the text.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.InitializeTimer">
            <summary>
            Initializes the timer.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.RegisterCallbacks">
            <summary>
            Initializes the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.InitializeTextBoxes">
            <summary>
            Initializes the text box.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.Busy">
            <summary>
            Busies this instance.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.Chill">
            <summary>
            Chills this instance.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="window">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.UpdateStatus(System.Object)">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.InvokeIf(System.Action)">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.InvokeIf(System.Action{System.Object})">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [loaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.OnClick(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.OnClose(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.ErrorWindow.OnVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary> Called when [load]. </summary>
            <param name="sender"> The sender. </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.ErrorWindow.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks
            associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.ErrorWindow.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c>
            to release both managed
            and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.ErrorWindow.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex"> The ex. </param>
        </member>
        <member name="M:Bubba.ErrorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.FileBrowser">
            <inheritdoc />
            <summary>
            Interaction logic for FileBrowser.xaml
            </summary>
            <seealso cref="T:System.Windows.Window" />
            <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            FileBrowser
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._count">
            <summary>
            The count
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._extension">
            <summary>
            The extension
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._fileExtension">
            <summary>
            The file extension
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._filePaths">
            <summary>
            The file paths
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._initialDirectory">
            <summary>
            The initial directory
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._initialPaths">
            <summary>
            The initial dir paths
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._entry">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._radioButtons">
            <summary>
            The radio buttons
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._seconds">
            <summary>
            The seconds
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._selectedFile">
            <summary>
            The selected file
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._selectedPath">
            <summary>
            The selected path
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.FileBrowser._timerCallback">
            <summary>
            The timer
            </summary>
        </member>
        <member name="E:Bubba.FileBrowser.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Bubba.FileBrowser.SelectedPath">
            <summary>
            Gets or sets the selected path.
            </summary>
            <value>
            The selected path.
            </value>
        </member>
        <member name="P:Bubba.FileBrowser.SelectedFile">
            <summary>
            Gets or sets the selected file.
            </summary>
            <value>
            The selected file.
            </value>
        </member>
        <member name="P:Bubba.FileBrowser.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="M:Bubba.FileBrowser.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.RegisterCallbacks">
            <summary>
            Initializes the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.InitializeTimer">
            <summary>
            Initializes the timer.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.InitializeButtons">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.InvokeIf(System.Action)">
            <summary>
            Invokes if needed.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.FileBrowser.InvokeIf(System.Action{System.Object})">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.FileBrowser.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.ClearCallbacks">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.ClearDelegates">
            <summary>
            Clears the delegates.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.SendNotification(System.String)">
            <summary>
            Sends the notification.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:Bubba.FileBrowser.SendMessage(System.String)">
            <summary>
            Shows the splash message.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.UpdateStatus(System.Object)">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.SetImage">
            <summary>
            Sets the extension.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.RegisterRadioButtonEvents">
            <summary>
            Sets the RadioButton events.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.GetCheckBoxes">
            <summary>
            Gets the radio buttons.
            </summary>
            <returns>
            List( MetroRadioButton )
            </returns>
        </member>
        <member name="M:Bubba.FileBrowser.PopulateListBox">
            <summary>
            Populates the ListBox.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.PopulateListBox(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Populates the ListBox.
            </summary>
            <param name="filePaths">The file paths.</param>
        </member>
        <member name="M:Bubba.FileBrowser.CreateListViewFilePaths">
            <summary>
            Gets the ListView paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBrowser.GetFilePaths">
            <summary>
            Gets the file paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBrowser.GetFilePathsAsync">
            <summary>
            Gets the file paths asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.FileBrowser.CreateInitialDirectoryPaths">
            <summary>
            Gets the initial dir paths.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="M:Bubba.FileBrowser.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.FileBrowser.OnRadioButtonSelected(System.Object,System.EventArgs)">
            <summary>
            Called when [RadioButton selected].
            </summary>
            <param name="sender">The sender.</param>
            <param name = "e" > </param>
        </member>
        <member name="M:Bubba.FileBrowser.OnCloseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [closing].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.FileBrowser.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.FileBrowser.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks
            associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.FileBrowser.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c>
            to release both managed
            and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.FileBrowser.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.FileBrowser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.GptFileDialog">
            <inheritdoc />
            <summary>
            Interaction logic for GptFileDialog.xaml
            </summary>
            <summary>
            GptFileDialog
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._count">
            <summary>
            The count
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._extension">
            <summary>
            The extension
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._fileExtension">
            <summary>
            The file extension
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._filePaths">
            <summary>
            The file paths
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._initialDirectory">
            <summary>
            The initial directory
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._initialPaths">
            <summary>
            The initial dir paths
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._entry">
            <summary>
            The locked object
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._radioButtons">
            <summary>
            The radio buttons
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._seconds">
            <summary>
            The seconds
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._selectedFile">
            <summary>
            The selected file
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._selectedPath">
            <summary>
            The selected path
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._timerCallback">
            <summary>
            The timer
            </summary>
        </member>
        <member name="E:Bubba.GptFileDialog.PropertyChanged">
            <inheritdoc />
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="F:Bubba.GptFileDialog._httpClient">
            <summary>
            The HTTP client
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.GptFileDialog" /> class.
            </summary>
        </member>
        <member name="P:Bubba.GptFileDialog.SelectedPath">
            <summary>
            Gets or sets the selected path.
            </summary>
            <value>
            The selected path.
            </value>
        </member>
        <member name="P:Bubba.GptFileDialog.SelectedFile">
            <summary>
            Gets or sets the selected file.
            </summary>
            <value>
            The selected file.
            </value>
        </member>
        <member name="P:Bubba.GptFileDialog.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="M:Bubba.GptFileDialog.RegisterCallbacks">
            <summary>
            Initializes the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.InitializeTimer">
            <summary>
            Initializes the timer.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.InitializeButtons">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.InvokeIf(System.Action)">
            <summary>
            Invokes if needed.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.InvokeIf(System.Action{System.Object})">
            <summary>
            Invokes if.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.Busy">
            <summary>
            Begins the initialize.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.Chill">
            <summary>
            Ends the initialize.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.ClearCallbacks">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.ClearDelegates">
            <summary>
            Clears the delegates.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.SendNotification(System.String)">
            <summary>
            Sends the notification.
            </summary>
            <param name="message">
            The message.
            </param>
        </member>
        <member name="M:Bubba.GptFileDialog.SendMessage(System.String)">
            <summary>
            Shows the splash message.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.UpdateStatus(System.Object)">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.RegisterRadioButtonEvents">
            <summary>
            Sets the RadioButton events.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.GetRadioButtons">
            <summary>
            Gets the radio buttons.
            </summary>
            <returns>
            List( MetroRadioButton )
            </returns>
        </member>
        <member name="M:Bubba.GptFileDialog.PopulateListBox">
            <summary>
            Populates the ListBox.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.PopulateListBox(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Populates the ListBox.
            </summary>
            <param name="filePaths">The file paths.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.PopulateFilesAsync">
            <summary>
            Sets the models.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.CreateListViewFilePaths">
            <summary>
            Gets the ListView paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptFileDialog.GetFilePaths">
            <summary>
            Gets the file paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptFileDialog.GetFilesAsync">
            <summary>
            Gets the file paths asynchronous.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bubba.GptFileDialog.CreateInitialDirectoryPaths">
            <summary>
            Gets the initial dir paths.
            </summary>
            <returns>
            IList(string)
            </returns>
        </member>
        <member name="M:Bubba.GptFileDialog.OnLoaded(System.Object,System.EventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.OnRadioButtonSelected(System.Object,System.EventArgs)">
            <summary>
            Called when [RadioButton selected].
            </summary>
            <param name="sender">The sender.</param>
            <param name = "e" > </param>
        </member>
        <member name="M:Bubba.GptFileDialog.OnClosing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when [closing].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.OnCloseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [close button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.OnPropertyChanged(System.String)">
            <summary>
            Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.Dispose">
            <inheritdoc />
            <summary>
            Performs application-defined tasks
            associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Bubba.GptFileDialog.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c>
            to release both managed
            and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.GptFileDialog.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.GptFileDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.Notification">
            <inheritdoc />
            <summary>
            Interaction logic for Notification.xaml
            </summary>
            <summary>
            Notification
            </summary>
        </member>
        <member name="F:Bubba.Notification._borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Bubba.Notification._borderHover">
            <summary>
            The border hover color
            </summary>
        </member>
        <member name="F:Bubba.Notification._seconds">
            <summary>
            The seconds
            </summary>
        </member>
        <member name="F:Bubba.Notification._statusUpdate">
            <summary>
            The update status
            </summary>
        </member>
        <member name="F:Bubba.Notification._text">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.Notification._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.Notification._backColor">
            <summary>
            The back color
            </summary>
        </member>
        <member name="F:Bubba.Notification._backColorBrush">
            <summary>
            The back color brush
            </summary>
        </member>
        <member name="F:Bubba.Notification._backHover">
            <summary>
            The back hover color
            </summary>
        </member>
        <member name="F:Bubba.Notification._backHoverBrush">
            <summary>
            The back hover brush
            </summary>
        </member>
        <member name="F:Bubba.Notification._borderColorBrush">
            <summary>
            The border color brush
            </summary>
        </member>
        <member name="F:Bubba.Notification._borderHoverBrush">
            <summary>
            The border hover brush
            </summary>
        </member>
        <member name="F:Bubba.Notification._foreColor">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Bubba.Notification._foreColorBrush">
            <summary>
            The fore color brush
            </summary>
        </member>
        <member name="F:Bubba.Notification._foreHover">
            <summary>
            The fore hover color
            </summary>
        </member>
        <member name="F:Bubba.Notification._foreHoverBrush">
            <summary>
            The fore hover brush
            </summary>
        </member>
        <member name="P:Bubba.Notification.Text">
            <summary>
            Gets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:Bubba.Notification.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Notification" /> class.
            </summary>
        </member>
        <member name="M:Bubba.Notification.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.Notification" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.Notification.OnClick(System.Object,System.EventArgs)">
            <summary>
            Notifications the close.
            </summary>
        </member>
        <member name="M:Bubba.Notification.RegisterCallbacks">
            <summary>
            Registers the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.Notification.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.Notification.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.Notification.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.Notification.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.Notification.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.Notification.OnLoad(System.Object,System.EventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The
            <see cref="T:System.EventArgs" />
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.Notification.OnActivated(System.Object,System.EventArgs)">
            <summary>
            Called when [activated].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Bubba.Notification.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.Notification.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.SearchDialog">
            <inheritdoc />
            <summary>
            Interaction logic for SearchDialog.xaml
            </summary>
            <summary>
            SearchDialog
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._queryPrefix">
            <summary>
            The domain
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._results">
            <summary>
            The results
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._keywordInput">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._keywordLabelPrefix">
            <summary>
            The keyword prefix
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._domainLabelPrefix">
            <summary>
            The domain prefix
            </summary>
        </member>
        <member name="F:Bubba.SearchDialog._stopWatch">
            <summary>
            The stop watch
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SearchDialog" /> class.
            </summary>
        </member>
        <member name="P:Bubba.SearchDialog.Results">
            <summary>
            Gets or sets the results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="M:Bubba.SearchDialog.RegisterCallbacks">
            <summary>
            Registers the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.InitializeTextBox">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.InitializeButtons">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.InitializeComboBox">
            <summary>
            Initializes the ComboBox.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SearchDialog.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SearchDialog.ClearCallbacks">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.SearchDialog.OnCloseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [close button clicked].
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The
            <see cref="T:System.EventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.SearchDialog.OnLookupButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [okay button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SearchDialog.OnClearButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [clear button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SearchDialog.OnInputTextChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [input text changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SearchDialog.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.SearchDialog.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.SearchDialog.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.SearchDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.SplashMessage">
            <inheritdoc />
            <summary>
            Interaction logic for SplashMessage.xaml
            </summary>
            <summary>
            SplashMessage
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._allowFocus">
            <summary>
            The allow focus
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._backColor">
            <summary>
            The back color
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._borderColor">
            <summary>
            The border color
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._lines">
            <summary>
            The lines
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._messageColor">
            <summary>
            The fore hover color
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._path">
            <summary>
            The path
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._seconds">
            <summary>
            The seconds
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._statusUpdate">
            <summary>
            The update status
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._title">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._message">
            <summary>
            The message
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._titleColor">
            <summary>
            The fore color
            </summary>
        </member>
        <member name="F:Bubba.SplashMessage._withoutActivation">
            <summary>
            The without activation
            </summary>
        </member>
        <member name="P:Bubba.SplashMessage.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>
            The lines.
            </value>
        </member>
        <member name="P:Bubba.SplashMessage.IsBusy">
            <summary>
            Gets a value indicating whether this instance is busy.
            </summary>
            <value>
            <c> true </c>
            if this instance is busy; otherwise,
            <c> false </c>
            </value>
        </member>
        <member name="M:Bubba.SplashMessage.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SplashMessage" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.SplashMessage.#ctor(System.String,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Bubba.SplashMessage" /> class.
            </summary>
            <param name="title">The title.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Bubba.SplashMessage.RegisterCallbacks">
            <summary>
            Initializes the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.InitializeDelegates">
            <summary>
            Initializes the delegates.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.InitializeLabels">
            <summary>
            Initializes the labels.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.InitializeTextBoxes">
            <summary>
            Initializes the text box.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.InitializeTimer">
            <summary>
            Initializes the timer.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SplashMessage.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SplashMessage.UpdateStatus">
            <summary>
            Updates the status.
            </summary>
        </member>
        <member name="M:Bubba.SplashMessage.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SplashMessage.OnVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SplashMessage.OnClick(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SplashMessage.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.SplashMessage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Bubba.SystemDialog">
            <inheritdoc />
            <summary>
            Interaction logic for SystemDialog.xaml
            </summary>
            <summary>
            SystemDialog
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._entry">
            <summary>
            The entry
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._statusUpdate">
            <summary>
            The status update
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._theme">
            <summary>
            The theme
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._instructions">
            <summary>
            The domain
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._results">
            <summary>
            The results
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._input">
            <summary>
            The input
            </summary>
        </member>
        <member name="F:Bubba.SystemDialog._stopWatch">
            <summary>
            The stop watch
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Bubba.SystemDialog" /> class.
            </summary>
        </member>
        <member name="P:Bubba.SystemDialog.Instructions">
            <summary>
            Gets or sets the results.
            </summary>
            <value>
            The results.
            </value>
        </member>
        <member name="P:Bubba.SystemDialog.Input">
            <summary>
            Gets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="M:Bubba.SystemDialog.RegisterCallbacks">
            <summary>
            Registers the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.InitializeButtons">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.InitializeTextBox">
            <summary>
            Initializes the buttons.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.InitializeLabels">
            <summary>
            Initializes the ComboBox.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.FadeInAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the in asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SystemDialog.FadeOutAsync(System.Windows.Window,System.Int32)">
            <summary>
            Fades the out asynchronous.
            </summary>
            <param name="form">The o.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Bubba.SystemDialog.ClearCallbacks">
            <summary>
            Clears the callbacks.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.OnLoad(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [load].
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.SystemDialog.OnCloseButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [close button clicked].
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The
            <see cref="T:System.Windows.RoutedEventArgs"/>
            instance containing the event data.
            </param>
        </member>
        <member name="M:Bubba.SystemDialog.OnGoButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [okay button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SystemDialog.OnClearButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [clear button click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SystemDialog.OnInputTextChanged(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when [input text changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="M:Bubba.SystemDialog.Dispose">
            <inheritdoc />
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Bubba.SystemDialog.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c>
            to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Bubba.SystemDialog.Fail(System.Exception)">
            <summary>
            Fails the specified ex.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Bubba.SystemDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
